var compList = [];
var CompItemList = [];
var ConItemListSave = [];
var ConItemList = [];
var ConItemListAvg = [];
var ItemStockList = [];
var BalQtyList = [];
var CompSlNo = 0;
var GLen = 0;
var GWid = 0;
var GGsm = 0;
var GGram = 0;
var ItemId = 0;
var PLID = 0;
var Mod = 0;
var StyleRId = 0;
var Width = 0;
var Pattern = 0;
var CGsm = 0;
var Len = 0;
var Wght = 0;
var CheckFabric = 0;
var Itemrowindex = -1;
var rowindex = -1;
var index = 0;
var indexforfill = -1;
var fillvar = '';
var indexforfabfill = -1;
var fabfillvar = '';
var GreyList = [];
var PlanCompFabricDet = [];
var PlanCompFabricDetSave = [];
var Compindex = -1;
var Fabindex = -1;
var typechk = '';
var processloss = [];
var Yarnid = 0;
var FabricId = 0;
var Fabric = '';
var CompSlNo = 0;
var Yplanmasid = 0;
var gsm = 0;
var parts = 0;
var type = '';
var today = '';
/////////////Yarn Details/////////////////
var PlanYarn = [];
var PlanYarnSave = [];
var PlanYarnDyeing = [];
var PlanYarnDyeingSave = [];
var EPlanYarnDyeing = [];
var PlanYarnDet = [];
var PlanYarnDetSave = [];
var PlanYarnDetSaveStkChk = [];
var YarnDyeItemList = [];
var ItemId = 0;
var StyleRowId = 0;
var PlanId = 0;
var Bper = 0;
var Eweight = 0;
var TEWeight = 0;
var NPlanYarnDyeing = [];
var YlNo = 0;
var SyNo = 0;
var SDlNo = 0;
var FID = 0;
var BCID = 0;
var YMasID = 0;
var GYDetID = 0;
var Wght = 0;
var KQty = 0;
var VYSlNo = 0;
var Dying = 0;
var FBRID = 0;
var fid = 0;
var BCLID = 0;
var OrdNo = 0;
var StyleId = 0;
var StyleRId = 0;
var Itemrowindex = -1;
var slno = 0;
var cl = 0;
var yslno = 0;
var yarndet = [];
var wt = 0;
var index = -1;
var ctry = [];
var Weight = 0;
var fabid = 0;
var CPItemList = [];
var DiaSize = "";
var yneditslno = 0;
var PlanLoss = [];
var PlanLossSave = [];
var PlanYarnLoss = [];
var PlanYarnLossSave = [];
var Fabriclist = [];
var YarnMasSl = '';
var YDetSlNo = 0;
var Fplid = 0;
var YarndetCompsn = 0;
var YarndetSlno = 0;
var CPRGlist = [];
var StockTranferMode = 0;
var BaseColorlist = [];
var FinishColorlist = [];
var Userid = 0;
var UserName = 0;
var Guserid = 0;
var CpyMode = 0;
var YarnDyeing = [];
var ysslno = 0;
var YsBp = 0;
var EnbTranDate = 0;
var OrdApp = "N";
var CEPItemList = [];
var checktype = 0;
var checkgroup = 0;
var checkpattern = 0;
var ChkMaj = 0;
var CheckAvgMeas = 0;
/////////////////////////fabric
var PlanFabric = [];

var PlanFabricDet = [];
var fcompno = 0;
var planid = 0;
var Cplan = 'N';
var Yplan = 'N';
var Fplan = 'N';
var chklist = [];
var connewadd = 0;
var BaseStockList = [];
var FinishStockList = [];
var fgcolorid = 0;
var ffabricid = 0;
var basecolorid = 0;
var PlanYarnPurchase = [];
var PlanFabricDC = [];
var PlanFabPurchase = [];
var PlanYarnPOQTY = [];

var FGarcolorid = 0;
//var CompPlanningFabric = [];
//var PlanFabric = [];
//var PlanFabricDet = [];
//var FabConItemList = [];
//var ConFabItemList = [];
//var PlanLoss = [];
//var CmNo = 0;
//var PlId = 0;
//var Mod = 0;
//var StyleRId = 0;
//var CheckYarn = 0;
//var bcid = 0;
//var index = -1;

///////////////////////////
var ConAmend = 'N';
var FabAmend = 'N';
var YarnAmend = 'N';
var fabupflag = 0;
var PlanLock = [];
var Bplan = 'N';
var BitAmend = 'N';
var BitSizelist = [];	
var BitItemlist = [];	
var PlanCompBitFabricDet = [];	
var PlanCompBitFabricDetSave = [];	
var bitrowindex = -1;	
var indexforbitfabfill = -1;	
var bitfabfillvar = '';	
var PrintColorlist = [];
var DispatchClosed = "N";
var ViewStock = 0;
var transbalqty = 0;
var FabricBomlist = 0;
var TransType = 'Y';
var TransItemlist = [];

var FabricStockcheck = [];
var TransStage = '';

$(document).ready(function () {
    debugger;
    var qrStr = window.location.search;
    var spQrStr = qrStr.substring(1);
    var arrQrStr = new Array();
    var arr = spQrStr.split('?');

    for (var i = 0; i < arr.length; i++) {
        var queryvalue = arr[i].split('=');
    }
    ItemId = queryvalue[1];
    var StyleRowId = queryvalue[3];
    StyleRId = queryvalue[3];
    var PlId = queryvalue[5];
    planid = PlId;
    Mod = queryvalue[7];
    PLID = PlId;
    Guserid = $("#hdnUserid").data('value');
    UserName = $("#hdnusername").data('value');
    EnbTranDate = $("#hdnETransDate").data('value');
    basecolorid = $("#hdnBaseColorid").data('value');
    checkpattern = 1;

    if (EnbTranDate == "Y") {
        $("#txtEntryDate").prop("disabled", true);

    } else {
        $("#txtEntryDate").prop("disabled", false);
    }



    $('#myModal').modal('show');

    $('#ddlCpyStyle').empty();
    $('#ddlCpyStyle').append($('<option/>').val('0').text('--Select Style--'));
    $('#ddlCpyItem').empty();
    $('#ddlCpyItem').append($('<option/>').val('0').text('--Select Item--'));
    //$("#ALType").disabled();
    if (Mod == 0) {
        $("#CompList").hide();
        $("#FabricLossId").hide();
        $("#YarnDetId").hide();
        $("#YarnLossId").hide();
    }

    getfabric();

    loadcolor();
    loadprintlistcolor();
    loadGSize();
    loadBitItem();

    LoadPlanFabriComp(PlId);
    ///Fabric Load

    ///

    $("#SaveConTable").hide();

    $('#txtHPlanId').val(PlId);

    if (PlId > 0 && Mod == 1) {
       // $('#ConUpdate').show();
        if (DispatchClosed == "N") {
            $('#ConUpdate').show();
        }
        else if (DispatchClosed == "Y") {
            $('#ConUpdate').hide();
        }

        $('#ConAdd').hide();
        $('#btnCpyList').attr("disabled", true);
    } else if (Mod == 0) {
        $('#ConAdd').show();
        $('#ConUpdate').hide();
        $('#btnCpyList').attr("disabled", false);
    }
    else if (Mod == 2) {
        $('#ConAdd').hide();
        $('#ConUpdate').hide();

        //$('#ConDelete').show();
        if (DispatchClosed == "N") {
            $('#ConDelete').show();
        }
        else if (DispatchClosed == "Y") {
            $('#ConDelete').hide();
        }

        $('#btnCpyList').attr("disabled", true);
    }

    getDate();


    //Yarn Dyeing
    //  if (Mod == 0) {
    var BCID = 0;
    var FID = 0;
    var CompId = 0;
    var YlNo = 0;
    LoadYarnDyeing(StyleRowId, ItemId, BCID, FID, CompId, YlNo);
    //}
    //

    LoadComponentDDL("#ddlComponent");
    LoadFabricDDL("#ddlFabric");

    if (queryvalue[9] == "Y") {
        OrdApp = "Y";
        $('#btnAdd').hide();
        $('#btnUpdate').hide();
        $('#btnDelete').hide();
    }
    var tbl = $('#tblyarnDetails');
    tbl.DataTable().column(19).visible(false);
    //if (Mod == 1 || Mod == 2) {
    //    EditDetCompPlanList(ItemId, StyleRowId, PLID);
    //    getfabric();
    //    var CompSNo = 1;

    //    var BCID = 0;
    //    var FID = 0;
    //    var CompId = 0;
    //    var YlNo = 0;
    //    LoadYarnDyeing(StyleRowId, ItemId, BCID, FID, CompId, YlNo);


    //}

    //$(document).on('click', '#profile-tab1', function (e) {
    //    debugger;
    //    CheckRights("PlanFabric");
    //});
    //$(document).on('click', '#profile-tab2', function (e) {
    //    debugger;
    //    CheckRights("PlanYarn");
    //});

    $(document).on('keyup', '.calclength', function (e) {


        var table = $('#tCPIbody').DataTable();
        var sno = table.row($(this).parents('tr')).data()["CPlanSlNo"];
        var cl = table.row($(this).parents('tr')).data()["CompSlNo"];
        var Val = $(this).val();
        Len = Val;
        fillvar = 'L';
        rowindex = $(this).closest('tr').index();
        indexforfill = rowindex;

        $.each(ConItemList, function () {
            if (this.CPlanSlNo == sno) {
                this.Length = Len;

            }
        });

        //loadAdConTable(ConItemList);        
        var table = $('#tCPIbody').DataTable();
        var data = table.rows().data();

        $('input[id=txtGram]').each(function (ig) {
            if (data[ig].CPlanSlNo == sno) {
                var row = $(this).closest('tr');
                row.find('#txtLen').val(Len);

            }
        });

        $.each(ConItemListSave, function () {
            if (this.CompSlNo == cl && this.CPlanSlNo == sno) {
                this.Length = Len;

            }
        });
        loadconSaveTable(ConItemListSave);

    });
    $(document).on('keyup', '.calcallowlength', function (e) {


        var table = $('#tCPIbody').DataTable();
        var sno = table.row($(this).parents('tr')).data()["CPlanSlNo"];
        var cl = table.row($(this).parents('tr')).data()["CompSlNo"];
        var Val = $(this).val();
        Len = Val;
        fillvar = 'AL';

        rowindex = $(this).closest('tr').index();
        indexforfill = rowindex;

        $.each(ConItemList, function () {
            if (this.CPlanSlNo == sno) {
                this.AlloLen = Len;

            }
        });

        //loadAdConTable(ConItemList);        
        var table = $('#tCPIbody').DataTable();
        var data = table.rows().data();

        $('input[id=txtGram]').each(function (ig) {
            if (data[ig].CPlanSlNo == sno) {
                var row = $(this).closest('tr');
                row.find('#txtallowLen').val(Len);

            }
        });

        $.each(ConItemListSave, function () {
            if (this.CompSlNo == cl && this.CPlanSlNo == sno) {
                this.AlloLen = Len;

            }
        });
       // loadconSaveTable(ConItemListSave);

    });

    $(document).on('change', '.calcpattern', function (e) {
        debugger;

        var table = $('#tCPIbody').DataTable();
        var CPlan = table.row($(this).parents('tr')).data()["CPlanSlNo"];
        var quantity = table.row($(this).parents('tr')).data()["Prdn_Qty"];
        var len = table.row($(this).parents('tr')).data()["Length"];
        var allowlen = table.row($(this).parents('tr')).data()["AlloLen"];
        var wid = table.row($(this).parents('tr')).data()["Width"];
        var allowwid = table.row($(this).parents('tr')).data()["AllowWid"];
        var gsm = table.row($(this).parents('tr')).data()["GSM"];
        var Colorid = table.row($(this).parents('tr')).data()["ColorID"];
        var Sizeid = table.row($(this).parents('tr')).data()["SizeId"];
        var Sno = table.row($(this).parents('tr')).data()["CompSlNo"];
        var GSizeid = table.row($(this).parents('tr')).data()["GreyWidthID"];
        var FSizeid = table.row($(this).parents('tr')).data()["FinishWidthID"];


        for (var t = 0; t < compList.length; t++) {
            if (compList[t].CompSlNo == Sno) {
                var parts = compList[t].No_Of_Parts;
            }
        }

        var Val = $(this).val();
        Pattern = Val;
        fillvar = 'P';
        rowindex = $(this).closest('tr').index();
        indexforfill = rowindex;

        $.each(ConItemList, function () {
            if (this.CPlanSlNo == CPlan) {
                this.Pattern = Pattern;

            }
        });

        //loadAdConTable(ConItemList);


        $.each(ConItemListSave, function () {
            if (this.CompSlNo == Sno && this.CPlanSlNo == CPlan) {
                this.Pattern = Pattern;

            }
        });
        loadconSaveTable(ConItemListSave);

        var totlen = parseFloat(len) + parseFloat(allowlen);
        var totwid = parseFloat(allowwid) + parseFloat(wid);
        var res1 = parseFloat(parseFloat(totlen * totwid) / Pattern);


        res1 = res1.toFixed(3);
        var res = (res1 * gsm) / 10000;
        Wght = quantity * res / 1000;

        var finalresult = res.toFixed(3);
        var finalwgt = (Wght * parts).toFixed(3);

        $.each(ConItemList, function () {
            if (this.CPlanSlNo == CPlan) {
                this.Pattern = Pattern;
                this.GSM = gsm;
                this.Grammage = finalresult;
                this.Weight = finalwgt;

            }
        });

        //loadAdConTable(ConItemList);


        var table = $('#tCPIbody').DataTable();
        var data = table.rows().data();

        $('input[id=txtGram]').each(function (ig) {
            if (data[ig].CPlanSlNo == CPlan) {
                var row = $(this).closest('tr');
                row.find('#txtWidth').val(wid);
                row.find('#txtGsm').val(gsm);
                row.find('#txtGram').val(finalresult);
                row.find('#txtWght').val(finalwgt);
                row.find('#txtPattern').val(Pattern);

            }
        });


        $.each(ConItemListSave, function () {
            if (this.CompSlNo == Sno && this.CPlanSlNo == CPlan) {

                this.GSM = gsm;
                this.Grammage = finalresult;
                this.Weight = finalwgt;
                this.Pattern = Pattern;
            }
        });

       // loadconSaveTable(ConItemListSave);



        //if (Colorid == 0 && Sizeid == 0) {
        //    //Calcavgfab(Val, res, Sno);
        //    //return true;

        //    var totprdqty = $('#txtProdQty').val();



        //    for (var d = 0; d < PlanCompFabricDet.length; d++) {
        //        var quan = PlanCompFabricDet[d].Prdn_Qty;
        //        var rt = finalwgt / quantity;
        //        PlanCompFabricDet[d].Weight = (rt * quan).toFixed(3);
        //        PlanCompFabricDet[d].ActWeight = (rt * quan).toFixed(3);
        //    }
        //    //loadCompFabTable(PlanCompFabricDet);
        //    var fabtable = $('#tCDbody').DataTable();
        //    var fabdata = fabtable.rows().data();

        //    $('input[id=txtPurQty]').each(function (ig) {
        //        var row = $(this).closest('tr');
        //        var de = row.find('#txtfabPrdQty').val();
        //        var rd = finalwgt / quantity;
        //        row.find('#txtfabActwt').val((rd * de).toFixed(3));
        //        row.find('#txtfabwt').val((rd * de).toFixed(3));
        //        row.find('#txtfabgram').val(finalresult);

        //    });

        //    $('input[id=txtPurQty]').each(function (ig) {
        //        if (fabdata[ig].CompSlNo == Sno) {
        //            var row = $(this).closest('tr');
        //            row.find('#txtPurQty').val(0);
        //            row.find('#txtFPurQty').val(0);
        //        }
        //    });
        //    //var bclrid = 0;
        //    //var bclr = '';

        //    for (var d = 0; d < PlanCompFabricDetSave.length; d++) {
        //        if (PlanCompFabricDetSave[d].CompSlNo == Sno) {
        //            var quan = PlanCompFabricDetSave[d].Prdn_Qty;
        //            var rt = finalwgt / quantity;
        //            PlanCompFabricDetSave[d].Weight = (rt * quan).toFixed(3);
        //            PlanCompFabricDetSave[d].ActWeight = (rt * quan).toFixed(3);
        //            PlanCompFabricDetSave[d].GreyWidthID = GSizeid;
        //            PlanCompFabricDetSave[d].FinishWidthID = FSizeid;
        //        }
        //    }

        //    loadCompFabSaveTable(PlanCompFabricDetSave);

        //    //yarn
        //    var result = [];
        //    $.each(PlanCompFabricDet, function (i, e) {
        //        var matchingItems = $.grep(result, function (item) {
        //            return item.BColorID === e.BColorID;
        //        });
        //        if (matchingItems.length === 0) {
        //            result.push(e);
        //        }
        //    });



        //    if (result.length > 0) {
        //        //PlanYarnSave = [];
        //        PlanYarn = [];

        //        PlanYarnSave = jQuery.grep(PlanYarnSave, function (value) {
        //            return value.SlNo != CompSlNo;
        //        });
        //        //PlanYarnSave = jQuery.grep(yarnlist, function (value) {
        //        //    return value.FabricID != fd;
        //        //});

        //        var Cs = result[0].CompSlNo;
        //        var ComponentId = 0;
        //        var Component = '';
        //        for (var t = 0; t < compList.length; t++) {
        //            if (compList[t].CompSlNo == Cs) {
        //                ComponentId = compList[t].ComponentID;
        //                Component = compList[t].ComponentName;
        //            }
        //        }

        //        //if (Mod != 0) {
        //        //    PlanYarnSave = $.grep(PlanYarnSave, function (e) {
        //        //        return e.SlNo != CompSlNo;
        //        //    });
        //        //}
        //        for (var j = 0; j < result.length; j++) {


        //            if (PlanYarn.length == 0) {
        //                leng = 1;

        //            }
        //            else {
        //                leng++;

        //            }
        //            var bd = 0;
        //            bd = result[j].BColorID;
        //            var snumb = result[j].snumb;
        //            var csln = result[j].CompSlNo;
        //            var totalqty = 0;
        //            for (var u = 0; u < PlanCompFabricDetSave.length; u++) {
        //                if (PlanCompFabricDetSave[u].BColorID == bd && PlanCompFabricDetSave[u].CompSlNo == csln) {

        //                    var qty = PlanCompFabricDetSave[u].Weight;
        //                    totalqty = totalqty + parseFloat(qty);
        //                }
        //            }


        //            var bcqty = 0;
        //            for (var r = 0; r < PlanCompFabricDetSave.length; r++) {
        //                if (PlanCompFabricDetSave[r].BColorID == bd && PlanCompFabricDetSave[r].CompSlNo == s) {

        //                    var qty = PlanCompFabricDetSave[r].BColorPQty;
        //                    bcqty = bcqty + parseFloat(qty);
        //                }
        //            }


        //            var finqty = 0;
        //            for (var n = 0; n < PlanCompFabricDetSave.length; n++) {
        //                if (PlanCompFabricDetSave[n].BColorID == bd && PlanCompFabricDetSave[n].CompSlNo == s) {

        //                    var qty = PlanCompFabricDetSave[n].FColorPQty;
        //                    finqty = finqty + parseFloat(qty);
        //                }
        //            }


        //            var totclrqty = parseFloat(bcqty) + parseFloat(finqty);

        //            //for (var w = 0; w < PlanCompFabricDet.length; w++) {
        //            //    if (PlanCompFabricDet[w].BColorID == bd && PlanCompFabricDet[w].snumb == sno) {

        //            totalqty = totalqty - totclrqty;
        //            totalqty = totalqty.toFixed(3);
        //            //    }
        //            //}

        //            var yarnlistobj = {
        //                PlanId: 0,
        //                Fabric: result[j].Fabric,
        //                FabricID: result[j].FabricID,
        //                Fabric_ColorId: result[j].BColorID,
        //                Fabric_Weight: totalqty,
        //                Fabric_type: result[j].type,//result[j].FabricType,
        //                EntryDate: new Date($('#txtEntryDate').val()),
        //                BColor: result[j].Bcolor,
        //                SlNo: result[j].CompSlNo,
        //                YPlanmasID: 0,
        //                YSlno: leng,
        //                ComponentId: ComponentId,
        //                Component: Component
        //            }




        //            PlanYarnSave.push(yarnlistobj);
        //            PlanYarn.push(yarnlistobj);
        //        }
        //    }

        //    //loadYarndetTab
        //    PlanYarnSave = jQuery.grep(PlanYarnSave, function (value) {
        //        return value.Fabric_Weight != 0;
        //    });
        //    loadYarnSavedetTab(PlanYarnSave);


        //    //var ctry = [];
        //    //ctry = PlanYarnSave;
        //    //ctry = $.grep(ctry, function (e) {
        //    //    if (e.SlNo == s) {
        //    //        return e;
        //    //    }
        //    //});
        //    //PlanYarn = ctry;

        //    loadYarndetTab(PlanYarn);


        //    //var totalamnt = 0;
        //    //for (var e = 0; e < PlanCompFabricDet.length; e++) {
        //    //    if (PlanCompFabricDet[e].CompSlNo == Sno && PlanCompFabricDet[e].Bcolor == bclr) {
        //    //        var amount = PlanCompFabricDet[e].Weight;
        //    //        totalamnt = totalamnt + parseFloat(amount);
        //    //    }
        //    //}

        //    //totalamnt = totalamnt.toFixed(3);
        //    //for (var e = 0; e < PlanYarnSave.length; e++) {
        //    //    if (PlanYarnSave[e].SlNo == Sno && PlanYarnSave[e].BColor == bclr) {
        //    //        PlanYarnSave[e].Fabric_Weight = (totalamnt);
        //    //    }
        //    //}
        //    //loadYarnSavedetTab(PlanYarnSave);


        //    //PlanYarn = $.grep(PlanYarnSave, function (e) {
        //    //    return e.SlNo == Sno;
        //    //});
        //    //loadYarndetTab(PlanYarn);

        //    totwght();

        //    //Yarndet

        //    if (PlanYarnDetSave.length > 0) {


        //        var ys = PlanYarn[0].YSlno;

        //        for (var b = 0; b < PlanYarnSave.length; b++) {
        //            if (PlanYarnSave[b].SlNo == CompSlNo) {
        //                var pysl = PlanYarnSave[b].YSlno;
        //                var cmpsl = PlanYarnSave[b].SlNo;
        //                var wgt = PlanYarnSave[b].Fabric_Weight;
        //                var bcid = PlanYarnSave[b].Fabric_ColorId;

        //                for (var m = 0; m < PlanYarnDetSave.length; m++) {
        //                    if (PlanYarnDetSave[m].CompSno == cmpsl) {
        //                        var s = PlanYarnDetSave[m].SlNo;
        //                        if (PlanYarnDetSave[m].BaseColorID == bcid) {
        //                            YsBp = 1;
        //                            var pr = PlanYarnDetSave[m].Knit_In_Per;
        //                            var re = parseFloat((pr * wgt) / 100);
        //                            re = re.toFixed(3);
        //                            PlanYarnDetSave[m].Knit_In_Qty = re;
        //                            PlanYarnDetSave[m].Knit_In_ActQty = re;
        //                            PlanYarnDetSave[m].YSlNo = pysl;
        //                            PlanYarnDetSave[m].SlNo = s;
        //                            //PlanYarnDetSave[m].FabricID = FabricId;
        //                        }

        //                    }
        //                }
        //            }
        //        }
        //        PlanYarnDet = $.grep(PlanYarnDetSave, function (e) {
        //            return e.CompSno == CompSlNo && e.YSlNo == ys;
        //        });
        //        Loadsepyarn(PlanYarnDet);
        //        LoadsepSaveyarn(PlanYarnDetSave);
        //    }

        //    //yarn dyeing
        //    var totgc = [];
        //    for (var e = 0; e < PlanYarnDyeingSave.length; e++) {
        //        if (PlanYarnDyeingSave[e].CompSlNo == CompSlNo) {
        //            var gid = PlanYarnDyeingSave[e].Garment_ColorID;
        //            var totalqty = 0;
        //            for (var q = 0; q < PlanCompFabricDetSave.length; q++) {
        //                if (PlanCompFabricDetSave[q].CompSlNo == CompSlNo && PlanCompFabricDetSave[q].ColorID == gid) {

        //                    var qty = PlanCompFabricDetSave[q].Weight;
        //                    totalqty = totalqty + parseFloat(qty);
        //                }
        //            }
        //            var bcqty = 0;
        //            for (var w = 0; w < PlanCompFabricDetSave.length; w++) {
        //                if (PlanCompFabricDetSave[w].CompSlNo == CompSlNo && PlanCompFabricDetSave[w].ColorID == gid) {
        //                    var qty = PlanCompFabricDetSave[w].BColorPQty;
        //                    bcqty = bcqty + parseFloat(qty);
        //                }
        //            }
        //            var finqty = 0;
        //            for (var p = 0; p < PlanCompFabricDetSave.length; p++) {
        //                if (PlanCompFabricDetSave[p].CompSlNo == CompSlNo && PlanCompFabricDetSave[p].ColorID == gid) {

        //                    var qty = PlanCompFabricDetSave[p].FColorPQty;
        //                    finqty = finqty + parseFloat(qty);
        //                }
        //            }

        //            var totclrqty = parseFloat(bcqty) + parseFloat(finqty);

        //            var tot = parseFloat(totalqty - totclrqty);
        //            tot = tot.toFixed(3);
        //            var rt = {
        //                wt: tot,
        //                sl: PlanYarnDyeingSave[e].SlNo,
        //                Ysl: PlanYarnDyeingSave[e].YDSlNo,
        //                Cmpsl: PlanYarnDyeingSave[e].CompSlNo
        //            };
        //            totgc.push(rt);


        //        }
        //    }
        //    if (totgc.length > 0) {
        //        for (var t = 0; t < PlanYarnDet.length; t++) {
        //            if (PlanYarnDet[t].Dyeing_Req == true) {
        //                var Percnt = PlanYarnDet[t].Knit_In_Per;

        //                for (var p = 0; p < totgc.length; p++) {
        //                    if (totgc[p].Cmpsl == PlanYarnDet[t].CompSno && totgc[p].Ysl == PlanYarnDet[t].YSlNo) {
        //                        var g = totgc[p].wt;
        //                        totgc[p].wt = parseFloat((Percnt * g) / 100).toFixed(3);
        //                    }
        //                }
        //            }
        //        }

        //        for (var m = 0; m < totgc.length; m++) {
        //            var cm = totgc[m].Cmpsl;
        //            var ysl = totgc[m].Ysl;
        //            var sl = totgc[m].sl;
        //            for (var x = 0; x < PlanYarnDyeingSave.length; x++) {
        //                if (PlanYarnDyeingSave[x].CompSlNo == cm && PlanYarnDyeingSave[x].YDSlNo == ysl && PlanYarnDyeingSave[x].SlNo == sl) {
        //                    PlanYarnDyeingSave[x].ActWeight = totgc[m].wt;
        //                    PlanYarnDyeingSave[x].GWeight = totgc[m].wt;
        //                    var pr = PlanYarnDyeingSave[x].Qty_Per;
        //                    if (pr > 0) {
        //                        var qt = PlanYarnDyeingSave[x].ActWeight;
        //                        var res = parseFloat((pr * qt) / 100).toFixed(3);
        //                        PlanYarnDyeingSave[x].Weight = res;
        //                    }
        //                    else {
        //                        PlanYarnDyeingSave[x].Weight = totgc[m].wt;
        //                    }
        //                }
        //            }
        //        }

        //    }

        //    if (PlanYarnDet.length > 0) {
        //        var sl = PlanYarnDet[0].SlNo;
        //        PlanYarnDyeing = $.grep(PlanYarnDyeingSave, function (e) {
        //            return e.CompSlNo == CompSlNo && e.YDSlNo == sl;
        //        });
        //    }

        //    loadYarnDyeAddTable(PlanYarnDyeing);
        //    loadYarnDyeAddTableSave(PlanYarnDyeingSave);
        //    //Yarn Loss

        //    if (PlanYarnLossSave.length > 0) {
        //        PlanYarnLossSave = $.grep(PlanYarnLossSave, function (e) {
        //            return e.CompSNo != Sno;
        //        });
        //        loadyarnLossSaveTable(PlanYarnLossSave);

        //        PlanYarnLoss = $.grep(PlanYarnLoss, function (e) {
        //            return e.CompSNo != Sno;
        //        });
        //        loadyarnLossTable(PlanYarnLoss);
        //    }

        //    ConItemList.sort(function (a, b) {
        //        return a.CPlanSlNo - b.CPlanSlNo;
        //    });

        //    ConItemListSave.sort(function (a, b) {
        //        return a.CPlanSlNo - b.CPlanSlNo;
        //    });

        //    PlanCompFabricDet.sort(function (a, b) {
        //        return a.snumb - b.snumb;
        //    });

        //    PlanCompFabricDetSave.sort(function (a, b) {
        //        return a.snumb - b.snumb;
        //    });

        //    return true;
        //}
        //if (Colorid > 0 && Sizeid > 0) {
        //    $.each(PlanCompFabricDet, function () {
        //        if (this.ColorID == Colorid && this.SizeId == Sizeid && this.CompSlNo == Sno) {
        //            this.Weight = finalwgt;
        //            this.ActWeight = finalwgt;
        //            //this.BColorPQty = 0;
        //            //this.FColorPQty = 0;
        //        }
        //    });

        //    $.each(PlanCompFabricDet, function () {
        //        if (this.CompSlNo == Sno) {
        //            this.BColorPQty = 0;
        //            this.FColorPQty = 0;
        //        }
        //    });

        //    //loadCompFabTable(PlanCompFabricDet);

        //    var fabtable = $('#tCDbody').DataTable();
        //    var fabdata = fabtable.rows().data();

        //    $('input[id=txtPurQty]').each(function (ig) {
        //        if (fabdata[ig].ColorID == Colorid && fabdata[ig].SizeId == Sizeid && fabdata[ig].CompSlNo == Sno) {
        //            var row = $(this).closest('tr');
        //            row.find('#txtfabActwt').val(finalwgt);
        //            row.find('#txtfabwt').val(finalwgt);
        //            row.find('#txtPurQty').val(0);
        //            row.find('#txtFPurQty').val(0);
        //        }
        //    });
        //    var bclrid = 0;
        //    var bclr = '';
        //    $.each(PlanCompFabricDetSave, function () {
        //        if (this.ColorID == Colorid && this.SizeId == Sizeid && this.CompSlNo == Sno) {
        //            this.Weight = finalwgt;
        //            this.ActWeight = finalwgt;
        //            //this.BColorPQty = 0;
        //            //this.FColorPQty = 0;
        //            bclrid = this.BColorID;
        //            bclr = this.Bcolor;
        //        }
        //    });
        //    $.each(PlanCompFabricDetSave, function () {
        //        if (this.CompSlNo == Sno) {
        //            this.BColorPQty = 0;
        //            this.FColorPQty = 0;
        //        }
        //    });
        //    loadCompFabSaveTable(PlanCompFabricDetSave);
        //}
        //else if (Colorid > 0 && Sizeid == 0) {
        //    $.each(PlanCompFabricDet, function () {
        //        if (this.ColorID == Colorid && this.CompSlNo == Sno) {
        //            var rt = finalwgt / quantity;
        //            this.Weight = (rt * this.Prdn_Qty).toFixed(3);
        //            this.ActWeight = (rt * this.Prdn_Qty).toFixed(3);
        //            //this.BColorPQty = 0;
        //            //this.FColorPQty = 0;
        //        }
        //    });

        //    $.each(PlanCompFabricDet, function () {
        //        if (this.CompSlNo == Sno) {
        //            this.BColorPQty = 0;
        //            this.FColorPQty = 0;
        //        }
        //    });
        //    //loadCompFabTable(PlanCompFabricDet);



        //    var fabtable = $('#tCDbody').DataTable();
        //    var fabdata = fabtable.rows().data();

        //    $('input[id=txtPurQty]').each(function (ig) {
        //        if (fabdata[ig].ColorID == Colorid && fabdata[ig].CompSlNo == Sno) {
        //            var row = $(this).closest('tr');
        //            var de = row.find('#txtfabPrdQty').val();
        //            var rt = finalwgt / quantity;
        //            row.find('#txtfabActwt').val((rt * de).toFixed(3));
        //            var rt = finalwgt / quantity;
        //            row.find('#txtfabwt').val((rt * de).toFixed(3));
        //            row.find('#txtfabgram').val(finalresult);
        //        }
        //    });

        //    $('input[id=txtPurQty]').each(function (ig) {
        //        if (fabdata[ig].CompSlNo == Sno) {
        //            var row = $(this).closest('tr');
        //            row.find('#txtPurQty').val(0);
        //            row.find('#txtFPurQty').val(0);
        //        }
        //    });
        //    var bclrid = 0;
        //    var bclr = '';
        //    $.each(PlanCompFabricDetSave, function () {
        //        if (this.ColorID == Colorid && this.CompSlNo == Sno) {
        //            var rt = finalwgt / quantity;
        //            this.Weight = (rt * this.Prdn_Qty).toFixed(3);
        //            this.ActWeight = (rt * this.Prdn_Qty).toFixed(3);

        //            bclrid = this.BColorID;
        //            bclr = this.Bcolor;
        //        }
        //    });
        //    $.each(PlanCompFabricDetSave, function () {
        //        if (this.CompSlNo == Sno) {
        //            this.BColorPQty = 0;
        //            this.FColorPQty = 0;
        //        }
        //    });
        //    loadCompFabSaveTable(PlanCompFabricDetSave);
        //}
        //else if (Colorid == 0 && Sizeid > 0) {
        //    $.each(PlanCompFabricDet, function () {
        //        if (this.SizeId == Sizeid && this.CompSlNo == Sno) {
        //            var rt = finalwgt / quantity;
        //            this.Weight = (rt * this.Prdn_Qty).toFixed(3);
        //            this.ActWeight = (rt * this.Prdn_Qty).toFixed(3);
        //            //this.BColorPQty = 0;
        //            //this.FColorPQty = 0;
        //        }
        //    });

        //    $.each(PlanCompFabricDet, function () {
        //        if (this.CompSlNo == Sno) {
        //            this.BColorPQty = 0;
        //            this.FColorPQty = 0;
        //        }
        //    });
        //    //loadCompFabTable(PlanCompFabricDet);

        //    var fabtable = $('#tCDbody').DataTable();
        //    var fabdata = fabtable.rows().data();

        //    $('input[id=txtPurQty]').each(function (ig) {
        //        if (fabdata[ig].SizeId == Sizeid && fabdata[ig].CompSlNo == Sno) {
        //            var row = $(this).closest('tr');
        //            var de = row.find('#txtfabPrdQty').val();
        //            var rt = finalwgt / quantity;
        //            row.find('#txtfabActwt').val((rt * de).toFixed(3));
        //            row.find('#txtfabwt').val((rt * de).toFixed(3));
        //            row.find('#txtfabgram').val(finalresult);
        //        }
        //    });

        //    $('input[id=txtPurQty]').each(function (ig) {
        //        if (fabdata[ig].CompSlNo == Sno) {
        //            var row = $(this).closest('tr');
        //            row.find('#txtPurQty').val(0);
        //            row.find('#txtFPurQty').val(0);
        //        }
        //    });

        //    var bclrid = 0;
        //    var bclr = '';
        //    $.each(PlanCompFabricDetSave, function () {
        //        if (this.SizeId == Sizeid && this.CompSlNo == Sno) {
        //            var rt = finalwgt / quantity;
        //            this.Weight = (rt * this.Prdn_Qty).toFixed(3);
        //            this.ActWeight = (rt * this.Prdn_Qty).toFixed(3);

        //            bclrid = this.BColorID;
        //            bclr = this.Bcolor;
        //        }
        //    });
        //    $.each(PlanCompFabricDetSave, function () {
        //        if (this.CompSlNo == Sno) {
        //            this.BColorPQty = 0;
        //            this.FColorPQty = 0;
        //        }
        //    });
        //    loadCompFabSaveTable(PlanCompFabricDetSave);
        //}
        //$('#txtWeight').val("");
        //$('#txtActualWeight').val("");

        ////yarn
        //var result = [];
        //$.each(PlanCompFabricDet, function (i, e) {
        //    var matchingItems = $.grep(result, function (item) {
        //        return item.BColorID === e.BColorID;
        //    });
        //    if (matchingItems.length === 0) {
        //        result.push(e);
        //    }
        //});



        //if (result.length > 0) {
        //    //PlanYarnSave = [];
        //    PlanYarn = [];

        //    PlanYarnSave = jQuery.grep(PlanYarnSave, function (value) {
        //        return value.SlNo != CompSlNo;
        //    });
        //    //PlanYarnSave = jQuery.grep(yarnlist, function (value) {
        //    //    return value.FabricID != fd;
        //    //});

        //    var Cs = result[0].CompSlNo;
        //    var ComponentId = 0;
        //    var Component = '';
        //    for (var t = 0; t < compList.length; t++) {
        //        if (compList[t].CompSlNo == Cs) {
        //            ComponentId = compList[t].ComponentID;
        //            Component = compList[t].ComponentName;
        //        }
        //    }

        //    //if (Mod != 0) {
        //    //    PlanYarnSave = $.grep(PlanYarnSave, function (e) {
        //    //        return e.SlNo != CompSlNo;
        //    //    });
        //    //}
        //    for (var j = 0; j < result.length; j++) {


        //        if (PlanYarn.length == 0) {
        //            leng = 1;

        //        }
        //        else {
        //            leng++;

        //        }
        //        var bd = 0;
        //        bd = result[j].BColorID;
        //        var snumb = result[j].snumb;
        //        var csln = result[j].CompSlNo;
        //        var totalqty = 0;
        //        for (var u = 0; u < PlanCompFabricDetSave.length; u++) {
        //            if (PlanCompFabricDetSave[u].BColorID == bd && PlanCompFabricDetSave[u].CompSlNo == csln) {

        //                var qty = PlanCompFabricDetSave[u].Weight;
        //                totalqty = totalqty + parseFloat(qty);
        //            }
        //        }


        //        var bcqty = 0;
        //        for (var r = 0; r < PlanCompFabricDetSave.length; r++) {
        //            if (PlanCompFabricDetSave[r].BColorID == bd && PlanCompFabricDetSave[r].CompSlNo == s) {

        //                var qty = PlanCompFabricDetSave[r].BColorPQty;
        //                bcqty = bcqty + parseFloat(qty);
        //            }
        //        }


        //        var finqty = 0;
        //        for (var n = 0; n < PlanCompFabricDetSave.length; n++) {
        //            if (PlanCompFabricDetSave[n].BColorID == bd && PlanCompFabricDetSave[n].CompSlNo == s) {

        //                var qty = PlanCompFabricDetSave[n].FColorPQty;
        //                finqty = finqty + parseFloat(qty);
        //            }
        //        }


        //        var totclrqty = parseFloat(bcqty) + parseFloat(finqty);

        //        //for (var w = 0; w < PlanCompFabricDet.length; w++) {
        //        //    if (PlanCompFabricDet[w].BColorID == bd && PlanCompFabricDet[w].snumb == sno) {

        //        totalqty = totalqty - totclrqty;
        //        totalqty = totalqty.toFixed(3);
        //        //    }
        //        //}

        //        var yarnlistobj = {
        //            PlanId: 0,
        //            Fabric: result[j].Fabric,
        //            FabricID: result[j].FabricID,
        //            Fabric_ColorId: result[j].BColorID,
        //            Fabric_Weight: totalqty,
        //            Fabric_type: result[j].type,//result[j].FabricType,
        //            EntryDate: new Date($('#txtEntryDate').val()),
        //            BColor: result[j].Bcolor,
        //            SlNo: result[j].CompSlNo,
        //            YPlanmasID: 0,
        //            YSlno: leng,
        //            ComponentId: ComponentId,
        //            Component: Component
        //        }




        //        PlanYarnSave.push(yarnlistobj);
        //        PlanYarn.push(yarnlistobj);
        //    }
        //}

        ////loadYarndetTab
        //PlanYarnSave = jQuery.grep(PlanYarnSave, function (value) {
        //    return value.Fabric_Weight != 0;
        //});
        //loadYarnSavedetTab(PlanYarnSave);


        //var ctry = [];
        //ctry = PlanYarnSave;
        //ctry = $.grep(ctry, function (e) {
        //    if (e.SlNo == s) {
        //        return e;
        //    }
        //});
        //PlanYarn = ctry;

        //loadYarndetTab(PlanYarn);


        //var totalamnt = 0;
        //for (var e = 0; e < PlanCompFabricDet.length; e++) {
        //    if (PlanCompFabricDet[e].CompSlNo == Sno && PlanCompFabricDet[e].Bcolor == bclr) {
        //        var amount = PlanCompFabricDet[e].Weight;
        //        totalamnt = totalamnt + parseFloat(amount);
        //    }
        //}

        //totalamnt = totalamnt.toFixed(3);
        //for (var e = 0; e < PlanYarnSave.length; e++) {
        //    if (PlanYarnSave[e].SlNo == Sno && PlanYarnSave[e].BColor == bclr) {
        //        PlanYarnSave[e].Fabric_Weight = (totalamnt);
        //    }
        //}
        //loadYarnSavedetTab(PlanYarnSave);


        //PlanYarn = $.grep(PlanYarnSave, function (e) {
        //    return e.SlNo == Sno;
        //});
        //loadYarndetTab(PlanYarn);

        //totwght();

        //Yarndet

        //if (PlanYarnDetSave.length > 0) {


        //    var ys = PlanYarn[0].YSlno;

        //    for (var b = 0; b < PlanYarnSave.length; b++) {
        //        if (PlanYarnSave[b].SlNo == CompSlNo) {
        //            var pysl = PlanYarnSave[b].YSlno;
        //            var cmpsl = PlanYarnSave[b].SlNo;
        //            var wgt = PlanYarnSave[b].Fabric_Weight;
        //            var bcid = PlanYarnSave[b].Fabric_ColorId;

        //            for (var m = 0; m < PlanYarnDetSave.length; m++) {
        //                if (PlanYarnDetSave[m].CompSno == cmpsl) {
        //                    var s = PlanYarnDetSave[m].SlNo;
        //                    if (PlanYarnDetSave[m].BaseColorID == bcid) {
        //                        YsBp = 1;
        //                        var pr = PlanYarnDetSave[m].Knit_In_Per;
        //                        var re = parseFloat((pr * wgt) / 100);
        //                        re = re.toFixed(3);
        //                        PlanYarnDetSave[m].Knit_In_Qty = re;
        //                        PlanYarnDetSave[m].Knit_In_ActQty = re;
        //                        PlanYarnDetSave[m].YSlNo = pysl;
        //                        PlanYarnDetSave[m].SlNo = s;
        //                        //PlanYarnDetSave[m].FabricID = FabricId;
        //                    }

        //                }
        //            }
        //        }
        //    }
        //    PlanYarnDet = $.grep(PlanYarnDetSave, function (e) {
        //        return e.CompSno == CompSlNo && e.YSlNo == ys;
        //    });
        //    Loadsepyarn(PlanYarnDet);
        //    LoadsepSaveyarn(PlanYarnDetSave);
        //}
        totconwght();
        ConsmtnHideCol(type);

        //var rows = $("#tCPIbody").dataTable().fnGetNodes();
        //var dtTable = $('#tCPIbody').DataTable();
        //for (var i = 0; i < rows.length; i++) {
        //    var sn = dtTable.cells({ row: i, column: 0 }).data()[0];
        //    $('input[id=txtWidth]').each(function () {
        //        if (sn == CPlan && $(this).val() == Val) {
        //            var row = $(this).closest('tr');
        //            var num = row.find('#txtWidth').val();
        //            row.find('#txtWidth').focus().val('').val(num);
        //            return true;
        //        }
        //    });
        //}

    });
    $(document).on('change', '.calcwidth', function (e) {
        debugger;


        var table = $('#tCPIbody').DataTable();
        var CPlan = table.row($(this).parents('tr')).data()["CPlanSlNo"];
        var quantity = table.row($(this).parents('tr')).data()["Prdn_Qty"];
        var len = table.row($(this).parents('tr')).data()["Length"];
        var allowlen = table.row($(this).parents('tr')).data()["AlloLen"];
        var allowwid = table.row($(this).parents('tr')).data()["AllowWid"];
        var gsm = table.row($(this).parents('tr')).data()["GSM"];
        var Colorid = table.row($(this).parents('tr')).data()["ColorID"];
        var Sizeid = table.row($(this).parents('tr')).data()["SizeId"];
        var Sno = table.row($(this).parents('tr')).data()["CompSlNo"];
        var pat = table.row($(this).parents('tr')).data()["Pattern"];
        if (checkpattern == 0) {
            pat = 1;
        } else {
            pat = table.row($(this).parents('tr')).data()["Pattern"];
        }
        for (var t = 0; t < compList.length; t++) {
            if (compList[t].CompSlNo == Sno) {
                var parts = compList[t].No_Of_Parts;
            }
        }

        var Val = $(this).val();
        Width = Val;
        fillvar = 'W';
        rowindex = $(this).closest('tr').index();
        indexforfill = rowindex;

        $.each(ConItemList, function () {
            if (this.CPlanSlNo == CPlan) {
                this.Width = Width;

            }
        });

        //loadAdConTable(ConItemList);


        $.each(ConItemListSave, function () {
            if (this.CompSlNo == Sno && this.CPlanSlNo == CPlan) {
                this.Width = Width;

            }
        });
        //loadconSaveTable(ConItemListSave);
        

        if (pat == 0) {
            res1 = 0;
        }
        else {
            var totlen = parseFloat(len) + parseFloat(allowlen);
            var totwid = parseFloat(allowwid) + parseFloat(Val);
            var res1 = parseFloat(parseFloat(totlen * totwid) / pat);
        }

        res1 = res1.toFixed(3);
        var res = (res1 * gsm) / 10000;
        Wght = quantity * res / 1000;

        var finalresult = res.toFixed(3);
        var finalwgt = (Wght * parts).toFixed(3);


        //Dia
        var dd = parseFloat(Val) + parseFloat(allowwid);
        dd = parseFloat(dd / 2.54).toFixed(0);


        var r = dd + "DIA";
        var fab = $.grep(Fabriclist, function (e) {

            return e.Size == r;

        });
        var fid = 0;
        var fn = '';

        if (fab.length == 0 && dd != 0) {

            DiaSize = r;
            //SizeAdd(r);

            $.when($.ajax(NewSizeAdd(r))).done(function  getNewfabric() {

                var fabres = $.grep(Fabriclist, function (e) {

                    return e.Size == DiaSize;

                });
                fid = fabres[0].SizeId;
                fn = fabres[0].Size;

                $.each(ConItemList, function () {
                    if (this.CPlanSlNo == CPlan) {

                        this.GSM = gsm;
                        this.Grammage = finalresult;
                        this.Weight = finalwgt;

                        this.FinishWidthID = fid;
                        this.FinishWidth = fn;
                        this.GreyWidthID = fid;
                        this.GreyWidth = fn;

                    }
                });

                var optionText = fn;
                var optionValue = fid;

                $('#ddlFSize').append(new Option(optionText, optionValue));
                $('#ddlGSize').append(new Option(optionText, optionValue));


                //loadAdConTable(ConItemList);

                var table = $('#tCPIbody').DataTable();
                var data = table.rows().data();

                $('input[id=txtalloeWidth]').each(function (ig) {
                    if (data[ig].CPlanSlNo == CPlan) {
                        var row = $(this).closest('tr');
                        //row.find('#txtLen').val(len);
                        //row.find('#txtallowLen').val(allowlen);
                        row.find('#txtWidth').val(Width);
                        //row.find('#txtalloeWidth').val(allowwid);
                       // row.find('#txtGsm').val(gsm);
                        row.find('#txtGram').val(finalresult);
                        row.find('#txtWght').val(finalwgt);
                        row.find('#ddlFSize').val(fid).trigger('change');
                        row.find('#ddlGSize').val(fid).trigger('change');

                    }
                });



                //var table = $('#tCPIbody').DataTable();
                //var data = table.rows().data();

                //$('input[id=txtWidth]').each(function (ig) {
                //    if (data[ig].CPlanSlNo == CPlan) {
                //        var row = $(this).closest('tr');
                //        row.find('#txtLen').val(len);
                //        row.find('#txtallowLen').val(allowlen);
                //        row.find('#txtWidth').val(Val);
                //        row.find('#txtalloeWidth').val(allowwid);
                //        row.find('#txtGsm').val(gsm);
                //        row.find('#txtGram').val(finalresult);
                //        row.find('#txtWght').val(finalwgt);

                //    }
                //});

                //var table = $('#tCPIbody').DataTable();
                //var data = table.rows().data();

                //$('input[id=txtGram]').each(function (ig) {
                //    if (data[ig].CPlanSlNo == CPlan) {
                //        var row = $(this).closest('tr');
                //        row.find('#txtWidth').val(Width);
                //        row.find('#txtGsm').val(gsm);
                //        row.find('#txtGram').val(finalresult);
                //        row.find('#txtWght').val(finalwgt);
                //        row.find('#ddlFSize option:select').val(fn);

                //    }
                //});


                $.each(ConItemListSave, function () {
                    if (this.CompSlNo == Sno && this.CPlanSlNo == CPlan) {
                        this.Pattern = pat;
                        this.GSM = gsm;
                        this.Grammage = finalresult;
                        this.Weight = finalwgt;
                       
                        this.FinishWidthID = fid;
                        this.FinishWidth = fn;
                        this.GreyWidthID = fid;
                        this.GreyWidth = fn;


                    }
                });


                //check gram from temp
                var totalcgpqt = 0;
                for (var e = 0; e < ConItemListSave.length; e++) {
                    var cgpcs = ConItemListSave[e].Grammage;
                    totalcgpqt = totalcgpqt + parseFloat(cgpcs);

                }
                var TgmWeight = (totalcgpqt.toFixed(3));

                //if (UserName != 'superuser') {
                //    if (parseFloat(TgmWeight) != parseFloat(CheckAvgMeas)) {
                //        alert("Please Check the Total Grammage Weight are not exceed then Order Template..");
                //        $.each(ConItemList, function () {
                //            if (this.CompSlNo == Sno && this.CPlanSlNo == CPlan) {

                //                //this.GSM = gsm;
                //                //this.Grammage = finalresult;
                //                this.Weight = 0;
                //                this.Width = 0;
                //                this.Grammage = 0;
                //                //this.FinishWidth = fn;
                //                //this.GreyWidthID = fid;
                //                //this.GreyWidth = fn;

                //            }
                //        });

                //        loadAdConTable(ConItemList);
                //        $.each(ConItemListSave, function () {
                //            if (this.CompSlNo == Sno && this.CPlanSlNo == CPlan) {
                //                //this.Pattern = pat;
                //                //this.GSM = gsm;
                //                this.Grammage = 0;
                //                this.Weight = 0;
                //                this.Width = 0;
                //            }
                //        });
                //        return true;
                //    }
                //}
                //

                //loadconSaveTable(ConItemListSave);



                //if (Colorid > 0 && Sizeid > 0) {
                //    $.each(PlanCompFabricDet, function () {
                //        if (this.ColorID == Colorid && this.SizeId == Sizeid && this.CompSlNo == Sno) {
                //            this.Weight = finalwgt;
                //            this.ActWeight = finalwgt;
                //            this.FinishWidthID = fid;
                //            this.FinishWidth = fn;
                //            this.GreyWidthID = fid;
                //            this.GreyWidth = fn;
                //            //this.BColorPQty = 0;
                //            //this.FColorPQty = 0;
                //        }
                //    });

                //    $.each(PlanCompFabricDet, function () {
                //        if (this.CompSlNo == Sno) {
                //            this.BColorPQty = 0;
                //            this.FColorPQty = 0;
                //        }
                //    });

                //    //loadCompFabTable(PlanCompFabricDet);

                //    var fabtable = $('#tCDbody').DataTable();
                //    var fabdata = fabtable.rows().data();

                //    $('input[id=txtPurQty]').each(function (ig) {
                //        if (fabdata[ig].ColorID == Colorid && fabdata[ig].SizeId == Sizeid && fabdata[ig].CompSlNo == Sno) {
                //            var row = $(this).closest('tr');
                //            row.find('#txtfabActwt').val(finalwgt);
                //            row.find('#txtfabwt').val(finalwgt);
                //            row.find('#txtPurQty').val(0);
                //            row.find('#txtFPurQty').val(0);
                //        }
                //    });
                //    var bclrid = 0;
                //    var bclr = '';
                //    $.each(PlanCompFabricDetSave, function () {
                //        if (this.ColorID == Colorid && this.SizeId == Sizeid && this.CompSlNo == Sno) {
                //            this.Weight = finalwgt;
                //            this.ActWeight = finalwgt;
                //            this.FinishWidthID = fid;
                //            this.FinishWidth = fn;
                //            this.GreyWidthID = fid;
                //            this.GreyWidth = fn;
                //            //this.BColorPQty = 0;
                //            //this.FColorPQty = 0;
                //            bclrid = this.BColorID;
                //            bclr = this.Bcolor;
                //        }
                //    });
                //    $.each(PlanCompFabricDetSave, function () {
                //        if (this.CompSlNo == Sno) {
                //            this.BColorPQty = 0;
                //            this.FColorPQty = 0;
                //        }
                //    });
                //    //loadCompFabSaveTable(PlanCompFabricDetSave);
                //}
                //else if (Colorid > 0 && Sizeid == 0) {
                //    $.each(PlanCompFabricDet, function () {
                //        if (this.ColorID == Colorid && this.CompSlNo == Sno) {
                //            var rt = finalwgt / quantity;
                //            this.Weight = (rt * this.Prdn_Qty).toFixed(3);
                //            this.ActWeight = (rt * this.Prdn_Qty).toFixed(3);
                //            this.FinishWidthID = fid;
                //            this.FinishWidth = fn;
                //            this.GreyWidthID = fid;
                //            this.GreyWidth = fn;
                //            //this.BColorPQty = 0;
                //            //this.FColorPQty = 0;
                //        }
                //    });

                //    $.each(PlanCompFabricDet, function () {
                //        if (this.CompSlNo == Sno) {
                //            this.BColorPQty = 0;
                //            this.FColorPQty = 0;
                //        }
                //    });
                //    //loadCompFabTable(PlanCompFabricDet);



                //    var fabtable = $('#tCDbody').DataTable();
                //    var fabdata = fabtable.rows().data();

                //    $('input[id=txtPurQty]').each(function (ig) {
                //        if (fabdata[ig].ColorID == Colorid && fabdata[ig].CompSlNo == Sno) {
                //            var row = $(this).closest('tr');
                //            var de = row.find('#txtfabPrdQty').val();
                //            var rt = finalwgt / quantity;
                //            row.find('#txtfabActwt').val((rt * de).toFixed(3));
                //            var rt = finalwgt / quantity;
                //            row.find('#txtfabwt').val((rt * de).toFixed(3));
                //            row.find('#txtfabgram').val(finalresult);
                //        }
                //    });

                //    $('input[id=txtPurQty]').each(function (ig) {
                //        if (fabdata[ig].CompSlNo == Sno) {
                //            var row = $(this).closest('tr');
                //            row.find('#txtPurQty').val(0);
                //            row.find('#txtFPurQty').val(0);
                //        }
                //    });
                //    var bclrid = 0;
                //    var bclr = '';
                //    $.each(PlanCompFabricDetSave, function () {
                //        if (this.ColorID == Colorid && this.CompSlNo == Sno) {
                //            var rt = finalwgt / quantity;
                //            this.Weight = (rt * this.Prdn_Qty).toFixed(3);
                //            this.ActWeight = (rt * this.Prdn_Qty).toFixed(3);
                //            this.FinishWidthID = fid;
                //            this.FinishWidth = fn;
                //            this.GreyWidthID = fid;
                //            this.GreyWidth = fn;
                //            bclrid = this.BColorID;
                //            bclr = this.Bcolor;
                //        }
                //    });
                //    $.each(PlanCompFabricDetSave, function () {
                //        if (this.CompSlNo == Sno) {
                //            this.BColorPQty = 0;
                //            this.FColorPQty = 0;
                //        }
                //    });
                //    //loadCompFabSaveTable(PlanCompFabricDetSave);
                //}
                //else if (Colorid == 0 && Sizeid > 0) {
                //    $.each(PlanCompFabricDet, function () {
                //        if (this.SizeId == Sizeid && this.CompSlNo == Sno) {
                //            var rt = finalwgt / quantity;
                //            this.Weight = (rt * this.Prdn_Qty).toFixed(3);
                //            this.ActWeight = (rt * this.Prdn_Qty).toFixed(3);
                //            this.FinishWidthID = fid;
                //            this.FinishWidth = fn;
                //            this.GreyWidthID = fid;
                //            this.GreyWidth = fn;
                //            //this.BColorPQty = 0;
                //            //this.FColorPQty = 0;
                //        }
                //    });

                //    $.each(PlanCompFabricDet, function () {
                //        if (this.CompSlNo == Sno) {
                //            this.BColorPQty = 0;
                //            this.FColorPQty = 0;
                //        }
                //    });
                //    //loadCompFabTable(PlanCompFabricDet);

                //    var fabtable = $('#tCDbody').DataTable();
                //    var fabdata = fabtable.rows().data();

                //    $('input[id=txtPurQty]').each(function (ig) {
                //        if (fabdata[ig].SizeId == Sizeid && fabdata[ig].CompSlNo == Sno) {
                //            var row = $(this).closest('tr');
                //            var de = row.find('#txtfabPrdQty').val();
                //            var rt = finalwgt / quantity;
                //            row.find('#txtfabActwt').val((rt * de).toFixed(3));
                //            row.find('#txtfabwt').val((rt * de).toFixed(3));
                //            row.find('#txtfabgram').val(finalresult);
                //        }
                //    });

                //    $('input[id=txtPurQty]').each(function (ig) {
                //        if (fabdata[ig].CompSlNo == Sno) {
                //            var row = $(this).closest('tr');
                //            row.find('#txtPurQty').val(0);
                //            row.find('#txtFPurQty').val(0);
                //        }
                //    });

                //    var bclrid = 0;
                //    var bclr = '';
                //    $.each(PlanCompFabricDetSave, function () {
                //        if (this.SizeId == Sizeid && this.CompSlNo == Sno) {
                //            var rt = finalwgt / quantity;
                //            this.Weight = (rt * this.Prdn_Qty).toFixed(3);
                //            this.ActWeight = (rt * this.Prdn_Qty).toFixed(3);
                //            this.FinishWidthID = fid;
                //            this.FinishWidth = fn;
                //            this.GreyWidthID = fid;
                //            this.GreyWidth = fn;
                //            bclrid = this.BColorID;
                //            bclr = this.Bcolor;
                //        }
                //    });
                //    $.each(PlanCompFabricDetSave, function () {
                //        if (this.CompSlNo == Sno) {
                //            this.BColorPQty = 0;
                //            this.FColorPQty = 0;
                //        }
                //    });
                //    // loadCompFabSaveTable(PlanCompFabricDetSave);
                //}
                //else {
                //    $.each(PlanCompFabricDet, function () {
                //        if (this.CompSlNo == Sno) {
                //            var rt = finalwgt / quantity;
                //            this.Weight = (rt * this.Prdn_Qty).toFixed(3);
                //            this.ActWeight = (rt * this.Prdn_Qty).toFixed(3);
                //            this.FinishWidthID = fid;
                //            this.FinishWidth = fn;
                //            this.GreyWidthID = fid;
                //            this.GreyWidth = fn;
                //            //this.BColorPQty = 0;
                //            //this.FColorPQty = 0;
                //        }
                //    });

                //    $.each(PlanCompFabricDet, function () {
                //        if (this.CompSlNo == Sno) {
                //            this.BColorPQty = 0;
                //            this.FColorPQty = 0;
                //        }
                //    });
                //    //loadCompFabTable(PlanCompFabricDet);

                //    var fabtable = $('#tCDbody').DataTable();
                //    var fabdata = fabtable.rows().data();

                //    $('input[id=txtPurQty]').each(function (ig) {
                //        if (fabdata[ig].CompSlNo == Sno) {
                //            var row = $(this).closest('tr');
                //            var de = row.find('#txtfabPrdQty').val();
                //            var rt = finalwgt / quantity;
                //            row.find('#txtfabActwt').val((rt * de).toFixed(3));
                //            row.find('#txtfabwt').val((rt * de).toFixed(3));
                //            row.find('#txtfabgram').val(finalresult);
                //        }
                //    });

                //    $('input[id=txtPurQty]').each(function (ig) {
                //        if (fabdata[ig].CompSlNo == Sno) {
                //            var row = $(this).closest('tr');
                //            row.find('#txtPurQty').val(0);
                //            row.find('#txtFPurQty').val(0);
                //        }
                //    });

                //    var bclrid = 0;
                //    var bclr = '';
                //    $.each(PlanCompFabricDetSave, function () {
                //        if (this.CompSlNo == Sno) {
                //            var rt = finalwgt / quantity;
                //            this.Weight = (rt * this.Prdn_Qty).toFixed(3);
                //            this.ActWeight = (rt * this.Prdn_Qty).toFixed(3);
                //            this.FinishWidthID = fid;
                //            this.FinishWidth = fn;
                //            this.GreyWidthID = fid;
                //            this.GreyWidth = fn;
                //            bclrid = this.BColorID;
                //            bclr = this.Bcolor;
                //        }
                //    });
                //    $.each(PlanCompFabricDetSave, function () {
                //        if (this.CompSlNo == Sno) {
                //            this.BColorPQty = 0;
                //            this.FColorPQty = 0;
                //        }
                //    });
                //    //loadCompFabSaveTable(PlanCompFabricDetSave);
                //}
                $('#txtWeight').val("");
                $('#txtActualWeight').val("");

                //yarn


                //yarn
                //var result = [];
                //$.each(PlanCompFabricDet, function (i, e) {
                //    var matchingItems = $.grep(result, function (item) {
                //        return item.BColorID === e.BColorID;
                //    });
                //    if (matchingItems.length === 0) {
                //        result.push(e);
                //    }
                //});



                //if (result.length > 0) {
                //    //PlanYarnSave = [];
                //    PlanYarn = [];

                //    PlanYarnSave = jQuery.grep(PlanYarnSave, function (value) {
                //        return value.SlNo != CompSlNo;
                //    });
                //    //PlanYarnSave = jQuery.grep(yarnlist, function (value) {
                //    //    return value.FabricID != fd;
                //    //});

                //    var Cs = result[0].CompSlNo;
                //    var ComponentId = 0;
                //    var Component = '';
                //    for (var t = 0; t < compList.length; t++) {
                //        if (compList[t].CompSlNo == Cs) {
                //            ComponentId = compList[t].ComponentID;
                //            Component = compList[t].ComponentName;
                //        }
                //    }

                //    //if (Mod != 0) {
                //    //    PlanYarnSave = $.grep(PlanYarnSave, function (e) {
                //    //        return e.SlNo != CompSlNo;
                //    //    });
                //    //}
                //    for (var j = 0; j < result.length; j++) {


                //        if (PlanYarn.length == 0) {
                //            leng = 1;

                //        }
                //        else {
                //            leng++;

                //        }
                //        var bd = 0;
                //        bd = result[j].BColorID;
                //        var snumb = result[j].snumb;
                //        var csln = result[j].CompSlNo;
                //        var totalqty = 0;
                //        for (var u = 0; u < PlanCompFabricDetSave.length; u++) {
                //            if (PlanCompFabricDetSave[u].BColorID == bd && PlanCompFabricDetSave[u].CompSlNo == csln) {

                //                var qty = PlanCompFabricDetSave[u].Weight;
                //                totalqty = totalqty + parseFloat(qty);
                //            }
                //        }


                //        var bcqty = 0;
                //        for (var r = 0; r < PlanCompFabricDetSave.length; r++) {
                //            if (PlanCompFabricDetSave[r].BColorID == bd && PlanCompFabricDetSave[r].CompSlNo == s) {

                //                var qty = PlanCompFabricDetSave[r].BColorPQty;
                //                bcqty = bcqty + parseFloat(qty);
                //            }
                //        }


                //        var finqty = 0;
                //        for (var n = 0; n < PlanCompFabricDetSave.length; n++) {
                //            if (PlanCompFabricDetSave[n].BColorID == bd && PlanCompFabricDetSave[n].CompSlNo == s) {

                //                var qty = PlanCompFabricDetSave[n].FColorPQty;
                //                finqty = finqty + parseFloat(qty);
                //            }
                //        }


                //        var totclrqty = parseFloat(bcqty) + parseFloat(finqty);

                //        //for (var w = 0; w < PlanCompFabricDet.length; w++) {
                //        //    if (PlanCompFabricDet[w].BColorID == bd && PlanCompFabricDet[w].snumb == sno) {

                //        totalqty = totalqty - totclrqty;
                //        totalqty = totalqty.toFixed(3);
                //        //    }
                //        //}

                //        var yarnlistobj = {
                //            PlanId: 0,
                //            Fabric: result[j].Fabric,
                //            FabricID: result[j].FabricID,
                //            Fabric_ColorId: result[j].BColorID,
                //            Fabric_Weight: totalqty,
                //            Fabric_type: result[j].type,//result[j].FabricType,
                //            EntryDate: new Date($('#txtEntryDate').val()),
                //            BColor: result[j].Bcolor,
                //            SlNo: result[j].CompSlNo,
                //            YPlanmasID: 0,
                //            YSlno: leng,
                //            ComponentId: ComponentId,
                //            Component: Component
                //        }




                //        PlanYarnSave.push(yarnlistobj);
                //        PlanYarn.push(yarnlistobj);
                //    }
                //}

                ////loadYarndetTab
                //PlanYarnSave = jQuery.grep(PlanYarnSave, function (value) {
                //    return value.Fabric_Weight != 0;
                //});
                //loadYarnSavedetTab(PlanYarnSave);


                ////var ctry = [];
                ////ctry = PlanYarnSave;
                ////ctry = $.grep(ctry, function (e) {
                ////    if (e.SlNo == s) {
                ////        return e;
                ////    }
                ////});
                ////PlanYarn = ctry;

                //loadYarndetTab(PlanYarn);


                //var totalamnt = 0;
                //for (var e = 0; e < PlanCompFabricDet.length; e++) {
                //    if (PlanCompFabricDet[e].CompSlNo == Sno && PlanCompFabricDet[e].Bcolor == bclr) {
                //        var amount = PlanCompFabricDet[e].Weight;
                //        totalamnt = totalamnt + parseFloat(amount);
                //    }
                //}

                //totalamnt = totalamnt.toFixed(3);
                //for (var e = 0; e < PlanYarnSave.length; e++) {
                //    if (PlanYarnSave[e].SlNo == Sno && PlanYarnSave[e].BColor == bclr) {
                //        PlanYarnSave[e].Fabric_Weight = (totalamnt);
                //    }
                //}
                //loadYarnSavedetTab(PlanYarnSave);


                //PlanYarn = $.grep(PlanYarnSave, function (e) {
                //    return e.SlNo == Sno;
                //});
                //loadYarndetTab(PlanYarn);

                //totwght();

                //Yarndet

                //if (PlanYarnDetSave.length > 0) {


                //    var ys = PlanYarn[0].YSlno;

                //    for (var b = 0; b < PlanYarnSave.length; b++) {
                //        if (PlanYarnSave[b].SlNo == CompSlNo) {
                //            var pysl = PlanYarnSave[b].YSlno;
                //            var cmpsl = PlanYarnSave[b].SlNo;
                //            var wgt = PlanYarnSave[b].Fabric_Weight;
                //            var bcid = PlanYarnSave[b].Fabric_ColorId;

                //            for (var m = 0; m < PlanYarnDetSave.length; m++) {
                //                if (PlanYarnDetSave[m].CompSno == cmpsl) {
                //                    var s = PlanYarnDetSave[m].SlNo;
                //                    if (PlanYarnDetSave[m].BaseColorID == bcid) {
                //                        YsBp = 1;
                //                        var pr = PlanYarnDetSave[m].Knit_In_Per;
                //                        var re = parseFloat((pr * wgt) / 100);
                //                        re = re.toFixed(3);
                //                        PlanYarnDetSave[m].Knit_In_Qty = re;
                //                        PlanYarnDetSave[m].Knit_In_ActQty = re;
                //                        PlanYarnDetSave[m].YSlNo = pysl;
                //                        PlanYarnDetSave[m].SlNo = s;
                //                        //PlanYarnDetSave[m].FabricID = FabricId;
                //                    }

                //                }
                //            }
                //        }
                //    }
                //    PlanYarnDet = $.grep(PlanYarnDetSave, function (e) {
                //        return e.CompSno == CompSlNo && e.YSlNo == ys;
                //    });
                //    Loadsepyarn(PlanYarnDet);
                //    LoadsepSaveyarn(PlanYarnDetSave);
                //}
                ConsmtnHideCol(type);

                //var rows = $("#tCPIbody").dataTable().fnGetNodes();
                //var dtTable = $('#tCPIbody').DataTable();
                //for (var i = 0; i < rows.length; i++) {
                //    var sn = dtTable.cells({ row: i, column: 0 }).data()[0];
                //    $('input[id=txtWidth]').each(function () {
                //        if (sn == CPlan && $(this).val() == Val) {
                //            var row = $(this).closest('tr');
                //            var num = row.find('#txtWidth').val();
                //            row.find('#txtWidth').focus().val('').val(num);
                //            return true;
                //        }
                //    });
                //}
                //  }
            });
        }
        else {

            DiaSize = r;
            //SizeAdd(r);

            if (dd == 0) {
                fid = 0;
                fn = '--Select--';
            }
            else {

                var fabres = $.grep(Fabriclist, function (e) {

                    return e.Size == DiaSize;

                });
                fid = fabres[0].SizeId;
                fn = fabres[0].Size;
            }
            $.each(ConItemList, function () {
                if (this.CPlanSlNo == CPlan) {

                    this.GSM = gsm;
                    this.Grammage = finalresult;
                    this.Weight = finalwgt;

                    this.FinishWidthID = fid;
                    this.FinishWidth = fn;
                    this.GreyWidthID = fid;
                    this.GreyWidth = fn;

                }
            });

            //loadAdConTable(ConItemList);


            var table = $('#tCPIbody').DataTable();
            var data = table.rows().data();

            $('input[id=txtalloeWidth]').each(function (ig) {
                if (data[ig].CPlanSlNo == CPlan) {
                    var row = $(this).closest('tr');
                    //row.find('#txtLen').val(len);
                    //row.find('#txtallowLen').val(allowlen);
                    row.find('#txtWidth').val(Width);
                    row.find('#txtalloeWidth').val(allowwid);
                    row.find('#txtGsm').val(gsm);
                    row.find('#txtGram').val(finalresult);
                    row.find('#txtWght').val(finalwgt);
                    row.find('#ddlFSize').val(fid).trigger('change');
                    row.find('#ddlGSize').val(fid).trigger('change');

                }
            });


            //var ctable = $('#tCPIbody').DataTable();
            //var cdata = ctable.rows().data();

            //$('input[id=txtWidth]').each(function (cig) {
            //    if (cdata[cig].CPlanSlNo == CPlan) {
            //        var row = $(this).closest('tr');
            //        row.find('#txtLen').val(len);
            //        row.find('#txtallowLen').val(allowlen);
            //        row.find('#txtWidth').val(Val);
            //        row.find('#txtalloeWidth').val(allowwid);
            //        row.find('#txtGsm').val(gsm);
            //        row.find('#txtGram').val(finalresult);
            //        row.find('#txtWght').val(finalwgt);

            //    }
            //});


            //var table = $('#tCPIbody').DataTable();
            //var cdata = table.rows().data();

            //$('input[id=txtGram]').each(function (ig) {
            //    if (cdata[ig].CPlanSlNo == CPlan) {
            //        var row = $(this).closest('tr');
            //        row.find('#txtWidth').val(Width);
            //        row.find('#txtGsm').val(gsm);
            //        row.find('#txtGram').val(finalresult);
            //        row.find('#txtWght').val(finalwgt);
            //        row.find('#ddlFSize option:select').val(fn);

            //    }
            //});






            $.each(ConItemListSave, function () {
                if (this.CompSlNo == Sno && this.CPlanSlNo == CPlan) {
                    this.Pattern = pat;
                    this.GSM = gsm;
                    this.Grammage = finalresult;
                    this.Weight = finalwgt;

                    this.FinishWidthID = fid;
                    this.FinishWidth = fn;
                    this.GreyWidthID = fid;
                    this.GreyWidth = fn;
                }
            });



            //check gram from temp
            var totalcgpqt = 0;
            for (var e = 0; e < ConItemListSave.length; e++) {
                var cgpcs = ConItemListSave[e].Grammage;
                totalcgpqt = totalcgpqt + parseFloat(cgpcs);

            }
            var TgmWeight = (totalcgpqt.toFixed(1));

            //if (UserName != 'superuser') {
            //    if (parseFloat(TgmWeight) > parseFloat(CheckAvgMeas)) {
            //        alert("Please Check the Total Grammage Weight are not exceed then Order Template..");


            //        $.each(ConItemList, function () {
            //            if (this.CompSlNo == Sno && this.CPlanSlNo == CPlan) {

            //                //this.GSM = gsm;
            //                //this.Grammage = finalresult;
            //                this.Weight = 0;
            //                this.Width = 0;
            //                this.Grammage = 0;
            //                //this.FinishWidthID = fid;
            //                //this.FinishWidth = fn;
            //                //this.GreyWidthID = fid;
            //                //this.GreyWidth = fn;

            //            }
            //        });

            //        loadAdConTable(ConItemList);
            //        $.each(ConItemListSave, function () {
            //            if (this.CompSlNo == Sno && this.CPlanSlNo == CPlan) {
            //                //this.Pattern = pat;
            //                //this.GSM = gsm;
            //                //this.Grammage = finalresult;
            //                this.Weight = 0;
            //                this.Grammage = 0;
            //                this.Width = 0;
            //            }
            //        });
            //        return true;
            //    }
            //}
            //

            //loadconSaveTable(ConItemListSave);

            //if (Colorid > 0 && Sizeid > 0) {
            //    $.each(PlanCompFabricDet, function () {
            //        if (this.ColorID == Colorid && this.SizeId == Sizeid && this.CompSlNo == Sno) {
            //            this.Weight = finalwgt;
            //            this.ActWeight = finalwgt;
            //            this.FinishWidthID = fid;
            //            this.FinishWidth = fn;
            //            this.GreyWidthID = fid;
            //            this.GreyWidth = fn;
            //            //this.BColorPQty = 0;
            //            //this.FColorPQty = 0;
            //        }
            //    });

            //    $.each(PlanCompFabricDet, function () {
            //        if (this.CompSlNo == Sno) {
            //            this.BColorPQty = 0;
            //            this.FColorPQty = 0;
            //        }
            //    });

            //    //loadCompFabTable(PlanCompFabricDet);

            //    var fabtable = $('#tCDbody').DataTable();
            //    var fabdata = fabtable.rows().data();

            //    $('input[id=txtPurQty]').each(function (ig) {
            //        if (fabdata[ig].ColorID == Colorid && fabdata[ig].SizeId == Sizeid && fabdata[ig].CompSlNo == Sno) {
            //            var row = $(this).closest('tr');
            //            row.find('#txtfabActwt').val(finalwgt);
            //            row.find('#txtfabwt').val(finalwgt);
            //            row.find('#txtPurQty').val(0);
            //            row.find('#txtFPurQty').val(0);
            //        }
            //    });
            //    var bclrid = 0;
            //    var bclr = '';
            //    $.each(PlanCompFabricDetSave, function () {
            //        if (this.ColorID == Colorid && this.SizeId == Sizeid && this.CompSlNo == Sno) {
            //            this.Weight = finalwgt;
            //            this.ActWeight = finalwgt;
            //            this.FinishWidthID = fid;
            //            this.FinishWidth = fn;
            //            this.GreyWidthID = fid;
            //            this.GreyWidth = fn;
            //            //this.BColorPQty = 0;
            //            //this.FColorPQty = 0;
            //            bclrid = this.BColorID;
            //            bclr = this.Bcolor;
            //        }
            //    });
            //    $.each(PlanCompFabricDetSave, function () {
            //        if (this.CompSlNo == Sno) {
            //            this.BColorPQty = 0;
            //            this.FColorPQty = 0;
            //        }
            //    });
            //    loadCompFabSaveTable(PlanCompFabricDetSave);
            //}
            //else if (Colorid > 0 && Sizeid == 0) {
            //    $.each(PlanCompFabricDet, function () {
            //        if (this.ColorID == Colorid && this.CompSlNo == Sno) {
            //            var rt = finalwgt / quantity;
            //            this.Weight = (rt * this.Prdn_Qty).toFixed(3);
            //            this.ActWeight = (rt * this.Prdn_Qty).toFixed(3);
            //            this.FinishWidthID = fid;
            //            this.FinishWidth = fn;
            //            this.GreyWidthID = fid;
            //            this.GreyWidth = fn;
            //            //this.BColorPQty = 0;
            //            //this.FColorPQty = 0;
            //        }
            //    });

            //    $.each(PlanCompFabricDet, function () {
            //        if (this.CompSlNo == Sno) {
            //            this.BColorPQty = 0;
            //            this.FColorPQty = 0;
            //        }
            //    });
            //    //loadCompFabTable(PlanCompFabricDet);



            //    var fabtable = $('#tCDbody').DataTable();
            //    var fabdata = fabtable.rows().data();

            //    $('input[id=txtPurQty]').each(function (ig) {
            //        if (fabdata[ig].ColorID == Colorid && fabdata[ig].CompSlNo == Sno) {
            //            var row = $(this).closest('tr');
            //            var de = row.find('#txtfabPrdQty').val();
            //            var rt = finalwgt / quantity;
            //            row.find('#txtfabActwt').val((rt * de).toFixed(3));
            //            var rt = finalwgt / quantity;
            //            row.find('#txtfabwt').val((rt * de).toFixed(3));
            //            row.find('#txtfabgram').val(finalresult);
            //        }
            //    });

            //    $('input[id=txtPurQty]').each(function (ig) {
            //        if (fabdata[ig].CompSlNo == Sno) {
            //            var row = $(this).closest('tr');
            //            row.find('#txtPurQty').val(0);
            //            row.find('#txtFPurQty').val(0);
            //        }
            //    });
            //    var bclrid = 0;
            //    var bclr = '';
            //    $.each(PlanCompFabricDetSave, function () {
            //        if (this.ColorID == Colorid && this.CompSlNo == Sno) {
            //            var rt = finalwgt / quantity;
            //            this.Weight = (rt * this.Prdn_Qty).toFixed(3);
            //            this.ActWeight = (rt * this.Prdn_Qty).toFixed(3);
            //            this.FinishWidthID = fid;
            //            this.FinishWidth = fn;
            //            this.GreyWidthID = fid;
            //            this.GreyWidth = fn;
            //            bclrid = this.BColorID;
            //            bclr = this.Bcolor;
            //        }
            //    });
            //    $.each(PlanCompFabricDetSave, function () {
            //        if (this.CompSlNo == Sno) {
            //            this.BColorPQty = 0;
            //            this.FColorPQty = 0;
            //        }
            //    });
            //    //loadCompFabSaveTable(PlanCompFabricDetSave);
            //}
            //else if (Colorid == 0 && Sizeid > 0) {
            //    $.each(PlanCompFabricDet, function () {
            //        if (this.SizeId == Sizeid && this.CompSlNo == Sno) {
            //            var rt = finalwgt / quantity;
            //            this.Weight = (rt * this.Prdn_Qty).toFixed(3);
            //            this.ActWeight = (rt * this.Prdn_Qty).toFixed(3);
            //            this.FinishWidthID = fid;
            //            this.FinishWidth = fn;
            //            this.GreyWidthID = fid;
            //            this.GreyWidth = fn;
            //            //this.BColorPQty = 0;
            //            //this.FColorPQty = 0;
            //        }
            //    });

            //    $.each(PlanCompFabricDet, function () {
            //        if (this.CompSlNo == Sno) {
            //            this.BColorPQty = 0;
            //            this.FColorPQty = 0;
            //        }
            //    });
            //    //loadCompFabTable(PlanCompFabricDet);

            //    var fabtable = $('#tCDbody').DataTable();
            //    var fabdata = fabtable.rows().data();

            //    $('input[id=txtPurQty]').each(function (ig) {
            //        if (fabdata[ig].SizeId == Sizeid && fabdata[ig].CompSlNo == Sno) {
            //            var row = $(this).closest('tr');
            //            var de = row.find('#txtfabPrdQty').val();
            //            var rt = finalwgt / quantity;
            //            row.find('#txtfabActwt').val((rt * de).toFixed(3));
            //            row.find('#txtfabwt').val((rt * de).toFixed(3));
            //            row.find('#txtfabgram').val(finalresult);
            //        }
            //    });

            //    $('input[id=txtPurQty]').each(function (ig) {
            //        if (fabdata[ig].CompSlNo == Sno) {
            //            var row = $(this).closest('tr');
            //            row.find('#txtPurQty').val(0);
            //            row.find('#txtFPurQty').val(0);
            //        }
            //    });

            //    var bclrid = 0;
            //    var bclr = '';
            //    $.each(PlanCompFabricDetSave, function () {
            //        if (this.SizeId == Sizeid && this.CompSlNo == Sno) {
            //            var rt = finalwgt / quantity;
            //            this.Weight = (rt * this.Prdn_Qty).toFixed(3);
            //            this.ActWeight = (rt * this.Prdn_Qty).toFixed(3);
            //            this.FinishWidthID = fid;
            //            this.FinishWidth = fn;
            //            this.GreyWidthID = fid;
            //            this.GreyWidth = fn;
            //            bclrid = this.BColorID;
            //            bclr = this.Bcolor;
            //        }
            //    });
            //    $.each(PlanCompFabricDetSave, function () {
            //        if (this.CompSlNo == Sno) {
            //            this.BColorPQty = 0;
            //            this.FColorPQty = 0;
            //        }
            //    });
            //    //loadCompFabSaveTable(PlanCompFabricDetSave);
            //}

            //else {
            //    $.each(PlanCompFabricDet, function () {
            //        if (this.CompSlNo == Sno) {
            //            var rt = finalwgt / quantity;
            //            this.Weight = (rt * this.Prdn_Qty).toFixed(3);
            //            this.ActWeight = (rt * this.Prdn_Qty).toFixed(3);
            //            this.FinishWidthID = fid;
            //            this.FinishWidth = fn;
            //            this.GreyWidthID = fid;
            //            this.GreyWidth = fn;
            //            //this.BColorPQty = 0;
            //            //this.FColorPQty = 0;
            //        }
            //    });

            //    $.each(PlanCompFabricDet, function () {
            //        if (this.CompSlNo == Sno) {
            //            this.BColorPQty = 0;
            //            this.FColorPQty = 0;
            //        }
            //    });
            //    //loadCompFabTable(PlanCompFabricDet);

            //    var fabtable = $('#tCDbody').DataTable();
            //    var fabdata = fabtable.rows().data();

            //    $('input[id=txtPurQty]').each(function (ig) {
            //        if (fabdata[ig].CompSlNo == Sno) {
            //            var row = $(this).closest('tr');
            //            var de = row.find('#txtfabPrdQty').val();
            //            var rt = finalwgt / quantity;
            //            row.find('#txtfabActwt').val((rt * de).toFixed(3));
            //            row.find('#txtfabwt').val((rt * de).toFixed(3));
            //            row.find('#txtfabgram').val(finalresult);
            //        }
            //    });

            //    $('input[id=txtPurQty]').each(function (ig) {
            //        if (fabdata[ig].CompSlNo == Sno) {
            //            var row = $(this).closest('tr');
            //            row.find('#txtPurQty').val(0);
            //            row.find('#txtFPurQty').val(0);
            //        }
            //    });

            //    var bclrid = 0;
            //    var bclr = '';
            //    $.each(PlanCompFabricDetSave, function () {
            //        if (this.CompSlNo == Sno) {
            //            var rt = finalwgt / quantity;
            //            this.Weight = (rt * this.Prdn_Qty).toFixed(3);
            //            this.ActWeight = (rt * this.Prdn_Qty).toFixed(3);
            //            this.FinishWidthID = fid;
            //            this.FinishWidth = fn;
            //            this.GreyWidthID = fid;
            //            this.GreyWidth = fn;
            //            bclrid = this.BColorID;
            //            bclr = this.Bcolor;
            //        }
            //    });
            //    $.each(PlanCompFabricDetSave, function () {
            //        if (this.CompSlNo == Sno) {
            //            this.BColorPQty = 0;
            //            this.FColorPQty = 0;
            //        }
            //    });
            //    //loadCompFabSaveTable(PlanCompFabricDetSave);
            //}
            $('#txtWeight').val("");
            $('#txtActualWeight').val("");

            //yarn


            //yarn
            //var result = [];
            //$.each(PlanCompFabricDet, function (i, e) {
            //    var matchingItems = $.grep(result, function (item) {
            //        return item.BColorID === e.BColorID;
            //    });
            //    if (matchingItems.length === 0) {
            //        result.push(e);
            //    }
            //});



            //if (result.length > 0) {
            //    //PlanYarnSave = [];
            //    PlanYarn = [];

            //    PlanYarnSave = jQuery.grep(PlanYarnSave, function (value) {
            //        return value.SlNo != CompSlNo;
            //    });
            //    //PlanYarnSave = jQuery.grep(yarnlist, function (value) {
            //    //    return value.FabricID != fd;
            //    //});

            //    var Cs = result[0].CompSlNo;
            //    var ComponentId = 0;
            //    var Component = '';
            //    for (var t = 0; t < compList.length; t++) {
            //        if (compList[t].CompSlNo == Cs) {
            //            ComponentId = compList[t].ComponentID;
            //            Component = compList[t].ComponentName;
            //        }
            //    }

            //    //if (Mod != 0) {
            //    //    PlanYarnSave = $.grep(PlanYarnSave, function (e) {
            //    //        return e.SlNo != CompSlNo;
            //    //    });
            //    //}
            //    for (var j = 0; j < result.length; j++) {


            //        if (PlanYarn.length == 0) {
            //            leng = 1;

            //        }
            //        else {
            //            leng++;

            //        }
            //        var bd = 0;
            //        bd = result[j].BColorID;
            //        var snumb = result[j].snumb;
            //        var csln = result[j].CompSlNo;
            //        var totalqty = 0;
            //        for (var u = 0; u < PlanCompFabricDetSave.length; u++) {
            //            if (PlanCompFabricDetSave[u].BColorID == bd && PlanCompFabricDetSave[u].CompSlNo == csln) {

            //                var qty = PlanCompFabricDetSave[u].Weight;
            //                totalqty = totalqty + parseFloat(qty);
            //            }
            //        }


            //        var bcqty = 0;
            //        for (var r = 0; r < PlanCompFabricDetSave.length; r++) {
            //            if (PlanCompFabricDetSave[r].BColorID == bd && PlanCompFabricDetSave[r].CompSlNo == s) {

            //                var qty = PlanCompFabricDetSave[r].BColorPQty;
            //                bcqty = bcqty + parseFloat(qty);
            //            }
            //        }


            //        var finqty = 0;
            //        for (var n = 0; n < PlanCompFabricDetSave.length; n++) {
            //            if (PlanCompFabricDetSave[n].BColorID == bd && PlanCompFabricDetSave[n].CompSlNo == s) {

            //                var qty = PlanCompFabricDetSave[n].FColorPQty;
            //                finqty = finqty + parseFloat(qty);
            //            }
            //        }


            //        var totclrqty = parseFloat(bcqty) + parseFloat(finqty);

            //        //for (var w = 0; w < PlanCompFabricDet.length; w++) {
            //        //    if (PlanCompFabricDet[w].BColorID == bd && PlanCompFabricDet[w].snumb == sno) {

            //        totalqty = totalqty - totclrqty;
            //        totalqty = totalqty.toFixed(3);
            //        //    }
            //        //}

            //        var yarnlistobj = {
            //            PlanId: 0,
            //            Fabric: result[j].Fabric,
            //            FabricID: result[j].FabricID,
            //            Fabric_ColorId: result[j].BColorID,
            //            Fabric_Weight: totalqty,
            //            Fabric_type: result[j].type,//result[j].FabricType,
            //            EntryDate: new Date($('#txtEntryDate').val()),
            //            BColor: result[j].Bcolor,
            //            SlNo: result[j].CompSlNo,
            //            YPlanmasID: 0,
            //            YSlno: leng,
            //            ComponentId: ComponentId,
            //            Component: Component
            //        }




            //        PlanYarnSave.push(yarnlistobj);
            //        PlanYarn.push(yarnlistobj);
            //    }
            //}

            ////loadYarndetTab
            //PlanYarnSave = jQuery.grep(PlanYarnSave, function (value) {
            //    return value.Fabric_Weight != 0;
            //});
            //loadYarnSavedetTab(PlanYarnSave);


            //var ctry = [];
            //ctry = PlanYarnSave;
            //ctry = $.grep(ctry, function (e) {
            //    if (e.SlNo == s) {
            //        return e;
            //    }
            //});
            //PlanYarn = ctry;

            //loadYarndetTab(PlanYarn);


            //var totalamnt = 0;
            //for (var e = 0; e < PlanCompFabricDet.length; e++) {
            //    if (PlanCompFabricDet[e].CompSlNo == Sno && PlanCompFabricDet[e].Bcolor == bclr) {
            //        var amount = PlanCompFabricDet[e].Weight;
            //        totalamnt = totalamnt + parseFloat(amount);
            //    }
            //}

            //totalamnt = totalamnt.toFixed(3);
            //for (var e = 0; e < PlanYarnSave.length; e++) {
            //    if (PlanYarnSave[e].SlNo == Sno && PlanYarnSave[e].BColor == bclr) {
            //        PlanYarnSave[e].Fabric_Weight = (totalamnt);
            //    }
            //}
            //loadYarnSavedetTab(PlanYarnSave);


            //PlanYarn = $.grep(PlanYarnSave, function (e) {
            //    return e.SlNo == Sno;
            //});
            //loadYarndetTab(PlanYarn);

            // totwght();

            //Yarndet

            //if (PlanYarnDetSave.length > 0) {


            //    var ys = PlanYarn[0].YSlno;

            //    for (var b = 0; b < PlanYarnSave.length; b++) {
            //        if (PlanYarnSave[b].SlNo == CompSlNo) {
            //            var pysl = PlanYarnSave[b].YSlno;
            //            var cmpsl = PlanYarnSave[b].SlNo;
            //            var wgt = PlanYarnSave[b].Fabric_Weight;
            //            var bcid = PlanYarnSave[b].Fabric_ColorId;

            //            for (var m = 0; m < PlanYarnDetSave.length; m++) {
            //                if (PlanYarnDetSave[m].CompSno == cmpsl) {
            //                    var s = PlanYarnDetSave[m].SlNo;
            //                    if (PlanYarnDetSave[m].BaseColorID == bcid) {
            //                        YsBp = 1;
            //                        var pr = PlanYarnDetSave[m].Knit_In_Per;
            //                        var re = parseFloat((pr * wgt) / 100);
            //                        re = re.toFixed(3);
            //                        PlanYarnDetSave[m].Knit_In_Qty = re;
            //                        PlanYarnDetSave[m].Knit_In_ActQty = re;
            //                        PlanYarnDetSave[m].YSlNo = pysl;
            //                        PlanYarnDetSave[m].SlNo = s;
            //                        //PlanYarnDetSave[m].FabricID = FabricId;
            //                    }

            //                }
            //            }
            //        }
            //    }
            //    PlanYarnDet = $.grep(PlanYarnDetSave, function (e) {
            //        return e.CompSno == CompSlNo && e.YSlNo == ys;
            //    });
            //    Loadsepyarn(PlanYarnDet);
            //    LoadsepSaveyarn(PlanYarnDetSave);
            //}
            ConsmtnHideCol(type);
        }
        //Datatable textbox focus
        //var rows = $("#tCPIbody").dataTable().fnGetNodes();
        //var dtTable = $('#tCPIbody').DataTable();
        //for (var i = 0; i < rows.length; i++) {
        //    var sn = dtTable.cells({ row: i, column: 0 }).data()[0];
        //    $('input[id=txtWidth]').each(function () {
        //        if (sn == CPlan && $(this).val() == Val) {
        //            var row = $(this).closest('tr');
        //            var num = row.find('#txtWidth').val();
        //            row.find('#txtWidth').focus().val('').val(num);
        //            return true;
        //        }
        //    });
        //}
        totconwght();
    });

    $(document).on('change', '.calcallowwidth', function (e) {
        debugger;

        var table = $('#tCPIbody').DataTable();
        var CPlan = table.row($(this).parents('tr')).data()["CPlanSlNo"];
        var quantity = table.row($(this).parents('tr')).data()["Prdn_Qty"];
        var len = table.row($(this).parents('tr')).data()["Length"];
        var allowlen = table.row($(this).parents('tr')).data()["AlloLen"];
        var wid = table.row($(this).parents('tr')).data()["Width"];
        var gsm = table.row($(this).parents('tr')).data()["GSM"];
        var Colorid = table.row($(this).parents('tr')).data()["ColorID"];
        var Sizeid = table.row($(this).parents('tr')).data()["SizeId"];
        var Sno = table.row($(this).parents('tr')).data()["CompSlNo"];
        var pat = table.row($(this).parents('tr')).data()["Pattern"];

        if (checkpattern == 0) {
            pat = 1;
        } else {
            pat = table.row($(this).parents('tr')).data()["Pattern"];
        }

        for (var t = 0; t < compList.length; t++) {
            if (compList[t].CompSlNo == Sno) {
                var parts = compList[t].No_Of_Parts;
            }
        }

        var Val = $(this).val();
        Width = Val;
        fillvar = 'AW';
        rowindex = $(this).closest('tr').index();
        indexforfill = rowindex;

        $.each(ConItemList, function () {
            if (this.CPlanSlNo == CPlan && this.CompSlNo == Sno) {
                this.AllowWid = parseFloat(Val);

            }
        });

        //loadAdConTable(ConItemList);


        $.each(ConItemListSave, function () {
            if (this.CPlanSlNo == CPlan && this.CompSlNo == Sno) {
                this.AllowWid = parseFloat(Val);

            }
        });
        //loadconSaveTable(ConItemListSave);

        if (pat == 0) {
            res1 = 0;
        }
        else {
            var totlen = parseFloat(len) + parseFloat(allowlen);
            var totwid = parseFloat(wid) + parseFloat(Val);
            var res1 = parseFloat(parseFloat(totlen * totwid) / pat);
        }

        res1 = res1.toFixed(3);
        var res = (res1 * gsm) / 10000;
        Wght = quantity * res / 1000;

        var finalresult = res.toFixed(3);
        var finalwgt = (Wght * parts).toFixed(3);


        //Dia
        var dd = parseFloat(Val) + parseFloat(wid);
        dd = parseFloat(dd / 2.54).toFixed(0);
        var r = dd + "DIA";
        var fab = $.grep(Fabriclist, function (e) {

            return e.Size == r;

        });
        var fid = 0;
        var fn = '';
        if (fab.length == 0 && dd != 0) {

            DiaSize = r;
            //SizeAdd(r);

            $.when($.ajax(NewSizeAdd(r))).done(function getNewfabric() {

                var fabres = $.grep(Fabriclist, function (e) {

                    return e.Size == DiaSize;

                });
                fid = fabres[0].SizeId;
                fn = fabres[0].Size;
                $.each(ConItemList, function () {
                    if (this.CPlanSlNo == CPlan) {
                        this.Pattern = pat;
                        this.GSM = gsm;
                        this.Grammage = finalresult;
                        this.Weight = finalwgt;
                        this.FinishWidthID = fid;
                        this.FinishWidth = fn;
                        this.GreyWidthID = fid;
                        this.GreyWidth = fn;
                    }
                });

                // loadAdConTable(ConItemList);


                var optionText = fn;
                var optionValue = fid;

                $('#ddlFSize').append(new Option(optionText, optionValue));
                $('#ddlGSize').append(new Option(optionText, optionValue));



                var table = $('#tCPIbody').DataTable();
                var data = table.rows().data();

                $('input[id=txtalloeWidth]').each(function (ig) {
                    if (data[ig].CPlanSlNo == CPlan && data[ig].CompSlNo == Sno) {
                        var row = $(this).closest('tr');
                        //row.find('#txtLen').val(len);
                        //row.find('#txtallowLen').val(allowlen);
                        //row.find('#txtWidth').val(wid);
                        row.find('#txtalloeWidth').val(Val);
                        //row.find('#txtGsm').val(gsm);
                        row.find('#txtGram').val(finalresult);
                        row.find('#txtWght').val(finalwgt);
                        row.find('#ddlFSize').val(fid).trigger('change');
                        row.find('#ddlGSize').val(fid).trigger('change');

                    }
                });



                //var table = $('#tCPIbody').DataTable();
                //var csdata = table.rows().data();

                //$('input[id=txtGram]').each(function (ig) {
                //    if (csdata[ig].CPlanSlNo == CPlan) {
                //        var row = $(this).closest('tr');
                //        row.find('#txtalloeWidth').val(Val);
                //        row.find('#txtGsm').val(gsm);
                //        row.find('#txtGram').val(finalresult);
                //        row.find('#txtWght').val(finalwgt);

                //    }
                //});


                $.each(ConItemListSave, function () {
                    if (this.CPlanSlNo == CPlan) {

                        this.GSM = gsm;
                        this.Grammage = finalresult;
                        this.Weight = finalwgt;
                        this.FinishWidthID = fid;
                        this.FinishWidth = fn;
                        this.GreyWidthID = fid;
                        this.GreyWidth = fn;
                    }
                });

                //loadconSaveTable(ConItemListSave);

                //if (Colorid > 0 && Sizeid > 0) {
                //    $.each(PlanCompFabricDet, function () {
                //        if (this.ColorID == Colorid && this.SizeId == Sizeid && this.CompSlNo == Sno) {
                //            this.Weight = finalwgt;
                //            this.ActWeight = finalwgt;
                //            this.FinishWidthID = fid;
                //            this.FinishWidth = fn;
                //            this.GreyWidthID = fid;
                //            this.GreyWidth = fn;
                //            //this.BColorPQty = 0;
                //            //this.FColorPQty = 0;
                //        }
                //    });

                //    $.each(PlanCompFabricDet, function () {
                //        if (this.CompSlNo == Sno) {
                //            this.BColorPQty = 0;
                //            this.FColorPQty = 0;
                //        }
                //    });

                //    //loadCompFabTable(PlanCompFabricDet);

                //    var fabtable = $('#tCDbody').DataTable();
                //    var fabdata = fabtable.rows().data();

                //    $('input[id=txtPurQty]').each(function (ig) {
                //        if (fabdata[ig].ColorID == Colorid && fabdata[ig].SizeId == Sizeid && fabdata[ig].CompSlNo == Sno) {
                //            var row = $(this).closest('tr');
                //            row.find('#txtfabActwt').val(finalwgt);
                //            row.find('#txtfabwt').val(finalwgt);
                //            row.find('#txtPurQty').val(0);
                //            row.find('#txtFPurQty').val(0);
                //        }
                //    });
                //    var bclrid = 0;
                //    var bclr = '';
                //    $.each(PlanCompFabricDetSave, function () {
                //        if (this.ColorID == Colorid && this.SizeId == Sizeid && this.CompSlNo == Sno) {
                //            this.Weight = finalwgt;
                //            this.ActWeight = finalwgt;
                //            this.FinishWidthID = fid;
                //            this.FinishWidth = fn;
                //            this.GreyWidthID = fid;
                //            this.GreyWidth = fn;
                //            //this.BColorPQty = 0;
                //            //this.FColorPQty = 0;
                //            bclrid = this.BColorID;
                //            bclr = this.Bcolor;
                //        }
                //    });
                //    $.each(PlanCompFabricDetSave, function () {
                //        if (this.CompSlNo == Sno) {
                //            this.BColorPQty = 0;
                //            this.FColorPQty = 0;
                //        }
                //    });
                //    //loadCompFabSaveTable(PlanCompFabricDetSave);
                //}
                //else if (Colorid > 0 && Sizeid == 0) {
                //    $.each(PlanCompFabricDet, function () {
                //        if (this.ColorID == Colorid && this.CompSlNo == Sno) {
                //            var rt = finalwgt / quantity;
                //            this.Weight = (rt * this.Prdn_Qty).toFixed(3);
                //            this.ActWeight = (rt * this.Prdn_Qty).toFixed(3);
                //            this.FinishWidthID = fid;
                //            this.FinishWidth = fn;
                //            this.GreyWidthID = fid;
                //            this.GreyWidth = fn;
                //            //this.BColorPQty = 0;
                //            //this.FColorPQty = 0;
                //        }
                //    });

                //    $.each(PlanCompFabricDet, function () {
                //        if (this.CompSlNo == Sno) {
                //            this.BColorPQty = 0;
                //            this.FColorPQty = 0;
                //        }
                //    });
                //    //loadCompFabTable(PlanCompFabricDet);



                //    var fabtable = $('#tCDbody').DataTable();
                //    var fabdata = fabtable.rows().data();

                //    $('input[id=txtPurQty]').each(function (ig) {
                //        if (fabdata[ig].ColorID == Colorid && fabdata[ig].CompSlNo == Sno) {
                //            var row = $(this).closest('tr');
                //            var de = row.find('#txtfabPrdQty').val();
                //            var rt = finalwgt / quantity;
                //            row.find('#txtfabActwt').val((rt * de).toFixed(3));
                //            var rt = finalwgt / quantity;
                //            row.find('#txtfabwt').val((rt * de).toFixed(3));
                //            row.find('#txtfabgram').val(finalresult);
                //        }
                //    });

                //    $('input[id=txtPurQty]').each(function (ig) {
                //        if (fabdata[ig].CompSlNo == Sno) {
                //            var row = $(this).closest('tr');
                //            row.find('#txtPurQty').val(0);
                //            row.find('#txtFPurQty').val(0);
                //        }
                //    });
                //    var bclrid = 0;
                //    var bclr = '';
                //    $.each(PlanCompFabricDetSave, function () {
                //        if (this.ColorID == Colorid && this.CompSlNo == Sno) {
                //            var rt = finalwgt / quantity;
                //            this.Weight = (rt * this.Prdn_Qty).toFixed(3);
                //            this.ActWeight = (rt * this.Prdn_Qty).toFixed(3);
                //            this.FinishWidthID = fid;
                //            this.FinishWidth = fn;
                //            this.GreyWidthID = fid;
                //            this.GreyWidth = fn;
                //            bclrid = this.BColorID;
                //            bclr = this.Bcolor;
                //        }
                //    });
                //    $.each(PlanCompFabricDetSave, function () {
                //        if (this.CompSlNo == Sno) {
                //            this.BColorPQty = 0;
                //            this.FColorPQty = 0;
                //        }
                //    });
                //    // loadCompFabSaveTable(PlanCompFabricDetSave);
                //}
                //else if (Colorid == 0 && Sizeid > 0) {
                //    $.each(PlanCompFabricDet, function () {
                //        if (this.SizeId == Sizeid && this.CompSlNo == Sno) {
                //            var rt = finalwgt / quantity;
                //            this.Weight = (rt * this.Prdn_Qty).toFixed(3);
                //            this.ActWeight = (rt * this.Prdn_Qty).toFixed(3);
                //            this.FinishWidthID = fid;
                //            this.FinishWidth = fn;
                //            this.GreyWidthID = fid;
                //            this.GreyWidth = fn;
                //            //this.BColorPQty = 0;
                //            //this.FColorPQty = 0;
                //        }
                //    });

                //    $.each(PlanCompFabricDet, function () {
                //        if (this.CompSlNo == Sno) {
                //            this.BColorPQty = 0;
                //            this.FColorPQty = 0;
                //        }
                //    });
                //    //loadCompFabTable(PlanCompFabricDet);

                //    var fabtable = $('#tCDbody').DataTable();
                //    var fabdata = fabtable.rows().data();

                //    $('input[id=txtPurQty]').each(function (ig) {
                //        if (fabdata[ig].SizeId == Sizeid && fabdata[ig].CompSlNo == Sno) {
                //            var row = $(this).closest('tr');
                //            var de = row.find('#txtfabPrdQty').val();
                //            var rt = finalwgt / quantity;
                //            row.find('#txtfabActwt').val((rt * de).toFixed(3));
                //            row.find('#txtfabwt').val((rt * de).toFixed(3));
                //            row.find('#txtfabgram').val(finalresult);
                //        }
                //    });

                //    $('input[id=txtPurQty]').each(function (ig) {
                //        if (fabdata[ig].CompSlNo == Sno) {
                //            var row = $(this).closest('tr');
                //            row.find('#txtPurQty').val(0);
                //            row.find('#txtFPurQty').val(0);
                //        }
                //    });

                //    var bclrid = 0;
                //    var bclr = '';
                //    $.each(PlanCompFabricDetSave, function () {
                //        if (this.SizeId == Sizeid && this.CompSlNo == Sno) {
                //            var rt = finalwgt / quantity;
                //            this.Weight = (rt * this.Prdn_Qty).toFixed(3);
                //            this.ActWeight = (rt * this.Prdn_Qty).toFixed(3);
                //            this.FinishWidthID = fid;
                //            this.FinishWidth = fn;
                //            this.GreyWidthID = fid;
                //            this.GreyWidth = fn;
                //            bclrid = this.BColorID;
                //            bclr = this.Bcolor;
                //        }
                //    });
                //    $.each(PlanCompFabricDetSave, function () {
                //        if (this.CompSlNo == Sno) {
                //            this.BColorPQty = 0;
                //            this.FColorPQty = 0;
                //        }
                //    });
                //    //loadCompFabSaveTable(PlanCompFabricDetSave);
                //}
                //else {
                //    $.each(PlanCompFabricDet, function () {
                //        if (this.CompSlNo == Sno) {
                //            var rt = finalwgt / quantity;
                //            this.Weight = (rt * this.Prdn_Qty).toFixed(3);
                //            this.ActWeight = (rt * this.Prdn_Qty).toFixed(3);
                //            this.FinishWidthID = fid;
                //            this.FinishWidth = fn;
                //            this.GreyWidthID = fid;
                //            this.GreyWidth = fn;
                //        }
                //    });

                //    $.each(PlanCompFabricDet, function () {
                //        if (this.CompSlNo == Sno) {
                //            this.BColorPQty = 0;
                //            this.FColorPQty = 0;
                //        }
                //    });

                //    //loadCompFabTable(PlanCompFabricDet);

                //    var fabtable = $('#tCDbody').DataTable();
                //    var fabdata = fabtable.rows().data();

                //    $('input[id=txtPurQty]').each(function (ig) {
                //        if (fabdata[ig].CompSlNo == Sno) {
                //            var row = $(this).closest('tr');
                //            var de = row.find('#txtfabPrdQty').val();
                //            var rt = finalwgt / quantity;
                //            row.find('#txtfabActwt').val((rt * de).toFixed(3));
                //            row.find('#txtfabwt').val((rt * de).toFixed(3));
                //            row.find('#txtfabgram').val(finalresult);
                //        }
                //    });
                //    var bclrid = 0;
                //    var bclr = '';
                //    $.each(PlanCompFabricDetSave, function () {
                //        if (this.CompSlNo == Sno) {
                //            var rt = finalwgt / quantity;
                //            this.Weight = (rt * this.Prdn_Qty).toFixed(3);
                //            this.ActWeight = (rt * this.Prdn_Qty).toFixed(3);
                //            this.FinishWidthID = fid;
                //            this.FinishWidth = fn;
                //            this.GreyWidthID = fid;
                //            this.GreyWidth = fn;
                //            bclrid = this.BColorID;
                //            bclr = this.Bcolor;
                //        }
                //    });
                //    $.each(PlanCompFabricDetSave, function () {
                //        if (this.CompSlNo == Sno) {
                //            this.BColorPQty = 0;
                //            this.FColorPQty = 0;
                //        }
                //    });
                //}
                $('#txtWeight').val("");
                $('#txtActualWeight').val("");

                ////yarn
                //var result = [];
                //$.each(PlanCompFabricDet, function (i, e) {
                //    var matchingItems = $.grep(result, function (item) {
                //        return item.BColorID === e.BColorID;
                //    });
                //    if (matchingItems.length === 0) {
                //        result.push(e);
                //    }
                //});



                //if (result.length > 0) {
                //    //PlanYarnSave = [];
                //    PlanYarn = [];

                //    PlanYarnSave = jQuery.grep(PlanYarnSave, function (value) {
                //        return value.SlNo != CompSlNo;
                //    });
                //    //PlanYarnSave = jQuery.grep(yarnlist, function (value) {
                //    //    return value.FabricID != fd;
                //    //});

                //    var Cs = result[0].CompSlNo;
                //    var ComponentId = 0;
                //    var Component = '';
                //    for (var t = 0; t < compList.length; t++) {
                //        if (compList[t].CompSlNo == Cs) {
                //            ComponentId = compList[t].ComponentID;
                //            Component = compList[t].ComponentName;
                //        }
                //    }

                //    //if (Mod != 0) {
                //    //    PlanYarnSave = $.grep(PlanYarnSave, function (e) {
                //    //        return e.SlNo != CompSlNo;
                //    //    });
                //    //}
                //    for (var j = 0; j < result.length; j++) {


                //        if (PlanYarn.length == 0) {
                //            leng = 1;

                //        }
                //        else {
                //            leng++;

                //        }
                //        var bd = 0;
                //        bd = result[j].BColorID;
                //        var snumb = result[j].snumb;
                //        var csln = result[j].CompSlNo;
                //        var totalqty = 0;
                //        for (var u = 0; u < PlanCompFabricDetSave.length; u++) {
                //            if (PlanCompFabricDetSave[u].BColorID == bd && PlanCompFabricDetSave[u].CompSlNo == csln) {

                //                var qty = PlanCompFabricDetSave[u].Weight;
                //                totalqty = totalqty + parseFloat(qty);
                //            }
                //        }


                //        var bcqty = 0;
                //        for (var r = 0; r < PlanCompFabricDetSave.length; r++) {
                //            if (PlanCompFabricDetSave[r].BColorID == bd && PlanCompFabricDetSave[r].CompSlNo == s) {

                //                var qty = PlanCompFabricDetSave[r].BColorPQty;
                //                bcqty = bcqty + parseFloat(qty);
                //            }
                //        }


                //        var finqty = 0;
                //        for (var n = 0; n < PlanCompFabricDetSave.length; n++) {
                //            if (PlanCompFabricDetSave[n].BColorID == bd && PlanCompFabricDetSave[n].CompSlNo == s) {

                //                var qty = PlanCompFabricDetSave[n].FColorPQty;
                //                finqty = finqty + parseFloat(qty);
                //            }
                //        }


                //        var totclrqty = parseFloat(bcqty) + parseFloat(finqty);

                //        //for (var w = 0; w < PlanCompFabricDet.length; w++) {
                //        //    if (PlanCompFabricDet[w].BColorID == bd && PlanCompFabricDet[w].snumb == sno) {

                //        totalqty = totalqty - totclrqty;
                //        totalqty = totalqty.toFixed(3);
                //        //    }
                //        //}

                //        var yarnlistobj = {
                //            PlanId: 0,
                //            Fabric: result[j].Fabric,
                //            FabricID: result[j].FabricID,
                //            Fabric_ColorId: result[j].BColorID,
                //            Fabric_Weight: totalqty,
                //            Fabric_type: result[j].type,//result[j].FabricType,
                //            EntryDate: new Date($('#txtEntryDate').val()),
                //            BColor: result[j].Bcolor,
                //            SlNo: result[j].CompSlNo,
                //            YPlanmasID: 0,
                //            YSlno: leng,
                //            ComponentId: ComponentId,
                //            Component: Component
                //        }




                //        PlanYarnSave.push(yarnlistobj);
                //        PlanYarn.push(yarnlistobj);
                //    }
                //}

                ////loadYarndetTab
                //PlanYarnSave = jQuery.grep(PlanYarnSave, function (value) {
                //    return value.Fabric_Weight != 0;
                //});
                //loadYarnSavedetTab(PlanYarnSave);


                //loadYarndetTab(PlanYarn);




                //totwght();

                //Yarndet

                //if (PlanYarnDetSave.length > 0) {

                //    var ys = PlanYarn[0].YSlno;

                //    for (var b = 0; b < PlanYarnSave.length; b++) {
                //        if (PlanYarnSave[b].SlNo == CompSlNo) {
                //            var pysl = PlanYarnSave[b].YSlno;
                //            var cmpsl = PlanYarnSave[b].SlNo;
                //            var wgt = PlanYarnSave[b].Fabric_Weight;
                //            var bcid = PlanYarnSave[b].Fabric_ColorId;

                //            for (var m = 0; m < PlanYarnDetSave.length; m++) {
                //                if (PlanYarnDetSave[m].CompSno == cmpsl) {
                //                    var s = PlanYarnDetSave[m].SlNo;
                //                    if (PlanYarnDetSave[m].BaseColorID == bcid) {
                //                        YsBp = 1;
                //                        var pr = PlanYarnDetSave[m].Knit_In_Per;
                //                        var re = parseFloat((pr * wgt) / 100);
                //                        re = re.toFixed(3);
                //                        PlanYarnDetSave[m].Knit_In_Qty = re;
                //                        PlanYarnDetSave[m].Knit_In_ActQty = re;
                //                        PlanYarnDetSave[m].YSlNo = pysl;
                //                        PlanYarnDetSave[m].SlNo = s;
                //                        //PlanYarnDetSave[m].FabricID = FabricId;
                //                    }

                //                }
                //            }
                //        }
                //    }
                //    PlanYarnDet = $.grep(PlanYarnDetSave, function (e) {
                //        return e.CompSno == CompSlNo && e.YSlNo == ys;
                //    });
                //    Loadsepyarn(PlanYarnDet);
                //    LoadsepSaveyarn(PlanYarnDetSave);
                //}

                ConsmtnHideCol(type);


            });
        }
        else {
            DiaSize = r;
            //SizeAdd(r);          
            if (dd == 0) {
                fid = 0;
                fn = '--Select--';
            }
            else {
                var fabres = $.grep(Fabriclist, function (e) {

                    return e.Size == DiaSize;

                });
                fid = fabres[0].SizeId;
                fn = fabres[0].Size;
            }
            $.each(ConItemList, function () {
                if (this.CPlanSlNo == CPlan && this.CompSlNo == Sno) {
                    this.Pattern = pat;
                    this.GSM = gsm;
                    this.Grammage = finalresult;
                    this.Weight = finalwgt;
                    this.FinishWidthID = fid;
                    this.FinishWidth = fn;
                    this.GreyWidthID = fid;
                    this.GreyWidth = fn;
                }
            });

            //loadAdConTable(ConItemList);



            //var CPlan = table.row($(this).parents('tr')).data()["CPlanSlNo"];
            //var quantity = table.row($(this).parents('tr')).data()["Prdn_Qty"];
            //var len = table.row($(this).parents('tr')).data()["Length"];
            //var allowlen = table.row($(this).parents('tr')).data()["AlloLen"];
            //var wid = table.row($(this).parents('tr')).data()["Width"];
            //var gsm = table.row($(this).parents('tr')).data()["GSM"];
            //var Colorid = table.row($(this).parents('tr')).data()["ColorID"];
            //var Sizeid = table.row($(this).parents('tr')).data()["SizeId"];
            //var Sno = table.row($(this).parents('tr')).data()["CompSlNo"];
            //var pat = table.row($(this).parents('tr')).data()["Pattern"];


            var table = $('#tCPIbody').DataTable();
            var data = table.rows().data();

            $('input[id=txtalloeWidth]').each(function (ig) {
                if (data[ig].CPlanSlNo == CPlan) {
                    var row = $(this).closest('tr');
                    row.find('#txtLen').val(len);
                    row.find('#txtallowLen').val(allowlen);
                    row.find('#txtWidth').val(wid);
                    row.find('#txtalloeWidth').val(Val);
                    row.find('#txtGsm').val(gsm);
                    row.find('#txtGram').val(finalresult);
                    row.find('#txtWght').val(finalwgt);
                    row.find('#ddlFSize').val(fid).trigger('change');
                    row.find('#ddlGSize').val(fid).trigger('change');

                }
            });


            //var table = $('#tCPIbody').DataTable();
            //var ccdata = table.rows().data();

            //$('input[id=txtGram]').each(function (ig) {
            //    if (ccdata[ig].CPlanSlNo == CPlan) {
            //        var row = $(this).closest('tr');
            //        row.find('#txtalloeWidth').val(Val);
            //        row.find('#txtGsm').val(gsm);
            //        row.find('#txtGram').val(finalresult);
            //        row.find('#txtWght').val(finalwgt);

            //    }
            //});


            $.each(ConItemListSave, function () {
                if (this.CPlanSlNo == CPlan && this.CompSlNo == Sno) {

                    this.GSM = gsm;
                    this.Grammage = finalresult;
                    this.Weight = finalwgt;
                    this.FinishWidthID = fid;
                    this.FinishWidth = fn;
                    this.GreyWidthID = fid;
                    this.GreyWidth = fn;
                }
            });

            // loadconSaveTable(ConItemListSave);

            //if (Colorid > 0 && Sizeid > 0) {
            //    $.each(PlanCompFabricDet, function () {
            //        if (this.ColorID == Colorid && this.SizeId == Sizeid && this.CompSlNo == Sno) {
            //            this.Weight = finalwgt;
            //            this.ActWeight = finalwgt;
            //            this.FinishWidthID = fid;
            //            this.FinishWidth = fn;
            //            this.GreyWidthID = fid;
            //            this.GreyWidth = fn;
            //            //this.BColorPQty = 0;
            //            //this.FColorPQty = 0;
            //        }
            //    });

            //    $.each(PlanCompFabricDet, function () {
            //        if (this.CompSlNo == Sno) {
            //            this.BColorPQty = 0;
            //            this.FColorPQty = 0;
            //        }
            //    });

            //    //loadCompFabTable(PlanCompFabricDet);

            //    var fabtable = $('#tCDbody').DataTable();
            //    var fabdata = fabtable.rows().data();

            //    $('input[id=txtPurQty]').each(function (ig) {
            //        if (fabdata[ig].ColorID == Colorid && fabdata[ig].SizeId == Sizeid && fabdata[ig].CompSlNo == Sno) {
            //            var row = $(this).closest('tr');
            //            row.find('#txtfabActwt').val(finalwgt);
            //            row.find('#txtfabwt').val(finalwgt);
            //            row.find('#txtPurQty').val(0);
            //            row.find('#txtFPurQty').val(0);
            //        }
            //    });
            //    var bclrid = 0;
            //    var bclr = '';
            //    $.each(PlanCompFabricDetSave, function () {
            //        if (this.ColorID == Colorid && this.SizeId == Sizeid && this.CompSlNo == Sno) {
            //            this.Weight = finalwgt;
            //            this.ActWeight = finalwgt;
            //            this.FinishWidthID = fid;
            //            this.FinishWidth = fn;
            //            this.GreyWidthID = fid;
            //            this.GreyWidth = fn;
            //            //this.BColorPQty = 0;
            //            //this.FColorPQty = 0;
            //            bclrid = this.BColorID;
            //            bclr = this.Bcolor;
            //        }
            //    });
            //    $.each(PlanCompFabricDetSave, function () {
            //        if (this.CompSlNo == Sno) {
            //            this.BColorPQty = 0;
            //            this.FColorPQty = 0;
            //        }
            //    });
            //    //loadCompFabSaveTable(PlanCompFabricDetSave);
            //}
            //else if (Colorid > 0 && Sizeid == 0) {
            //    $.each(PlanCompFabricDet, function () {
            //        if (this.ColorID == Colorid && this.CompSlNo == Sno) {
            //            var rt = finalwgt / quantity;
            //            this.Weight = (rt * this.Prdn_Qty).toFixed(3);
            //            this.ActWeight = (rt * this.Prdn_Qty).toFixed(3);
            //            this.FinishWidthID = fid;
            //            this.FinishWidth = fn;
            //            this.GreyWidthID = fid;
            //            this.GreyWidth = fn;
            //            //this.BColorPQty = 0;
            //            //this.FColorPQty = 0;
            //        }
            //    });

            //    $.each(PlanCompFabricDet, function () {
            //        if (this.CompSlNo == Sno) {
            //            this.BColorPQty = 0;
            //            this.FColorPQty = 0;
            //        }
            //    });
            //    //loadCompFabTable(PlanCompFabricDet);



            //    var fabtable = $('#tCDbody').DataTable();
            //    var fabdata = fabtable.rows().data();

            //    $('input[id=txtPurQty]').each(function (ig) {
            //        if (fabdata[ig].ColorID == Colorid && fabdata[ig].CompSlNo == Sno) {
            //            var row = $(this).closest('tr');
            //            var de = row.find('#txtfabPrdQty').val();
            //            var rt = finalwgt / quantity;
            //            row.find('#txtfabActwt').val((rt * de).toFixed(3));
            //            var rt = finalwgt / quantity;
            //            row.find('#txtfabwt').val((rt * de).toFixed(3));
            //            row.find('#txtfabgram').val(finalresult);
            //        }
            //    });

            //    $('input[id=txtPurQty]').each(function (ig) {
            //        if (fabdata[ig].CompSlNo == Sno) {
            //            var row = $(this).closest('tr');
            //            row.find('#txtPurQty').val(0);
            //            row.find('#txtFPurQty').val(0);
            //        }
            //    });
            //    var bclrid = 0;
            //    var bclr = '';
            //    $.each(PlanCompFabricDetSave, function () {
            //        if (this.ColorID == Colorid && this.CompSlNo == Sno) {
            //            var rt = finalwgt / quantity;
            //            this.Weight = (rt * this.Prdn_Qty).toFixed(3);
            //            this.ActWeight = (rt * this.Prdn_Qty).toFixed(3);
            //            this.FinishWidthID = fid;
            //            this.FinishWidth = fn;
            //            this.GreyWidthID = fid;
            //            this.GreyWidth = fn;
            //            bclrid = this.BColorID;
            //            bclr = this.Bcolor;
            //        }
            //    });
            //    $.each(PlanCompFabricDetSave, function () {
            //        if (this.CompSlNo == Sno) {
            //            this.BColorPQty = 0;
            //            this.FColorPQty = 0;
            //        }
            //    });
            //    //loadCompFabSaveTable(PlanCompFabricDetSave);
            //}
            //else if (Colorid == 0 && Sizeid > 0) {
            //    $.each(PlanCompFabricDet, function () {
            //        if (this.SizeId == Sizeid && this.CompSlNo == Sno) {
            //            var rt = finalwgt / quantity;
            //            this.Weight = (rt * this.Prdn_Qty).toFixed(3);
            //            this.ActWeight = (rt * this.Prdn_Qty).toFixed(3);
            //            this.FinishWidthID = fid;
            //            this.FinishWidth = fn;
            //            this.GreyWidthID = fid;
            //            this.GreyWidth = fn;
            //            //this.BColorPQty = 0;
            //            //this.FColorPQty = 0;
            //        }
            //    });

            //    $.each(PlanCompFabricDet, function () {
            //        if (this.CompSlNo == Sno) {
            //            this.BColorPQty = 0;
            //            this.FColorPQty = 0;
            //        }
            //    });
            //    //loadCompFabTable(PlanCompFabricDet);

            //    var fabtable = $('#tCDbody').DataTable();
            //    var fabdata = fabtable.rows().data();

            //    $('input[id=txtPurQty]').each(function (ig) {
            //        if (fabdata[ig].SizeId == Sizeid && fabdata[ig].CompSlNo == Sno) {
            //            var row = $(this).closest('tr');
            //            var de = row.find('#txtfabPrdQty').val();
            //            var rt = finalwgt / quantity;
            //            row.find('#txtfabActwt').val((rt * de).toFixed(3));
            //            row.find('#txtfabwt').val((rt * de).toFixed(3));
            //            row.find('#txtfabgram').val(finalresult);
            //        }
            //    });

            //    $('input[id=txtPurQty]').each(function (ig) {
            //        if (fabdata[ig].CompSlNo == Sno) {
            //            var row = $(this).closest('tr');
            //            row.find('#txtPurQty').val(0);
            //            row.find('#txtFPurQty').val(0);
            //        }
            //    });

            //    var bclrid = 0;
            //    var bclr = '';
            //    $.each(PlanCompFabricDetSave, function () {
            //        if (this.SizeId == Sizeid && this.CompSlNo == Sno) {
            //            var rt = finalwgt / quantity;
            //            this.Weight = (rt * this.Prdn_Qty).toFixed(3);
            //            this.ActWeight = (rt * this.Prdn_Qty).toFixed(3);
            //            this.FinishWidthID = fid;
            //            this.FinishWidth = fn;
            //            this.GreyWidthID = fid;
            //            this.GreyWidth = fn;
            //            bclrid = this.BColorID;
            //            bclr = this.Bcolor;
            //        }
            //    });
            //    $.each(PlanCompFabricDetSave, function () {
            //        if (this.CompSlNo == Sno) {
            //            this.BColorPQty = 0;
            //            this.FColorPQty = 0;
            //        }
            //    });
            //    //loadCompFabSaveTable(PlanCompFabricDetSave);
            //}

            //else {
            //    $.each(PlanCompFabricDet, function () {
            //        if (this.CompSlNo == Sno) {
            //            var rt = finalwgt / quantity;
            //            this.Weight = (rt * this.Prdn_Qty).toFixed(3);
            //            this.ActWeight = (rt * this.Prdn_Qty).toFixed(3);
            //            this.FinishWidthID = fid;
            //            this.FinishWidth = fn;
            //            this.GreyWidthID = fid;
            //            this.GreyWidth = fn;
            //        }
            //    });

            //    $.each(PlanCompFabricDet, function () {
            //        if (this.CompSlNo == Sno) {
            //            this.BColorPQty = 0;
            //            this.FColorPQty = 0;
            //        }
            //    });

            //    //loadCompFabTable(PlanCompFabricDet);

            //    var fabtable = $('#tCDbody').DataTable();
            //    var fabdata = fabtable.rows().data();

            //    $('input[id=txtPurQty]').each(function (ig) {
            //        if (fabdata[ig].CompSlNo == Sno) {
            //            var row = $(this).closest('tr');
            //            var de = row.find('#txtfabPrdQty').val();
            //            var rt = finalwgt / quantity;
            //            row.find('#txtfabActwt').val((rt * de).toFixed(3));
            //            row.find('#txtfabwt').val((rt * de).toFixed(3));
            //            row.find('#txtfabgram').val(finalresult);
            //        }
            //    });
            //    var bclrid = 0;
            //    var bclr = '';
            //    $.each(PlanCompFabricDetSave, function () {
            //        if (this.CompSlNo == Sno) {
            //            var rt = finalwgt / quantity;
            //            this.Weight = (rt * this.Prdn_Qty).toFixed(3);
            //            this.ActWeight = (rt * this.Prdn_Qty).toFixed(3);
            //            this.FinishWidthID = fid;
            //            this.FinishWidth = fn;
            //            this.GreyWidthID = fid;
            //            this.GreyWidth = fn;
            //            bclrid = this.BColorID;
            //            bclr = this.Bcolor;
            //        }
            //    });
            //    $.each(PlanCompFabricDetSave, function () {
            //        if (this.CompSlNo == Sno) {
            //            this.BColorPQty = 0;
            //            this.FColorPQty = 0;
            //        }
            //    });
            //    //loadCompFabSaveTable(PlanCompFabricDetSave);
            //}
            $('#txtWeight').val("");
            $('#txtActualWeight').val("");

            //yarn
            //var result = [];
            //$.each(PlanCompFabricDet, function (i, e) {
            //    var matchingItems = $.grep(result, function (item) {
            //        return item.BColorID === e.BColorID;
            //    });
            //    if (matchingItems.length === 0) {
            //        result.push(e);
            //    }
            //});



            //if (result.length > 0) {
            //    //PlanYarnSave = [];
            //    PlanYarn = [];

            //    PlanYarnSave = jQuery.grep(PlanYarnSave, function (value) {
            //        return value.SlNo != CompSlNo;
            //    });
            //    //PlanYarnSave = jQuery.grep(yarnlist, function (value) {
            //    //    return value.FabricID != fd;
            //    //});

            //    var Cs = result[0].CompSlNo;
            //    var ComponentId = 0;
            //    var Component = '';
            //    for (var t = 0; t < compList.length; t++) {
            //        if (compList[t].CompSlNo == Cs) {
            //            ComponentId = compList[t].ComponentID;
            //            Component = compList[t].ComponentName;
            //        }
            //    }

            //    //if (Mod != 0) {
            //    //    PlanYarnSave = $.grep(PlanYarnSave, function (e) {
            //    //        return e.SlNo != CompSlNo;
            //    //    });
            //    //}
            //    for (var j = 0; j < result.length; j++) {


            //        if (PlanYarn.length == 0) {
            //            leng = 1;

            //        }
            //        else {
            //            leng++;

            //        }
            //        var bd = 0;
            //        bd = result[j].BColorID;
            //        var snumb = result[j].snumb;
            //        var csln = result[j].CompSlNo;
            //        var totalqty = 0;
            //        for (var u = 0; u < PlanCompFabricDetSave.length; u++) {
            //            if (PlanCompFabricDetSave[u].BColorID == bd && PlanCompFabricDetSave[u].CompSlNo == csln) {

            //                var qty = PlanCompFabricDetSave[u].Weight;
            //                totalqty = totalqty + parseFloat(qty);
            //            }
            //        }


            //        var bcqty = 0;
            //        for (var r = 0; r < PlanCompFabricDetSave.length; r++) {
            //            if (PlanCompFabricDetSave[r].BColorID == bd && PlanCompFabricDetSave[r].CompSlNo == s) {

            //                var qty = PlanCompFabricDetSave[r].BColorPQty;
            //                bcqty = bcqty + parseFloat(qty);
            //            }
            //        }


            //        var finqty = 0;
            //        for (var n = 0; n < PlanCompFabricDetSave.length; n++) {
            //            if (PlanCompFabricDetSave[n].BColorID == bd && PlanCompFabricDetSave[n].CompSlNo == s) {

            //                var qty = PlanCompFabricDetSave[n].FColorPQty;
            //                finqty = finqty + parseFloat(qty);
            //            }
            //        }


            //        var totclrqty = parseFloat(bcqty) + parseFloat(finqty);

            //        //for (var w = 0; w < PlanCompFabricDet.length; w++) {
            //        //    if (PlanCompFabricDet[w].BColorID == bd && PlanCompFabricDet[w].snumb == sno) {

            //        totalqty = totalqty - totclrqty;
            //        totalqty = totalqty.toFixed(3);
            //        //    }
            //        //}

            //        var yarnlistobj = {
            //            PlanId: 0,
            //            Fabric: result[j].Fabric,
            //            FabricID: result[j].FabricID,
            //            Fabric_ColorId: result[j].BColorID,
            //            Fabric_Weight: totalqty,
            //            Fabric_type: result[j].type,//result[j].FabricType,
            //            EntryDate: new Date($('#txtEntryDate').val()),
            //            BColor: result[j].Bcolor,
            //            SlNo: result[j].CompSlNo,
            //            YPlanmasID: 0,
            //            YSlno: leng,
            //            ComponentId: ComponentId,
            //            Component: Component
            //        }




            //        PlanYarnSave.push(yarnlistobj);
            //        PlanYarn.push(yarnlistobj);
            //    }
            //}

            ////loadYarndetTab
            //PlanYarnSave = jQuery.grep(PlanYarnSave, function (value) {
            //    return value.Fabric_Weight != 0;
            //});
            //loadYarnSavedetTab(PlanYarnSave);


            //loadYarndetTab(PlanYarn);




            // totwght();

            //Yarndet

            //if (PlanYarnDetSave.length > 0) {

            //    var ys = PlanYarn[0].YSlno;

            //    for (var b = 0; b < PlanYarnSave.length; b++) {
            //        if (PlanYarnSave[b].SlNo == CompSlNo) {
            //            var pysl = PlanYarnSave[b].YSlno;
            //            var cmpsl = PlanYarnSave[b].SlNo;
            //            var wgt = PlanYarnSave[b].Fabric_Weight;
            //            var bcid = PlanYarnSave[b].Fabric_ColorId;

            //            for (var m = 0; m < PlanYarnDetSave.length; m++) {
            //                if (PlanYarnDetSave[m].CompSno == cmpsl) {
            //                    var s = PlanYarnDetSave[m].SlNo;
            //                    if (PlanYarnDetSave[m].BaseColorID == bcid) {
            //                        YsBp = 1;
            //                        var pr = PlanYarnDetSave[m].Knit_In_Per;
            //                        var re = parseFloat((pr * wgt) / 100);
            //                        re = re.toFixed(3);
            //                        PlanYarnDetSave[m].Knit_In_Qty = re;
            //                        PlanYarnDetSave[m].Knit_In_ActQty = re;
            //                        PlanYarnDetSave[m].YSlNo = pysl;
            //                        PlanYarnDetSave[m].SlNo = s;
            //                        //PlanYarnDetSave[m].FabricID = FabricId;
            //                    }

            //                }
            //            }
            //        }
            //    }
            //    PlanYarnDet = $.grep(PlanYarnDetSave, function (e) {
            //        return e.CompSno == CompSlNo && e.YSlNo == ys;
            //    });
            //    Loadsepyarn(PlanYarnDet);
            //    LoadsepSaveyarn(PlanYarnDetSave);
            //}

            ConsmtnHideCol(type);
        }
        //Datatable textbox focus
        //var rows = $("#tCPIbody").dataTable().fnGetNodes();
        //var dtTable = $('#tCPIbody').DataTable();
        //for (var i = 0; i < rows.length; i++) {
        //    var sn = dtTable.cells({ row: i, column: 0 }).data()[0];
        //    $('input[id=txtalloeWidth]').each(function () {
        //        if (sn == CPlan && $(this).val() == Val) {
        //            var row = $(this).closest('tr');
        //            var num = row.find('#txtalloeWidth').val();
        //            row.find('#txtalloeWidth').focus().val('').val(num);
        //            return true;
        //        }
        //    });
        //}
        totconwght();
    });

    $(document).on('change', '.calcgsm', function (e) {
        debugger;

        var table = $('#tCPIbody').DataTable();
        var quantity = table.row($(this).parents('tr')).data()["Prdn_Qty"];
        var CPlan = table.row($(this).parents('tr')).data()["CPlanSlNo"];
        var sno = table.row($(this).parents('tr')).data()["CompSlNo"];
        var len = table.row($(this).parents('tr')).data()["Length"];
        var alwlen = table.row($(this).parents('tr')).data()["AlloLen"];
        var wid = table.row($(this).parents('tr')).data()["Width"];
        var pat = table.row($(this).parents('tr')).data()["Pattern"];
        var alwwid = table.row($(this).parents('tr')).data()["AllowWid"];
        var Colorid = table.row($(this).parents('tr')).data()["ColorID"];
        var Sizeid = table.row($(this).parents('tr')).data()["SizeId"];


        for (var t = 0; t < compList.length; t++) {
            if (compList[t].CompSlNo == sno) {
                var parts = compList[t].No_Of_Parts;
            }
        }
        var Val = $(this).val();

        CGsm = Val;
        fillvar = 'GS';
        indexforfill = index;

        var IQty = 0;
        if (Val == 0) {
            IQty = 0;
        }
        else {
            IQty = Val;
        }

        var field = Val;
        if (!field.match(/^[\-\+]?[\d\,]*\.?[\d]*$/)) {
            $.each(ConItemList, function () {
                if (this.CPlanSlNo == CPlan) {
                    this.Grammage = 0;
                }
            });
            //loadAdConTable(ConItemList);

            var table = $('#tCPIbody').DataTable();
            var data = table.rows().data();

            $('input[id=txtGram]').each(function (ig) {
                if (data[ig].CPlanSlNo == CPlan) {
                    var row = $(this).closest('tr');
                    row.find('#txtGram').val(0);

                }
            });
            return false;
        }

        if (pat == 0) {
            res1 = 0;
        }
        else {
            var totlen = parseFloat(len) + parseFloat(alwlen);
            var totwid = parseFloat(wid) + parseFloat(alwwid);
            var res1 = parseFloat(parseFloat(totlen * totwid) / pat);
        }

        res1 = res1.toFixed(3);
        var res = (res1 * CGsm) / 10000;
        Wght = quantity * res / 1000;

        var finalresult = res.toFixed(3);
        var finalwgt = (Wght * parts).toFixed(3);


        $.each(ConItemList, function () {
            if (this.CPlanSlNo == CPlan) {
                this.Length = len;
                this.AlloLen = alwlen;
                this.Width = wid;
                this.AllowWid = alwwid;
                this.GSM = CGsm;
                this.Grammage = finalresult;
                this.Weight = Wght;
            }
        });

        //loadAdConTable(ConItemList);


        var table = $('#tCPIbody').DataTable();
        var data = table.rows().data();

        $('input[id=txtGram]').each(function (ig) {
            if (data[ig].CPlanSlNo == CPlan) {
                var row = $(this).closest('tr');
                row.find('#txtLen').val(len);
                row.find('#txtallowLen').val(alwlen);
                row.find('#txtWidth').val(wid);
                row.find('#txtalloeWidth').val(alwwid);
                row.find('#txtGsm').val(CGsm);
                row.find('#txtGram').val(finalresult);
                row.find('#txtWght').val(Wght);

            }
        });

        $.each(ConItemListSave, function () {
            if (this.CPlanSlNo == CPlan) {
                this.Length = len;
                this.AlloLen = alwlen;
                this.Width = wid;
                this.AllowWid = alwwid;
                this.GSM = CGsm;
                this.Grammage = finalresult;
                this.Weight = Wght;
            }
        });
        //loadconSaveTable(ConItemListSave);

        //if (Colorid > 0 && Sizeid > 0) {
        //    $.each(PlanCompFabricDet, function () {
        //        if (this.ColorID == Colorid && this.SizeId == Sizeid && this.CompSlNo == sno) {
        //            this.Grammage = finalresult;
        //            this.Weight = Wght;
        //            this.ActWeight = Wght;
        //            this.GSM = Val;
        //            //this.BColorPQty = 0;
        //            //this.FColorPQty = 0;
        //        }
        //    });

        //    $.each(PlanCompFabricDet, function () {
        //        if (this.CompSlNo == sno) {
        //            this.BColorPQty = 0;
        //            this.FColorPQty = 0;
        //        }
        //    });
        //    //loadCompFabTable(PlanCompFabricDet);
        //    $.each(PlanCompFabricDetSave, function () {
        //        if (this.ColorID == Colorid && this.SizeId == Sizeid && this.CompSlNo == sno) {
        //            this.Grammage = finalresult;
        //            this.Weight = Wght;
        //            this.ActWeight = Wght;
        //            this.GSM = Val;
        //        }
        //    });
        //    $.each(PlanCompFabricDetSave, function () {
        //        if (this.CompSlNo == sno) {

        //            this.BColorPQty = 0;
        //            this.FColorPQty = 0;
        //        }
        //    });

        //    loadCompFabSaveTable(PlanCompFabricDetSave);

        //    //loadCompFabTable(PlanCompFabricDet);


        //    var fabtable = $('#tCDbody').DataTable();
        //    var fabdata = fabtable.rows().data();

        //    $('input[id=txtPurQty]').each(function (ig) {
        //        if (fabdata[ig].snumb == CPlan && fabdata[ig].CompSlNo == sno) {
        //            var row = $(this).closest('tr');
        //            row.find('#txtfabgram').val(finalresult);
        //            row.find('#txtfabwt').val(Wght);
        //            row.find('#txtfabActwt').val(Wght);
        //        }
        //    });

        //    $('input[id=txtPurQty]').each(function (ig) {
        //        if (fabdata[ig].CompSlNo == sno) {
        //            var row = $(this).closest('tr');
        //            row.find('#txtPurQty').val(0);
        //            row.find('#txtFPurQty').val(0);
        //        }
        //    });
        //}
        //if (Colorid == 0 && Sizeid == 0) {
        //    //Calcavgfab(Val, res, sno);
        //    //return true;

        //    var totprdqty = $('#txtProdQty').val();



        //    for (var d = 0; d < PlanCompFabricDet.length; d++) {
        //        var quan = PlanCompFabricDet[d].Prdn_Qty;
        //        var res1 = (finalwgt / totprdqty) * quan;
        //        res1 = res1.toFixed(3);
        //        PlanCompFabricDet[d].Weight = res1;
        //        PlanCompFabricDet[d].ActWeight = res1;
        //        PlanCompFabricDet[d].Grammage = finalresult;
        //        PlanCompFabricDet[d].GSM = Val;
        //    }
        //    //loadCompFabTable(PlanCompFabricDet);
        //    var fabtable = $('#tCDbody').DataTable();
        //    var fabdata = fabtable.rows().data();

        //    $('input[id=txtPurQty]').each(function (ig) {
        //        var row = $(this).closest('tr');
        //        var de = row.find('#txtfabPrdQty').val();
        //        row.find('#txtfabActwt').val(((finalwgt / totprdqty) * de).toFixed(3));
        //        row.find('#txtfabwt').val(((finalwgt / totprdqty) * de).toFixed(3));
        //        row.find('#txtfabgram').val(finalresult);

        //    });

        //    $('input[id=txtPurQty]').each(function (ig) {
        //        if (fabdata[ig].CompSlNo == sno) {
        //            var row = $(this).closest('tr');
        //            row.find('#txtPurQty').val(0);
        //            row.find('#txtFPurQty').val(0);
        //        }
        //    });
        //    //var bclrid = 0;
        //    //var bclr = '';

        //    for (var d = 0; d < PlanCompFabricDetSave.length; d++) {
        //        if (PlanCompFabricDetSave[d].CompSlNo == sno) {
        //            var quan = PlanCompFabricDetSave[d].Prdn_Qty;
        //            var res1 = (finalwgt / totprdqty) * quan;
        //            res1 = res1.toFixed(3);
        //            PlanCompFabricDetSave[d].Weight = res1;
        //            PlanCompFabricDetSave[d].ActWeight = res1;
        //            PlanCompFabricDetSave[d].Grammage = finalresult;
        //            PlanCompFabricDetSave[d].GSM = Val;
        //        }
        //    }

        //    loadCompFabSaveTable(PlanCompFabricDetSave);




        //    //yarn
        //    var result = [];
        //    $.each(PlanCompFabricDet, function (i, e) {
        //        var matchingItems = $.grep(result, function (item) {
        //            return item.BColorID === e.BColorID;
        //        });
        //        if (matchingItems.length === 0) {
        //            result.push(e);
        //        }
        //    });



        //    if (result.length > 0) {
        //        //PlanYarnSave = [];
        //        PlanYarn = [];

        //        PlanYarnSave = jQuery.grep(PlanYarnSave, function (value) {
        //            return value.SlNo != CompSlNo;
        //        });
        //        //PlanYarnSave = jQuery.grep(yarnlist, function (value) {
        //        //    return value.FabricID != fd;
        //        //});

        //        var Cs = result[0].CompSlNo;
        //        var ComponentId = 0;
        //        var Component = '';
        //        for (var t = 0; t < compList.length; t++) {
        //            if (compList[t].CompSlNo == Cs) {
        //                ComponentId = compList[t].ComponentID;
        //                Component = compList[t].ComponentName;
        //            }
        //        }

        //        //if (Mod != 0) {
        //        //    PlanYarnSave = $.grep(PlanYarnSave, function (e) {
        //        //        return e.SlNo != CompSlNo;
        //        //    });
        //        //}
        //        for (var j = 0; j < result.length; j++) {


        //            if (PlanYarn.length == 0) {
        //                leng = 1;

        //            }
        //            else {
        //                leng++;

        //            }
        //            var bd = 0;
        //            bd = result[j].BColorID;
        //            var snumb = result[j].snumb;
        //            var csln = result[j].CompSlNo;
        //            var totalqty = 0;
        //            for (var u = 0; u < PlanCompFabricDetSave.length; u++) {
        //                if (PlanCompFabricDetSave[u].BColorID == bd && PlanCompFabricDetSave[u].CompSlNo == csln) {

        //                    var qty = PlanCompFabricDetSave[u].Weight;
        //                    totalqty = totalqty + parseFloat(qty);
        //                }
        //            }


        //            var bcqty = 0;
        //            for (var r = 0; r < PlanCompFabricDetSave.length; r++) {
        //                if (PlanCompFabricDetSave[r].BColorID == bd && PlanCompFabricDetSave[r].CompSlNo == s) {

        //                    var qty = PlanCompFabricDetSave[r].BColorPQty;
        //                    bcqty = bcqty + parseFloat(qty);
        //                }
        //            }


        //            var finqty = 0;
        //            for (var n = 0; n < PlanCompFabricDetSave.length; n++) {
        //                if (PlanCompFabricDetSave[n].BColorID == bd && PlanCompFabricDetSave[n].CompSlNo == s) {

        //                    var qty = PlanCompFabricDetSave[n].FColorPQty;
        //                    finqty = finqty + parseFloat(qty);
        //                }
        //            }


        //            var totclrqty = parseFloat(bcqty) + parseFloat(finqty);

        //            //for (var w = 0; w < PlanCompFabricDet.length; w++) {
        //            //    if (PlanCompFabricDet[w].BColorID == bd && PlanCompFabricDet[w].snumb == sno) {

        //            totalqty = totalqty - totclrqty;
        //            totalqty = totalqty.toFixed(3);
        //            //    }
        //            //}

        //            var yarnlistobj = {
        //                PlanId: 0,
        //                Fabric: result[j].Fabric,
        //                FabricID: result[j].FabricID,
        //                Fabric_ColorId: result[j].BColorID,
        //                Fabric_Weight: totalqty,
        //                Fabric_type: result[j].type,//result[j].FabricType,
        //                EntryDate: new Date($('#txtEntryDate').val()),
        //                BColor: result[j].Bcolor,
        //                SlNo: result[j].CompSlNo,
        //                YPlanmasID: 0,
        //                YSlno: leng,
        //                ComponentId: ComponentId,
        //                Component: Component
        //            }




        //            PlanYarnSave.push(yarnlistobj);
        //            PlanYarn.push(yarnlistobj);
        //        }
        //    }

        //    //loadYarndetTab
        //    PlanYarnSave = jQuery.grep(PlanYarnSave, function (value) {
        //        return value.Fabric_Weight != 0;
        //    });
        //    loadYarnSavedetTab(PlanYarnSave);


        //    //var ctry = [];
        //    //ctry = PlanYarnSave;
        //    //ctry = $.grep(ctry, function (e) {
        //    //    if (e.SlNo == s) {
        //    //        return e;
        //    //    }
        //    //});
        //    //PlanYarn = ctry;

        //    loadYarndetTab(PlanYarn);


        //    //var totalamnt = 0;
        //    //for (var e = 0; e < PlanCompFabricDet.length; e++) {
        //    //    if (PlanCompFabricDet[e].CompSlNo == Sno && PlanCompFabricDet[e].Bcolor == bclr) {
        //    //        var amount = PlanCompFabricDet[e].Weight;
        //    //        totalamnt = totalamnt + parseFloat(amount);
        //    //    }
        //    //}

        //    //totalamnt = totalamnt.toFixed(3);
        //    //for (var e = 0; e < PlanYarnSave.length; e++) {
        //    //    if (PlanYarnSave[e].SlNo == Sno && PlanYarnSave[e].BColor == bclr) {
        //    //        PlanYarnSave[e].Fabric_Weight = (totalamnt);
        //    //    }
        //    //}
        //    //loadYarnSavedetTab(PlanYarnSave);


        //    //PlanYarn = $.grep(PlanYarnSave, function (e) {
        //    //    return e.SlNo == Sno;
        //    //});
        //    //loadYarndetTab(PlanYarn);

        //    totwght();

        //    //Yarndet

        //    if (PlanYarnDetSave.length > 0) {


        //        var ys = PlanYarn[0].YSlno;

        //        for (var b = 0; b < PlanYarnSave.length; b++) {
        //            if (PlanYarnSave[b].SlNo == CompSlNo) {
        //                var pysl = PlanYarnSave[b].YSlno;
        //                var cmpsl = PlanYarnSave[b].SlNo;
        //                var wgt = PlanYarnSave[b].Fabric_Weight;
        //                var bcid = PlanYarnSave[b].Fabric_ColorId;

        //                for (var m = 0; m < PlanYarnDetSave.length; m++) {
        //                    if (PlanYarnDetSave[m].CompSno == cmpsl) {
        //                        var s = PlanYarnDetSave[m].SlNo;
        //                        if (PlanYarnDetSave[m].BaseColorID == bcid) {
        //                            YsBp = 1;
        //                            var pr = PlanYarnDetSave[m].Knit_In_Per;
        //                            var re = parseFloat((pr * wgt) / 100);
        //                            re = re.toFixed(3);
        //                            PlanYarnDetSave[m].Knit_In_Qty = re;
        //                            PlanYarnDetSave[m].Knit_In_ActQty = re;
        //                            PlanYarnDetSave[m].YSlNo = pysl;
        //                            PlanYarnDetSave[m].SlNo = s;
        //                            // PlanYarnDetSave[m].FabricID = FabricId;
        //                        }

        //                    }
        //                }
        //            }
        //        }
        //        PlanYarnDet = $.grep(PlanYarnDetSave, function (e) {
        //            return e.CompSno == CompSlNo && e.YSlNo == ys;
        //        });
        //        Loadsepyarn(PlanYarnDet);
        //        LoadsepSaveyarn(PlanYarnDetSave);
        //    }
        //    return true;
        //}
        //if (Colorid > 0 && Sizeid == 0) {
        //    $.each(PlanCompFabricDet, function () {
        //        if (this.ColorID == Colorid && this.CompSlNo == sno) {

        //            this.Grammage = finalresult;
        //            var rt = Wght / quantity;
        //            this.Weight = (rt * this.Prdn_Qty).toFixed(3);
        //            this.ActWeight = (rt * this.Prdn_Qty).toFixed(3);
        //            this.GSM = Val;
        //            //this.BColorPQty = 0;
        //            //this.FColorPQty = 0;
        //        }
        //    });

        //    $.each(PlanCompFabricDet, function () {
        //        if (this.CompSlNo == sno) {
        //            this.BColorPQty = 0;
        //            this.FColorPQty = 0;
        //        }
        //    });
        //    //loadCompFabTable(PlanCompFabricDet);



        //    var fabtable = $('#tCDbody').DataTable();
        //    var fabdata = fabtable.rows().data();

        //    $('input[id=txtPurQty]').each(function (ig) {
        //        if (fabdata[ig].ColorID == Colorid && fabdata[ig].CompSlNo == Sno) {
        //            var row = $(this).closest('tr');
        //            var de = row.find('#txtfabPrdQty').val();
        //            row.find('#txtfabActwt').val((rt * de).toFixed(3));
        //            row.find('#txtfabwt').val((rt * de).toFixed(3));
        //            row.find('#txtfabgram').val(ratecal);
        //        }
        //    });

        //    $('input[id=txtPurQty]').each(function (ig) {
        //        if (fabdata[ig].CompSlNo == Sno) {
        //            var row = $(this).closest('tr');
        //            row.find('#txtPurQty').val(0);
        //            row.find('#txtFPurQty').val(0);
        //        }
        //    });
        //    var bclrid = 0;
        //    var bclr = '';
        //    $.each(PlanCompFabricDetSave, function () {
        //        if (this.ColorID == Colorid && this.CompSlNo == sno) {
        //            this.Grammage = finalresult;
        //            this.GSM = Val;
        //            var rt = Wght / quantity;
        //            this.Weight = (rt * this.Prdn_Qty).toFixed(3);
        //            this.ActWeight = (rt * this.Prdn_Qty).toFixed(3);
        //            bclrid = this.BColorID;
        //            bclr = this.Bcolor;
        //        }
        //    });
        //    $.each(PlanCompFabricDetSave, function () {
        //        if (this.CompSlNo == sno) {

        //            this.BColorPQty = 0;
        //            this.FColorPQty = 0;
        //        }
        //    });

        //    loadCompFabSaveTable(PlanCompFabricDetSave);
        //}
        //if (Colorid == 0 && Sizeid > 0) {
        //    $.each(PlanCompFabricDet, function () {
        //        if (this.SizeId == Sizeid && this.CompSlNo == sno) {
        //            this.GSM = Val;
        //            this.Grammage = finalresult;
        //            var rt = Wght / quantity;
        //            this.Weight = (rt * this.Prdn_Qty).toFixed(3);
        //            this.ActWeight = (rt * this.Prdn_Qty).toFixed(3);
        //            //this.BColorPQty = 0;
        //            //this.FColorPQty = 0;
        //        }
        //    });

        //    $.each(PlanCompFabricDet, function () {
        //        if (this.CompSlNo == sno) {
        //            this.BColorPQty = 0;
        //            this.FColorPQty = 0;
        //        }
        //    });
        //    //loadCompFabTable(PlanCompFabricDet);

        //    var fabtable = $('#tCDbody').DataTable();
        //    var fabdata = fabtable.rows().data();

        //    $('input[id=txtPurQty]').each(function (ig) {
        //        if (fabdata[ig].SizeId == Sizeid && fabdata[ig].CompSlNo == Sno) {
        //            var row = $(this).closest('tr');
        //            var de = row.find('#txtfabPrdQty').val();
        //            row.find('#txtfabActwt').val((rt * de).toFixed(3));
        //            row.find('#txtfabwt').val((rt * de).toFixed(3));
        //            row.find('#txtfabgram').val(ratecal);
        //        }
        //    });

        //    $('input[id=txtPurQty]').each(function (ig) {
        //        if (fabdata[ig].CompSlNo == Sno) {
        //            var row = $(this).closest('tr');
        //            row.find('#txtPurQty').val(0);
        //            row.find('#txtFPurQty').val(0);
        //        }
        //    });
        //    var bclrid = 0;
        //    var bclr = '';
        //    $.each(PlanCompFabricDetSave, function () {
        //        if (this.SizeId == Sizeid && this.CompSlNo == sno) {
        //            this.Grammage = finalresult;
        //            this.GSM = Val;
        //            var rt = Wght / quantity;
        //            this.Weight = (rt * this.Prdn_Qty).toFixed(3);
        //            this.ActWeight = (rt * this.Prdn_Qty).toFixed(3);
        //            bclrid = this.BColorID;
        //            bclr = this.Bcolor;
        //        }
        //    });
        //    $.each(PlanCompFabricDetSave, function () {
        //        if (this.CompSlNo == sno) {

        //            this.BColorPQty = 0;
        //            this.FColorPQty = 0;
        //        }
        //    });

        //    loadCompFabSaveTable(PlanCompFabricDetSave);
        //}
        $('#txtWeight').val("");
        $('#txtActualWeight').val("");

        //Yarn Loss

        //if (PlanYarnLossSave.length > 0) {
        //    PlanYarnLossSave = $.grep(PlanYarnLossSave, function (e) {
        //        return e.CompSNo != sno;
        //    });
        //    loadyarnLossSaveTable(PlanYarnLossSave);

        //    PlanYarnLoss = $.grep(PlanYarnLoss, function (e) {
        //        return e.CompSNo != sno;
        //    });
        //    loadyarnLossTable(PlanYarnLoss);
        //}


        //yarn


        //yarn
        //var result = [];
        //$.each(PlanCompFabricDet, function (i, e) {
        //    var matchingItems = $.grep(result, function (item) {
        //        return item.BColorID === e.BColorID;
        //    });
        //    if (matchingItems.length === 0) {
        //        result.push(e);
        //    }
        //});



        //if (result.length > 0) {
        //    //PlanYarnSave = [];
        //    PlanYarn = [];

        //    PlanYarnSave = jQuery.grep(PlanYarnSave, function (value) {
        //        return value.SlNo != CompSlNo;
        //    });
        //    //PlanYarnSave = jQuery.grep(yarnlist, function (value) {
        //    //    return value.FabricID != fd;
        //    //});

        //    var Cs = result[0].CompSlNo;
        //    var ComponentId = 0;
        //    var Component = '';
        //    for (var t = 0; t < compList.length; t++) {
        //        if (compList[t].CompSlNo == Cs) {
        //            ComponentId = compList[t].ComponentID;
        //            Component = compList[t].ComponentName;
        //        }
        //    }

        //    //if (Mod != 0) {
        //    //    PlanYarnSave = $.grep(PlanYarnSave, function (e) {
        //    //        return e.SlNo != CompSlNo;
        //    //    });
        //    //}
        //    for (var j = 0; j < result.length; j++) {


        //        if (PlanYarn.length == 0) {
        //            leng = 1;

        //        }
        //        else {
        //            leng++;

        //        }
        //        var bd = 0;
        //        bd = result[j].BColorID;
        //        var snumb = result[j].snumb;
        //        var csln = result[j].CompSlNo;
        //        var totalqty = 0;
        //        for (var u = 0; u < PlanCompFabricDetSave.length; u++) {
        //            if (PlanCompFabricDetSave[u].BColorID == bd && PlanCompFabricDetSave[u].CompSlNo == csln) {

        //                var qty = PlanCompFabricDetSave[u].Weight;
        //                totalqty = totalqty + parseFloat(qty);
        //            }
        //        }


        //        var bcqty = 0;
        //        for (var r = 0; r < PlanCompFabricDetSave.length; r++) {
        //            if (PlanCompFabricDetSave[r].BColorID == bd && PlanCompFabricDetSave[r].CompSlNo == s) {

        //                var qty = PlanCompFabricDetSave[r].BColorPQty;
        //                bcqty = bcqty + parseFloat(qty);
        //            }
        //        }


        //        var finqty = 0;
        //        for (var n = 0; n < PlanCompFabricDetSave.length; n++) {
        //            if (PlanCompFabricDetSave[n].BColorID == bd && PlanCompFabricDetSave[n].CompSlNo == s) {

        //                var qty = PlanCompFabricDetSave[n].FColorPQty;
        //                finqty = finqty + parseFloat(qty);
        //            }
        //        }


        //        var totclrqty = parseFloat(bcqty) + parseFloat(finqty);

        //        //for (var w = 0; w < PlanCompFabricDet.length; w++) {
        //        //    if (PlanCompFabricDet[w].BColorID == bd && PlanCompFabricDet[w].snumb == sno) {

        //        totalqty = totalqty - totclrqty;
        //        totalqty = totalqty.toFixed(3);
        //        //    }
        //        //}

        //        var yarnlistobj = {
        //            PlanId: 0,
        //            Fabric: result[j].Fabric,
        //            FabricID: result[j].FabricID,
        //            Fabric_ColorId: result[j].BColorID,
        //            Fabric_Weight: totalqty,
        //            Fabric_type: result[j].type,//result[j].FabricType,
        //            EntryDate: new Date($('#txtEntryDate').val()),
        //            BColor: result[j].Bcolor,
        //            SlNo: result[j].CompSlNo,
        //            YPlanmasID: 0,
        //            YSlno: leng,
        //            ComponentId: ComponentId,
        //            Component: Component
        //        }




        //        PlanYarnSave.push(yarnlistobj);
        //        PlanYarn.push(yarnlistobj);
        //    }
        //}

        //loadYarndetTab
        //PlanYarnSave = jQuery.grep(PlanYarnSave, function (value) {
        //    return value.Fabric_Weight != 0;
        //});
        //loadYarnSavedetTab(PlanYarnSave);


        ////var ctry = [];
        ////ctry = PlanYarnSave;
        ////ctry = $.grep(ctry, function (e) {
        ////    if (e.SlNo == s) {
        ////        return e;
        ////    }
        ////});
        ////PlanYarn = ctry;

        //loadYarndetTab(PlanYarn);


        //var totalamnt = 0;
        //for (var e = 0; e < PlanCompFabricDet.length; e++) {
        //    if (PlanCompFabricDet[e].CompSlNo == Sno && PlanCompFabricDet[e].Bcolor == bclr) {
        //        var amount = PlanCompFabricDet[e].Weight;
        //        totalamnt = totalamnt + parseFloat(amount);
        //    }
        //}

        //totalamnt = totalamnt.toFixed(3);
        //for (var e = 0; e < PlanYarnSave.length; e++) {
        //    if (PlanYarnSave[e].SlNo == Sno && PlanYarnSave[e].BColor == bclr) {
        //        PlanYarnSave[e].Fabric_Weight = (totalamnt);
        //    }
        //}
        //loadYarnSavedetTab(PlanYarnSave);


        //PlanYarn = $.grep(PlanYarnSave, function (e) {
        //    return e.SlNo == Sno;
        //});
        //loadYarndetTab(PlanYarn);

        // totwght();

        //Yarndet

        //if (PlanYarnDetSave.length > 0) {


        //    var ys = PlanYarn[0].YSlno;

        //    for (var b = 0; b < PlanYarnSave.length; b++) {
        //        if (PlanYarnSave[b].SlNo == CompSlNo) {
        //            var pysl = PlanYarnSave[b].YSlno;
        //            var cmpsl = PlanYarnSave[b].SlNo;
        //            var wgt = PlanYarnSave[b].Fabric_Weight;
        //            var bcid = PlanYarnSave[b].Fabric_ColorId;

        //            for (var m = 0; m < PlanYarnDetSave.length; m++) {
        //                if (PlanYarnDetSave[m].CompSno == cmpsl) {
        //                    var s = PlanYarnDetSave[m].SlNo;
        //                    if (PlanYarnDetSave[m].BaseColorID == bcid) {
        //                        YsBp = 1;
        //                        var pr = PlanYarnDetSave[m].Knit_In_Per;
        //                        var re = parseFloat((pr * wgt) / 100);
        //                        re = re.toFixed(3);
        //                        PlanYarnDetSave[m].Knit_In_Qty = re;
        //                        PlanYarnDetSave[m].Knit_In_ActQty = re;
        //                        PlanYarnDetSave[m].YSlNo = pysl;
        //                        PlanYarnDetSave[m].SlNo = s;
        //                        // PlanYarnDetSave[m].FabricID = FabricId;
        //                    }

        //                }
        //            }
        //        }
        //    }
        //    PlanYarnDet = $.grep(PlanYarnDetSave, function (e) {
        //        return e.CompSno == CompSlNo && e.YSlNo == ys;
        //    });
        //    Loadsepyarn(PlanYarnDet);
        //    LoadsepSaveyarn(PlanYarnDetSave);
        //}

        //var rows = $("#tCPIbody").dataTable().fnGetNodes();
        //var dtTable = $('#tCPIbody').DataTable();
        //for (var i = 0; i < rows.length; i++) {
        //    var sn = dtTable.cells({ row: i, column: 0 }).data()[0];
        //    $('input[id=txtGsm]').each(function () {
        //        if (sn == CPlan && $(this).val() == Val) {
        //            var row = $(this).closest('tr');
        //            var num = row.find('#txtGsm').val();
        //            row.find('#txtGsm').focus().val('').val(num);
        //            return true;
        //        }
        //    });
        //}
        totconwght();
    });
    $(document).on('keyup', '.calcwovwtmt', function (e) {
        debugger;
        var table = $('#tCPIbody').DataTable();
        var quantity = table.row($(this).parents('tr')).data()["Prdn_Qty"];
        var tmt = table.row($(this).parents('tr')).data()["TotMetres"];
        var CPlan = table.row($(this).parents('tr')).data()["CPlanSlNo"];
        var Sno = table.row($(this).parents('tr')).data()["CompSlNo"];
        var Colorid = table.row($(this).parents('tr')).data()["ColorID"];
        var Sizeid = table.row($(this).parents('tr')).data()["SizeId"];
        var rq = table.row($(this).parents('tr')).data()["Requirement"];

        var Val = $(this).val();

        fillvar = 'WOVMET';
        index;
        rowindex = $(this).closest('tr').index();
        indexforfill = rowindex;

        var wt = (Val * tmt) / 1000;
        wt = wt.toFixed(3);
        $.each(ConItemList, function () {
            if (this.CPlanSlNo == CPlan && this.CompSlNo == Sno) {
                this.WtMetre = Val;
                this.Weight = wt;
            }
        });

        var data = table.rows().data();

        $('input[id=txtWtmtWov]').each(function (ind) {
            if (data[ind].CPlanSlNo == CPlan && data[ind].CompSlNo == Sno) {
                var row = $(this).closest('tr');
                row.find('#txtWght').val(wt);
            }
        });
        $.each(ConItemListSave, function () {
            if (this.CPlanSlNo == CPlan && this.CompSlNo == Sno) {
                this.WtMetre = Val;
                this.Weight = wt;
            }
        });
        loadconSaveTable(ConItemListSave);


        for (var e = 0; e < PlanCompFabricDet.length; e++) {
            if (PlanCompFabricDet[e].Woven_Req_InMtrs == undefined) {
                PlanCompFabricDet[e].Woven_Req_InMtrs = 0;
            }
        }

        for (var e = 0; e < PlanCompFabricDetSave.length; e++) {
            if (PlanCompFabricDetSave[e].Woven_Req_InMtrs == undefined) {
                PlanCompFabricDetSave[e].Woven_Req_InMtrs = 0;
            }
        }
        if (Colorid > 0 && Sizeid > 0) {
            var fd = 0;
            var s = 0;
            var bclrid = 0;
            var bclr = '';
            $.each(PlanCompFabricDet, function () {
                if (this.ColorID == Colorid && this.SizeId == Sizeid && this.CompSlNo == Sno) {
                    this.ActWeight = tmt;
                    this.Weight = tmt;
                    this.Grammage = Val;
                    this.Woven_Req_InMtrs = ((this.Weight * Val) / 1000).toFixed(3);
                    bclrid = this.BColorID;
                    bclr = this.Bcolor;
                }
            });

            $.each(PlanCompFabricDet, function () {
                if (this.CompSlNo == Sno) {
                    this.BColorPQty = 0;
                    this.FColorPQty = 0;
                }
            });
            //loadCompFabTable(PlanCompFabricDet);

            var fabtable = $('#tCDbody').DataTable();
            var fabdata = fabtable.rows().data();

            $('input[id=txtPurQty]').each(function (ig) {
                if (fabdata[ig].ColorID == Colorid && fabdata[ig].SizeId == Sizeid && fabdata[ig].CompSlNo == Sno) {
                    var row = $(this).closest('tr');
                    row.find('#txtfabActwt').val(tmt);
                    row.find('#txtfabwt').val(tmt);
                    //row.find('#txtfabgram').val(ratecal);
                }
            });

            $('input[id=txtPurQty]').each(function (ig) {
                if (fabdata[ig].CompSlNo == Sno) {
                    var row = $(this).closest('tr');
                    row.find('#txtPurQty').val(0);
                    row.find('#txtFPurQty').val(0);
                }
            });


            $.each(PlanCompFabricDetSave, function () {
                if (this.ColorID == Colorid && this.SizeId == Sizeid && this.CompSlNo == Sno) {
                    this.ActWeight = tmt;
                    this.Weight = tmt;
                    this.Grammage = Val;
                    this.Woven_Req_InMtrs = ((this.Weight * Val) / 1000).toFixed(3);
                }
            });
            $.each(PlanCompFabricDetSave, function () {
                if (this.CompSlNo == Sno) {
                    this.BColorPQty = 0;
                    this.FColorPQty = 0;
                }
            });
            loadCompFabSaveTable(PlanCompFabricDetSave);

            $('#txtWeight').val("");
            $('#txtActualWeight').val("");




        }
        if (Colorid > 0 && Sizeid == 0) {

            var fd = 0;
            var s = 0;
            var bclrid = 0;
            var bclr = '';
            $.each(PlanCompFabricDet, function () {
                if (this.ColorID == Colorid && this.CompSlNo == Sno) {
                    this.ActWeight = ((this.Prdn_Qty * rq) / 100).toFixed(3);
                    this.Weight = ((this.Prdn_Qty * rq) / 100).toFixed(3);
                    this.Grammage = Val;
                    this.Woven_Req_InMtrs = ((this.Weight * Val) / 1000).toFixed(3);
                    bclrid = this.BColorID;
                    bclr = this.Bcolor;
                }
            });

            $.each(PlanCompFabricDet, function () {
                if (this.CompSlNo == Sno) {
                    this.BColorPQty = 0;
                    this.FColorPQty = 0;
                }
            });
            //loadCompFabTable(PlanCompFabricDet);

            var fabtable = $('#tCDbody').DataTable();
            var fabdata = fabtable.rows().data();

            $('input[id=txtPurQty]').each(function (ig) {
                if (fabdata[ig].ColorID == Colorid && fabdata[ig].CompSlNo == Sno) {
                    var row = $(this).closest('tr');
                    var t = row.find('#txtfabPrdQty').val();
                    var re = t * rq;
                    re = (re / 100).toFixed(3);
                    row.find('#txtfabActwt').val(re);
                    row.find('#txtfabwt').val(re);
                    //row.find('#txtfabgram').val(ratecal);
                }
            });

            $('input[id=txtPurQty]').each(function (ig) {
                if (fabdata[ig].CompSlNo == Sno) {
                    var row = $(this).closest('tr');
                    row.find('#txtPurQty').val(0);
                    row.find('#txtFPurQty').val(0);
                }
            });


            $.each(PlanCompFabricDetSave, function () {
                if (this.ColorID == Colorid && this.CompSlNo == Sno) {
                    this.ActWeight = ((this.Prdn_Qty * rq) / 100).toFixed(3);
                    this.Weight = ((this.Prdn_Qty * rq) / 100).toFixed(3);
                    this.Grammage = Val;
                    this.Woven_Req_InMtrs = ((this.Weight * Val) / 1000).toFixed(3);
                }
            });
            $.each(PlanCompFabricDetSave, function () {
                if (this.CompSlNo == Sno) {
                    this.BColorPQty = 0;
                    this.FColorPQty = 0;
                }
            });
            loadCompFabSaveTable(PlanCompFabricDetSave);

            $('#txtWeight').val("");
            $('#txtActualWeight').val("");



        }
        if (Colorid == 0 && Sizeid > 0) {

            var fd = 0;
            var s = 0;
            var bclrid = 0;
            var bclr = '';
            $.each(PlanCompFabricDet, function () {
                if (this.SizeId == Sizeid && this.CompSlNo == Sno) {
                    this.ActWeight = ((this.Prdn_Qty * rq) / 100).toFixed(3);
                    this.Weight = ((this.Prdn_Qty * rq) / 100).toFixed(3);
                    this.Grammage = Val;
                    this.Woven_Req_InMtrs = ((this.Weight * Val) / 1000).toFixed(3);
                    bclrid = this.BColorID;
                    bclr = this.Bcolor;
                }
            });

            $.each(PlanCompFabricDet, function () {
                if (this.CompSlNo == Sno) {
                    this.BColorPQty = 0;
                    this.FColorPQty = 0;
                }
            });
            //loadCompFabTable(PlanCompFabricDet);

            var fabtable = $('#tCDbody').DataTable();
            var fabdata = fabtable.rows().data();

            $('input[id=txtPurQty]').each(function (ig) {
                if (fabdata[ig].SizeId == Sizeid && fabdata[ig].CompSlNo == Sno) {
                    var row = $(this).closest('tr');
                    var t = row.find('#txtfabPrdQty').val();
                    var re = t * rq;
                    re = (re / 100).toFixed(3);
                    row.find('#txtfabActwt').val(re);
                    row.find('#txtfabwt').val(re);
                    //row.find('#txtfabgram').val(ratecal);
                }
            });

            $('input[id=txtPurQty]').each(function (ig) {
                if (fabdata[ig].CompSlNo == Sno) {
                    var row = $(this).closest('tr');
                    row.find('#txtPurQty').val(0);
                    row.find('#txtFPurQty').val(0);
                }
            });


            $.each(PlanCompFabricDetSave, function () {
                if (this.SizeId == Sizeid && this.CompSlNo == Sno) {
                    this.ActWeight = ((this.Prdn_Qty * rq) / 100).toFixed(3);
                    this.Weight = ((this.Prdn_Qty * rq) / 100).toFixed(3);
                    this.Grammage = Val;
                    this.Woven_Req_InMtrs = ((this.Weight * Val) / 1000).toFixed(3);
                }
            });
            $.each(PlanCompFabricDetSave, function () {
                if (this.CompSlNo == Sno) {
                    this.BColorPQty = 0;
                    this.FColorPQty = 0;
                }
            });
            loadCompFabSaveTable(PlanCompFabricDetSave);

            $('#txtWeight').val("");
            $('#txtActualWeight').val("");

            ////yarn

            //var totalamnt = 0;
            //for (var e = 0; e < ConItemList.length; e++) {

            //    var amount = ConItemList[e].Weight;
            //    totalamnt = totalamnt + parseFloat(amount);

            //}

            //totalamnt = totalamnt.toFixed(3);
            //for (var e = 0; e < PlanYarnSave.length; e++) {
            //    if (PlanYarnSave[e].SlNo == Sno && PlanYarnSave[e].BColor == bclr) {
            //        PlanYarnSave[e].Fabric_Weight = (totalamnt);
            //    }
            //}
            //loadYarnSavedetTab(PlanYarnSave);


            //PlanYarn = $.grep(PlanYarnSave, function (e) {
            //    return e.SlNo == Sno;
            //});
            //loadYarndetTab(PlanYarn);

            //totwght();

            ////Yarndet

            //if (PlanYarnDetSave.length > 0) {

            //    for (var b = 0; b < PlanYarnSave.length; b++) {
            //        var pysl = PlanYarnSave[b].YSlno;
            //        var cmpsl = PlanYarnSave[b].SlNo;
            //        var wgt = PlanYarnSave[b].Fabric_Weight;
            //        for (var m = 0; m < PlanYarnDetSave.length; m++) {
            //            if (PlanYarnDetSave[m].CompSno == cmpsl && PlanYarnDetSave[m].YSlNo == pysl) {
            //                var pr = PlanYarnDetSave[m].Knit_In_Per;
            //                var re = parseFloat((pr * wgt) / 100);
            //                re = re.toFixed(3);
            //                PlanYarnDetSave[m].Knit_In_Qty = re;
            //                PlanYarnDetSave[m].Knit_In_ActQty = re;
            //            }
            //        }
            //    }
            //    PlanYarnDet = $.grep(PlanYarnDetSave, function (e) {
            //        return e.CompSno == CompSlNo;
            //    });
            //    Loadsepyarn(PlanYarnDet);
            //    LoadsepSaveyarn(PlanYarnDetSave);
            //}
        }
        if (Colorid == 0 && Sizeid == 0) {
            $.each(PlanCompFabricDet, function () {
                if (this.CompSlNo == Sno) {

                    //this.ActWeight = tmt;
                    //this.Weight = tmt;
                    this.Woven_Req_InMtrs = ((this.Weight * Val) / 1000).toFixed(3);
                    var s = this.snumb;
                    this.Grammage = Val;
                    //var fabtable = $('#tCDbody').DataTable();
                    //var fabdata = fabtable.rows().data();

                    //$('input[id=txtPurQty]').each(function (ig) {
                    //    if (fabdata[ig].snumb == s && fabdata[ig].CompSlNo == Sno) {
                    //        var row = $(this).closest('tr');
                    //        row.find('#txtfabActwt').val(tmt);
                    //        row.find('#txtfabwt').val(tmt);
                    //        //row.find('#txtfabgram').val(ratecal);
                    //    }
                    //});
                }
            });


            $.each(PlanCompFabricDet, function () {
                if (this.CompSlNo == Sno) {
                    this.BColorPQty = 0;
                    this.FColorPQty = 0;
                }
            });

            var fabtable = $('#tCDbody').DataTable();
            var fabdata = fabtable.rows().data();
            $('input[id=txtPurQty]').each(function (ig) {
                if (fabdata[ig].CompSlNo == Sno) {
                    var row = $(this).closest('tr');
                    row.find('#txtPurQty').val(0);
                    row.find('#txtFPurQty').val(0);
                }
            });
            $.each(PlanCompFabricDetSave, function () {
                if (this.CompSlNo == Sno) {
                    //this.ActWeight = tmt;
                    //this.Weight = tmt;
                    this.Grammage = Val;
                    this.Woven_Req_InMtrs = ((this.Weight * Val) / 1000).toFixed(3);
                }
            });

            $.each(PlanCompFabricDetSave, function () {
                if (this.CompSlNo == Sno) {
                    this.BColorPQty = 0;
                    this.FColorPQty = 0;
                }
            });

            loadCompFabSaveTable(PlanCompFabricDetSave);

            $('#txtWeight').val("");
            $('#txtActualWeight').val("");

            ////yarn

            //var totalamnt = 0;
            //for (var e = 0; e < ConItemList.length; e++) {

            //    var amount = ConItemList[e].Weight;
            //    totalamnt = totalamnt + parseFloat(amount);

            //}

            //totalamnt = totalamnt.toFixed(3);
            //for (var e = 0; e < PlanYarnSave.length; e++) {
            //    if (PlanYarnSave[e].SlNo == Sno) {
            //        PlanYarnSave[e].Fabric_Weight = (totalamnt);
            //    }
            //}
            //loadYarnSavedetTab(PlanYarnSave);


            //PlanYarn = $.grep(PlanYarnSave, function (e) {
            //    return e.SlNo == Sno;
            //});
            //loadYarndetTab(PlanYarn);

            //totwght();

            ////Yarndet

            //if (PlanYarnDetSave.length > 0) {

            //    for (var b = 0; b < PlanYarnSave.length; b++) {
            //        var pysl = PlanYarnSave[b].YSlno;
            //        var cmpsl = PlanYarnSave[b].SlNo;
            //        var wgt = PlanYarnSave[b].Fabric_Weight;
            //        for (var m = 0; m < PlanYarnDetSave.length; m++) {
            //            if (PlanYarnDetSave[m].CompSno == cmpsl && PlanYarnDetSave[m].YSlNo == pysl) {
            //                var pr = PlanYarnDetSave[m].Knit_In_Per;
            //                var re = parseFloat((pr * wgt) / 100);
            //                re = re.toFixed(3);
            //                PlanYarnDetSave[m].Knit_In_Qty = re;
            //                PlanYarnDetSave[m].Knit_In_ActQty = re;
            //            }
            //        }
            //    }
            //    PlanYarnDet = $.grep(PlanYarnDetSave, function (e) {
            //        return e.CompSno == CompSlNo;
            //    });
            //    Loadsepyarn(PlanYarnDet);
            //    LoadsepSaveyarn(PlanYarnDetSave);
            //}

        }
        //yarn
        var result = [];
        $.each(PlanCompFabricDet, function (i, e) {
            var matchingItems = $.grep(result, function (item) {
                return item.BColorID === e.BColorID;
            });
            if (matchingItems.length === 0) {
                result.push(e);
            }
        });



        if (result.length > 0) {
            //PlanYarnSave = [];
            PlanYarn = [];

            PlanYarnSave = jQuery.grep(PlanYarnSave, function (value) {
                return value.SlNo != CompSlNo;
            });
            //PlanYarnSave = jQuery.grep(yarnlist, function (value) {
            //    return value.FabricID != fd;
            //});

            var Cs = result[0].CompSlNo;
            var ComponentId = 0;
            var Component = '';
            for (var t = 0; t < compList.length; t++) {
                if (compList[t].CompSlNo == Cs) {
                    ComponentId = compList[t].ComponentID;
                    Component = compList[t].ComponentName;
                }
            }

            //if (Mod != 0) {
            //    PlanYarnSave = $.grep(PlanYarnSave, function (e) {
            //        return e.SlNo != CompSlNo;
            //    });
            //}
            for (var j = 0; j < result.length; j++) {


                if (PlanYarn.length == 0) {
                    leng = 1;

                }
                else {
                    leng++;

                }
                var bd = 0;
                bd = result[j].BColorID;
                var snumb = result[j].snumb;
                var csln = result[j].CompSlNo;
                var totalqty = 0;
                for (var u = 0; u < PlanCompFabricDetSave.length; u++) {
                    if (PlanCompFabricDetSave[u].BColorID == bd && PlanCompFabricDetSave[u].CompSlNo == csln) {

                        var qty = PlanCompFabricDetSave[u].Woven_Req_InMtrs;
                        totalqty = totalqty + parseFloat(qty);
                    }
                }


                //var bcqty = 0;
                //for (var r = 0; r < PlanCompFabricDetSave.length; r++) {
                //    if (PlanCompFabricDetSave[r].BColorID == bd && PlanCompFabricDetSave[r].CompSlNo == s) {

                //        var qty = PlanCompFabricDetSave[r].BColorPQty;
                //        bcqty = bcqty + parseFloat(qty);
                //    }
                //}


                //var finqty = 0;
                //for (var n = 0; n < PlanCompFabricDetSave.length; n++) {
                //    if (PlanCompFabricDetSave[n].BColorID == bd && PlanCompFabricDetSave[n].CompSlNo == s) {

                //        var qty = PlanCompFabricDetSave[n].FColorPQty;
                //        finqty = finqty + parseFloat(qty);
                //    }
                //}


                //var totclrqty = parseFloat(bcqty) + parseFloat(finqty);


                //totalqty = totalqty - totclrqty;
                totalqty = totalqty.toFixed(3);


                var yarnlistobj = {
                    PlanId: 0,
                    Fabric: result[j].Fabric,
                    FabricID: result[j].FabricID,
                    Fabric_ColorId: result[j].BColorID,
                    Fabric_Weight: totalqty,
                    Fabric_type: result[j].type,//result[j].FabricType,
                    EntryDate: new Date($('#txtEntryDate').val()),
                    BColor: result[j].Bcolor,
                    SlNo: result[j].CompSlNo,
                    YPlanmasID: 0,
                    YSlno: leng,
                    ComponentId: ComponentId,
                    Component: Component
                }




                PlanYarnSave.push(yarnlistobj);
                PlanYarn.push(yarnlistobj);
            }
        }

        //loadYarndetTab
        PlanYarnSave = jQuery.grep(PlanYarnSave, function (value) {
            return value.Fabric_Weight != 0;
        });
        PlanYarn = jQuery.grep(PlanYarn, function (value) {
            return value.Fabric_Weight != 0;
        });
        loadYarnSavedetTab(PlanYarnSave);

        loadYarndetTab(PlanYarn);
        //Yarndet

        if (PlanYarnDetSave.length > 0) {

            for (var b = 0; b < PlanYarnSave.length; b++) {
                var pysl = PlanYarnSave[b].YSlno;
                var cmpsl = PlanYarnSave[b].SlNo;
                var wgt = PlanYarnSave[b].Fabric_Weight;
                for (var m = 0; m < PlanYarnDetSave.length; m++) {
                    if (PlanYarnDetSave[m].CompSno == cmpsl && PlanYarnDetSave[m].YSlNo == pysl) {
                        var pr = PlanYarnDetSave[m].Knit_In_Per;
                        var re = parseFloat((pr * wgt) / 100);
                        re = re.toFixed(3);
                        PlanYarnDetSave[m].Knit_In_Qty = re;
                        PlanYarnDetSave[m].Knit_In_ActQty = re;
                        //PlanYarnDetSave[m].FabricID = FabricId;
                    }
                }
            }
            PlanYarnDet = $.grep(PlanYarnDetSave, function (e) {
                return e.CompSno == CompSlNo;
            });
            Loadsepyarn(PlanYarnDet);
            LoadsepSaveyarn(PlanYarnDetSave);
        }

    });

    $(document).on('keyup', '.calcreqmnt', function (e) {
        debugger;
        var table = $('#tCPIbody').DataTable();
        var quantity = table.row($(this).parents('tr')).data()["Prdn_Qty"];
        var wtmt = table.row($(this).parents('tr')).data()["WtMetre"];
        var CPlan = table.row($(this).parents('tr')).data()["CPlanSlNo"];
        var Sno = table.row($(this).parents('tr')).data()["CompSlNo"];
        var Colorid = table.row($(this).parents('tr')).data()["ColorID"];
        var Sizeid = table.row($(this).parents('tr')).data()["SizeId"];

        var Val = $(this).val();
        var protype = $('input[name="Opttype"]:checked').attr('value');
        if (Mod == 1 || Mod == 2) {
            parts = table.row($(this).parents('tr')).data()["No_Of_Parts"];
        }
        fillvar = 'REQMNT';
        index;
        rowindex = $(this).closest('tr').index();
        indexforfill = rowindex;

        var conval = 0;
        if (protype == 'C') {
            conval = 1;
        }
        else {
            conval = 2.54;
        }

        var res = (Val * conval) / 100;
        var totmet = res * quantity * parts;
        totmet = totmet.toFixed(3);
        $.each(ConItemList, function () {
            if (this.CPlanSlNo == CPlan && this.CompSlNo == Sno) {
                this.Requirement = Val;
                this.TotMetres = totmet;
            }
        });

        var data = table.rows().data();

        $('input[id=txtReqmnt]').each(function (ind) {
            if (data[ind].CPlanSlNo == CPlan && data[ind].CompSlNo == Sno) {
                var row = $(this).closest('tr');
                row.find('#txtTotMetWov').val(totmet);
            }
        });
        $.each(ConItemListSave, function () {
            if (this.CPlanSlNo == CPlan && this.CompSlNo == Sno) {
                this.Requirement = Val;
                this.TotMetres = totmet;
            }
        });
        loadconSaveTable(ConItemListSave);

        if (wtmt > 0) {
            var wt = (wtmt * totmet) / 1000;
            wt = wt.toFixed(3);
            $.each(ConItemList, function () {
                if (this.CPlanSlNo == CPlan && this.CompSlNo == Sno) {
                    this.WtMetre = wtmt;
                    this.Weight = wt;
                }
            });

            var data = table.rows().data();

            $('input[id=txtWtmtWov]').each(function (ind) {
                if (data[ind].CPlanSlNo == CPlan && data[ind].CompSlNo == Sno) {
                    var row = $(this).closest('tr');
                    row.find('#txtWght').val(wt);
                }
            });
            $.each(ConItemListSave, function () {
                if (this.CPlanSlNo == CPlan && this.CompSlNo == Sno) {
                    this.WtMetre = wtmt;
                    this.Weight = wt;
                }
            });
            loadconSaveTable(ConItemListSave);
        }

        if (Colorid > 0 && Sizeid > 0) {
            var fd = 0;
            var s = 0;
            var bclrid = 0;
            var bclr = '';
            $.each(PlanCompFabricDet, function () {
                if (this.ColorID == Colorid && this.SizeId == Sizeid && this.CompSlNo == Sno) {
                    this.ActWeight = totmet;
                    this.Weight = totmet;
                    this.Woven_Req_InMtrs = wt;
                    this.Grammage = wtmt;
                    bclrid = this.BColorID;
                    bclr = this.Bcolor;
                }
            });

            $.each(PlanCompFabricDet, function () {
                if (this.CompSlNo == Sno) {
                    this.BColorPQty = 0;
                    this.FColorPQty = 0;
                }
            });
            //loadCompFabTable(PlanCompFabricDet);

            var fabtable = $('#tCDbody').DataTable();
            var fabdata = fabtable.rows().data();

            $('input[id=txtPurQty]').each(function (ig) {
                if (fabdata[ig].ColorID == Colorid && fabdata[ig].SizeId == Sizeid && fabdata[ig].CompSlNo == Sno) {
                    var row = $(this).closest('tr');
                    row.find('#txtfabActwt').val(totmet);
                    row.find('#txtfabwt').val(totmet);
                    //row.find('#txtfabgram').val(ratecal);
                }
            });

            $('input[id=txtPurQty]').each(function (ig) {
                if (fabdata[ig].CompSlNo == Sno) {
                    var row = $(this).closest('tr');
                    row.find('#txtPurQty').val(0);
                    row.find('#txtFPurQty').val(0);
                }
            });


            $.each(PlanCompFabricDetSave, function () {
                if (this.ColorID == Colorid && this.SizeId == Sizeid && this.CompSlNo == Sno) {
                    this.ActWeight = totmet;
                    this.Weight = totmet;
                    this.Grammage = wtmt;
                    this.Woven_Req_InMtrs = wt;
                }
            });
            $.each(PlanCompFabricDetSave, function () {
                if (this.CompSlNo == Sno) {
                    this.BColorPQty = 0;
                    this.FColorPQty = 0;
                }
            });
            loadCompFabSaveTable(PlanCompFabricDetSave);

            $('#txtWeight').val("");
            $('#txtActualWeight').val("");

            //yarn

            var totalamnt = 0;
            for (var e = 0; e < ConItemList.length; e++) {

                var amount = ConItemList[e].Weight;
                totalamnt = totalamnt + parseFloat(amount);

            }

            totalamnt = totalamnt.toFixed(3);
            for (var e = 0; e < PlanYarnSave.length; e++) {
                if (PlanYarnSave[e].SlNo == Sno && PlanYarnSave[e].BColor == bclr) {
                    PlanYarnSave[e].Fabric_Weight = (totalamnt);
                }
            }
            loadYarnSavedetTab(PlanYarnSave);


            PlanYarn = $.grep(PlanYarnSave, function (e) {
                return e.SlNo == Sno;
            });
            loadYarndetTab(PlanYarn);

            totwght();

            //Yarndet

            if (PlanYarnDetSave.length > 0) {

                for (var b = 0; b < PlanYarnSave.length; b++) {
                    var pysl = PlanYarnSave[b].YSlno;
                    var cmpsl = PlanYarnSave[b].SlNo;
                    var wgt = PlanYarnSave[b].Fabric_Weight;
                    for (var m = 0; m < PlanYarnDetSave.length; m++) {
                        if (PlanYarnDetSave[m].CompSno == cmpsl && PlanYarnDetSave[m].YSlNo == pysl) {
                            var pr = PlanYarnDetSave[m].Knit_In_Per;
                            var re = parseFloat((pr * wgt) / 100);
                            re = re.toFixed(3);
                            PlanYarnDetSave[m].Knit_In_Qty = re;
                            PlanYarnDetSave[m].Knit_In_ActQty = re;
                            //PlanYarnDetSave[m].FabricID = FabricId;
                        }
                    }
                }
                PlanYarnDet = $.grep(PlanYarnDetSave, function (e) {
                    return e.CompSno == CompSlNo;
                });
                Loadsepyarn(PlanYarnDet);
                LoadsepSaveyarn(PlanYarnDetSave);
            }
        }
        if (Colorid > 0 && Sizeid == 0) {

            var fd = 0;
            var s = 0;
            var bclrid = 0;
            var bclr = '';
            $.each(PlanCompFabricDet, function () {
                if (this.ColorID == Colorid && this.CompSlNo == Sno) {
                    this.ActWeight = ((this.Prdn_Qty * Val) / 100).toFixed(3);
                    this.Weight = ((this.Prdn_Qty * Val) / 100).toFixed(3);
                    this.Woven_Req_InMtrs = wt;
                    this.Grammage = wtmt;
                    bclrid = this.BColorID;
                    bclr = this.Bcolor;
                }
            });

            $.each(PlanCompFabricDet, function () {
                if (this.CompSlNo == Sno) {
                    this.BColorPQty = 0;
                    this.FColorPQty = 0;
                }
            });
            //loadCompFabTable(PlanCompFabricDet);

            var fabtable = $('#tCDbody').DataTable();
            var fabdata = fabtable.rows().data();

            $('input[id=txtPurQty]').each(function (ig) {
                if (fabdata[ig].ColorID == Colorid && fabdata[ig].CompSlNo == Sno) {
                    var row = $(this).closest('tr');
                    var t = row.find('#txtfabPrdQty').val();
                    var re = t * Val;
                    re = (re / 100).toFixed(3);
                    row.find('#txtfabActwt').val(re);
                    row.find('#txtfabwt').val(re);
                    //row.find('#txtfabgram').val(ratecal);
                }
            });

            $('input[id=txtPurQty]').each(function (ig) {
                if (fabdata[ig].CompSlNo == Sno) {
                    var row = $(this).closest('tr');
                    row.find('#txtPurQty').val(0);
                    row.find('#txtFPurQty').val(0);
                }
            });


            $.each(PlanCompFabricDetSave, function () {
                if (this.ColorID == Colorid && this.CompSlNo == Sno) {
                    this.ActWeight = ((this.Prdn_Qty * Val) / 100).toFixed(3);
                    this.Weight = ((this.Prdn_Qty * Val) / 100).toFixed(3);
                    this.Grammage = wtmt;
                    this.Woven_Req_InMtrs = wt;
                }
            });
            $.each(PlanCompFabricDetSave, function () {
                if (this.CompSlNo == Sno) {
                    this.BColorPQty = 0;
                    this.FColorPQty = 0;
                }
            });
            loadCompFabSaveTable(PlanCompFabricDetSave);

            $('#txtWeight').val("");
            $('#txtActualWeight').val("");

            //yarn

            var totalamnt = 0;
            for (var e = 0; e < ConItemList.length; e++) {

                var amount = ConItemList[e].Weight;
                totalamnt = totalamnt + parseFloat(amount);

            }

            totalamnt = totalamnt.toFixed(3);
            for (var e = 0; e < PlanYarnSave.length; e++) {
                if (PlanYarnSave[e].SlNo == Sno && PlanYarnSave[e].BColor == bclr) {
                    PlanYarnSave[e].Fabric_Weight = (totalamnt);
                }
            }
            loadYarnSavedetTab(PlanYarnSave);


            PlanYarn = $.grep(PlanYarnSave, function (e) {
                return e.SlNo == Sno;
            });
            loadYarndetTab(PlanYarn);

            totwght();

            //Yarndet

            if (PlanYarnDetSave.length > 0) {

                for (var b = 0; b < PlanYarnSave.length; b++) {
                    var pysl = PlanYarnSave[b].YSlno;
                    var cmpsl = PlanYarnSave[b].SlNo;
                    var wgt = PlanYarnSave[b].Fabric_Weight;
                    for (var m = 0; m < PlanYarnDetSave.length; m++) {
                        if (PlanYarnDetSave[m].CompSno == cmpsl && PlanYarnDetSave[m].YSlNo == pysl) {
                            var pr = PlanYarnDetSave[m].Knit_In_Per;
                            var re = parseFloat((pr * wgt) / 100);
                            re = re.toFixed(3);
                            PlanYarnDetSave[m].Knit_In_Qty = re;
                            PlanYarnDetSave[m].Knit_In_ActQty = re;
                            // PlanYarnDetSave[m].FabricID = FabricId;
                        }
                    }
                }
                PlanYarnDet = $.grep(PlanYarnDetSave, function (e) {
                    return e.CompSno == CompSlNo;
                });
                Loadsepyarn(PlanYarnDet);
                LoadsepSaveyarn(PlanYarnDetSave);
            }
        }
        if (Colorid == 0 && Sizeid > 0) {
            var fd = 0;
            var s = 0;
            var bclrid = 0;
            var bclr = '';
            $.each(PlanCompFabricDet, function () {
                if (this.SizeId == Sizeid && this.CompSlNo == Sno) {
                    this.ActWeight = ((this.Prdn_Qty * Val) / 100).toFixed(3);
                    this.Weight = ((this.Prdn_Qty * Val) / 100).toFixed(3);
                    this.Woven_Req_InMtrs = wt;
                    this.Grammage = wtmt;
                    bclrid = this.BColorID;
                    bclr = this.Bcolor;
                }
            });

            $.each(PlanCompFabricDet, function () {
                if (this.CompSlNo == Sno) {
                    this.BColorPQty = 0;
                    this.FColorPQty = 0;
                }
            });
            //loadCompFabTable(PlanCompFabricDet);

            var fabtable = $('#tCDbody').DataTable();
            var fabdata = fabtable.rows().data();

            $('input[id=txtPurQty]').each(function (ig) {
                if (fabdata[ig].SizeId == Sizeid && fabdata[ig].CompSlNo == Sno) {
                    var row = $(this).closest('tr');
                    var t = row.find('#txtfabPrdQty').val();
                    var re = t * Val;
                    re = (re / 100).toFixed(3);
                    row.find('#txtfabActwt').val(re);
                    row.find('#txtfabwt').val(re);
                    //row.find('#txtfabgram').val(ratecal);
                }
            });

            $('input[id=txtPurQty]').each(function (ig) {
                if (fabdata[ig].CompSlNo == Sno) {
                    var row = $(this).closest('tr');
                    row.find('#txtPurQty').val(0);
                    row.find('#txtFPurQty').val(0);
                }
            });


            $.each(PlanCompFabricDetSave, function () {
                if (this.SizeId == Sizeid && this.CompSlNo == Sno) {
                    this.ActWeight = ((this.Prdn_Qty * Val) / 100).toFixed(3);
                    this.Weight = ((this.Prdn_Qty * Val) / 100).toFixed(3);
                    this.Grammage = wtmt;
                    this.Woven_Req_InMtrs = wt;
                }
            });
            $.each(PlanCompFabricDetSave, function () {
                if (this.CompSlNo == Sno) {
                    this.BColorPQty = 0;
                    this.FColorPQty = 0;
                }
            });
            loadCompFabSaveTable(PlanCompFabricDetSave);

            $('#txtWeight').val("");
            $('#txtActualWeight').val("");

            //yarn

            var totalamnt = 0;
            for (var e = 0; e < ConItemList.length; e++) {

                var amount = ConItemList[e].Weight;
                totalamnt = totalamnt + parseFloat(amount);

            }

            totalamnt = totalamnt.toFixed(3);
            for (var e = 0; e < PlanYarnSave.length; e++) {
                if (PlanYarnSave[e].SlNo == Sno && PlanYarnSave[e].BColor == bclr) {
                    PlanYarnSave[e].Fabric_Weight = (totalamnt);
                }
            }
            loadYarnSavedetTab(PlanYarnSave);


            PlanYarn = $.grep(PlanYarnSave, function (e) {
                return e.SlNo == Sno;
            });
            loadYarndetTab(PlanYarn);

            totwght();

            //Yarndet

            if (PlanYarnDetSave.length > 0) {

                for (var b = 0; b < PlanYarnSave.length; b++) {
                    var pysl = PlanYarnSave[b].YSlno;
                    var cmpsl = PlanYarnSave[b].SlNo;
                    var wgt = PlanYarnSave[b].Fabric_Weight;
                    for (var m = 0; m < PlanYarnDetSave.length; m++) {
                        if (PlanYarnDetSave[m].CompSno == cmpsl && PlanYarnDetSave[m].YSlNo == pysl) {
                            var pr = PlanYarnDetSave[m].Knit_In_Per;
                            var re = parseFloat((pr * wgt) / 100);
                            re = re.toFixed(3);
                            PlanYarnDetSave[m].Knit_In_Qty = re;
                            PlanYarnDetSave[m].Knit_In_ActQty = re;
                            //PlanYarnDetSave[m].FabricID = FabricId;
                        }
                    }
                }
                PlanYarnDet = $.grep(PlanYarnDetSave, function (e) {
                    return e.CompSno == CompSlNo;
                });
                Loadsepyarn(PlanYarnDet);
                LoadsepSaveyarn(PlanYarnDetSave);
            }
        }
        if (Colorid == 0 && Sizeid == 0) {

            $.each(PlanCompFabricDet, function () {
                if (this.CompSlNo == Sno) {
                    var res = (Val * conval) / 100;
                    var totmet = res * this.Prdn_Qty * parts;
                    totmet = totmet.toFixed(3);
                    this.ActWeight = totmet;
                    this.Weight = totmet;
                    this.Grammage = wtmt;
                    var wt = (wtmt * totmet) / 1000;
                    wt = wt.toFixed(3);
                    this.Woven_Req_InMtrs = wt;
                    var s = this.snumb;

                    var fabtable = $('#tCDbody').DataTable();
                    var fabdata = fabtable.rows().data();

                    $('input[id=txtPurQty]').each(function (ig) {
                        if (fabdata[ig].CompSlNo == Sno && fabdata[ig].snumb == s) {

                            var row = $(this).closest('tr');
                            row.find('#txtfabActwt').val(totmet);
                            row.find('#txtfabwt').val(totmet);
                            //row.find('#txtfabgram').val(ratecal);
                        }
                    });
                    $('input[id=txtPurQty]').each(function (ig) {
                        if (fabdata[ig].CompSlNo == Sno) {
                            var row = $(this).closest('tr');
                            row.find('#txtPurQty').val(0);
                            row.find('#txtFPurQty').val(0);
                        }

                    });
                }
            });

            $.each(PlanCompFabricDet, function () {
                if (this.CompSlNo == Sno) {
                    this.BColorPQty = 0;
                    this.FColorPQty = 0;
                }
            });



            $.each(PlanCompFabricDetSave, function () {
                if (this.CompSlNo == Sno) {
                    var res = (Val * conval) / 100;
                    var totmet = res * this.Prdn_Qty * parts;
                    totmet = totmet.toFixed(3);
                    this.ActWeight = totmet;
                    this.Weight = totmet;
                    this.Grammage = wtmt;
                    var wt = (wtmt * totmet) / 1000;
                    wt = wt.toFixed(3);
                    this.Woven_Req_InMtrs = wt;
                }
            });


            $.each(PlanCompFabricDetSave, function () {
                if (this.CompSlNo == Sno) {
                    this.BColorPQty = 0;
                    this.FColorPQty = 0;
                }
            });
            loadCompFabSaveTable(PlanCompFabricDetSave);

            $('#txtWeight').val("");
            $('#txtActualWeight').val("");

            //yarn
            var result = [];
            $.each(PlanCompFabricDet, function (i, e) {
                var matchingItems = $.grep(result, function (item) {
                    return item.BColorID === e.BColorID;
                });
                if (matchingItems.length === 0) {
                    result.push(e);
                }
            });



            if (result.length > 0) {
                //PlanYarnSave = [];
                PlanYarn = [];

                PlanYarnSave = jQuery.grep(PlanYarnSave, function (value) {
                    return value.SlNo != CompSlNo;
                });
                //PlanYarnSave = jQuery.grep(yarnlist, function (value) {
                //    return value.FabricID != fd;
                //});

                var Cs = result[0].CompSlNo;
                var ComponentId = 0;
                var Component = '';
                for (var t = 0; t < compList.length; t++) {
                    if (compList[t].CompSlNo == Cs) {
                        ComponentId = compList[t].ComponentID;
                        Component = compList[t].ComponentName;
                    }
                }

                //if (Mod != 0) {
                //    PlanYarnSave = $.grep(PlanYarnSave, function (e) {
                //        return e.SlNo != CompSlNo;
                //    });
                //}
                for (var j = 0; j < result.length; j++) {


                    if (PlanYarn.length == 0) {
                        leng = 1;

                    }
                    else {
                        leng++;

                    }
                    var bd = 0;
                    bd = result[j].BColorID;
                    var snumb = result[j].snumb;
                    var csln = result[j].CompSlNo;
                    var totalqty = 0;
                    for (var u = 0; u < PlanCompFabricDetSave.length; u++) {
                        if (PlanCompFabricDetSave[u].BColorID == bd && PlanCompFabricDetSave[u].CompSlNo == csln) {

                            var qty = PlanCompFabricDetSave[u].Woven_Req_InMtrs;
                            totalqty = totalqty + parseFloat(qty);
                        }
                    }


                    //var bcqty = 0;
                    //for (var r = 0; r < PlanCompFabricDetSave.length; r++) {
                    //    if (PlanCompFabricDetSave[r].BColorID == bd && PlanCompFabricDetSave[r].CompSlNo == s) {

                    //        var qty = PlanCompFabricDetSave[r].BColorPQty;
                    //        bcqty = bcqty + parseFloat(qty);
                    //    }
                    //}


                    //var finqty = 0;
                    //for (var n = 0; n < PlanCompFabricDetSave.length; n++) {
                    //    if (PlanCompFabricDetSave[n].BColorID == bd && PlanCompFabricDetSave[n].CompSlNo == s) {

                    //        var qty = PlanCompFabricDetSave[n].FColorPQty;
                    //        finqty = finqty + parseFloat(qty);
                    //    }
                    //}


                    //var totclrqty = parseFloat(bcqty) + parseFloat(finqty);


                    //totalqty = totalqty - totclrqty;
                    totalqty = totalqty.toFixed(3);


                    var yarnlistobj = {
                        PlanId: 0,
                        Fabric: result[j].Fabric,
                        FabricID: result[j].FabricID,
                        Fabric_ColorId: result[j].BColorID,
                        Fabric_Weight: totalqty,
                        Fabric_type: result[j].type,//result[j].FabricType,
                        EntryDate: new Date($('#txtEntryDate').val()),
                        BColor: result[j].Bcolor,
                        SlNo: result[j].CompSlNo,
                        YPlanmasID: 0,
                        YSlno: leng,
                        ComponentId: ComponentId,
                        Component: Component
                    }




                    PlanYarnSave.push(yarnlistobj);
                    PlanYarn.push(yarnlistobj);
                }
            }

            //loadYarndetTab
            PlanYarnSave = jQuery.grep(PlanYarnSave, function (value) {
                return value.Fabric_Weight != 0;
            });
            PlanYarn = jQuery.grep(PlanYarn, function (value) {
                return value.Fabric_Weight != 0;
            });
            loadYarnSavedetTab(PlanYarnSave);

            loadYarndetTab(PlanYarn);

            //yarn

            //var totalamnt = 0;
            //for (var e = 0; e < ConItemList.length; e++) {

            //    var amount = ConItemList[e].Weight;
            //    totalamnt = totalamnt + parseFloat(amount);

            //}

            //totalamnt = totalamnt.toFixed(3);
            //for (var e = 0; e < PlanYarnSave.length; e++) {
            //    if (PlanYarnSave[e].SlNo == Sno) {
            //        PlanYarnSave[e].Fabric_Weight = (totalamnt);
            //    }
            //}
            //loadYarnSavedetTab(PlanYarnSave);


            //PlanYarn = $.grep(PlanYarnSave, function (e) {
            //    return e.SlNo == Sno;
            //});
            //loadYarndetTab(PlanYarn);

            totwght();

            //Yarndet

            if (PlanYarnDetSave.length > 0) {

                for (var b = 0; b < PlanYarnSave.length; b++) {
                    var pysl = PlanYarnSave[b].YSlno;
                    var cmpsl = PlanYarnSave[b].SlNo;
                    var wgt = PlanYarnSave[b].Fabric_Weight;
                    for (var m = 0; m < PlanYarnDetSave.length; m++) {
                        if (PlanYarnDetSave[m].CompSno == cmpsl && PlanYarnDetSave[m].YSlNo == pysl) {
                            var pr = PlanYarnDetSave[m].Knit_In_Per;
                            var re = parseFloat((pr * wgt) / 100);
                            re = re.toFixed(3);
                            PlanYarnDetSave[m].Knit_In_Qty = re;
                            PlanYarnDetSave[m].Knit_In_ActQty = re;
                            //PlanYarnDetSave[m].FabricID = FabricId;
                        }
                    }
                }
                PlanYarnDet = $.grep(PlanYarnDetSave, function (e) {
                    return e.CompSno == CompSlNo;
                });
                Loadsepyarn(PlanYarnDet);
                LoadsepSaveyarn(PlanYarnDetSave);
            }
        }

    });
    $(document).on('keyup', '.calcpanpcs', function (e) {
        debugger;
        var table = $('#tCPIbody').DataTable();
        var quantity = table.row($(this).parents('tr')).data()["Prdn_Qty"];
        var totpcs = table.row($(this).parents('tr')).data()["TotPieces"];
        var CPlan = table.row($(this).parents('tr')).data()["CPlanSlNo"];
        var Sno = table.row($(this).parents('tr')).data()["CompSlNo"];
        var Colorid = table.row($(this).parents('tr')).data()["ColorID"];
        var Sizeid = table.row($(this).parents('tr')).data()["SizeId"];
        parts = table.row($(this).parents('tr')).data()["No_Of_Parts"];
        var Val = $(this).val();

        fillvar = 'GRMPCSPAN';
        index;
        rowindex = $(this).closest('tr').index();
        indexforfill = rowindex;


        var IQty = 0;
        if (Val == 0) {
            IQty = 0;
        }
        else {
            IQty = Val;
        }

        var wt = (Val * totpcs) / 1000;
        wt = wt.toFixed(3);
        $.each(ConItemList, function () {
            if (this.CPlanSlNo == CPlan && this.CompSlNo == Sno) {
                this.GmsPieces = Val;
                this.Weight = wt;
            }
        });

        var data = table.rows().data();

        $('input[id=txtGmspcspan]').each(function (ind) {
            if (data[ind].CPlanSlNo == CPlan && data[ind].CompSlNo == Sno) {
                var row = $(this).closest('tr');
                row.find('#txtWght').val(wt);
            }
        });
        $.each(ConItemListSave, function () {
            if (this.CPlanSlNo == CPlan && this.CompSlNo == Sno) {
                this.GmsPieces = Val;
                this.Weight = wt;
            }
        });
        loadconSaveTable(ConItemListSave);

        if (Colorid > 0 && Sizeid > 0) {
            var fd = 0;
            var s = 0;
            var bclrid = 0;
            var bclr = '';
            $.each(PlanCompFabricDet, function () {
                if (this.ColorID == Colorid && this.SizeId == Sizeid && this.CompSlNo == Sno) {
                    this.Weight = totpcs;
                    this.ActWeight = totpcs;
                    this.Woven_Req_InMtrs = wt;
                    //fd = this.FabricID;
                    //s = this.CompSlNo;
                    this.Grammage = Val;
                    bclrid = this.BColorID;
                    bclr = this.Bcolor;
                }
            });

            $.each(PlanCompFabricDet, function () {
                if (this.CompSlNo == Sno) {
                    this.BColorPQty = 0;
                    this.FColorPQty = 0;
                }
            });
            //loadCompFabTable(PlanCompFabricDet);

            var fabtable = $('#tCDbody').DataTable();
            var fabdata = fabtable.rows().data();

            $('input[id=txtPurQty]').each(function (ig) {
                if (fabdata[ig].ColorID == Colorid && fabdata[ig].SizeId == Sizeid && fabdata[ig].CompSlNo == Sno) {
                    var row = $(this).closest('tr');
                    row.find('#txtfabActwt').val(totpcs);
                    row.find('#txtfabwt').val(totpcs);
                    //row.find('#txtfabgram').val(ratecal);
                }
            });

            $('input[id=txtPurQty]').each(function (ig) {
                if (fabdata[ig].CompSlNo == Sno) {
                    var row = $(this).closest('tr');
                    row.find('#txtPurQty').val(0);
                    row.find('#txtFPurQty').val(0);
                }
            });

            var bclrid = 0;
            var bclr = '';
            $.each(PlanCompFabricDetSave, function () {
                if (this.ColorID == Colorid && this.SizeId == Sizeid && this.CompSlNo == Sno) {
                    this.Weight = totpcs;
                    this.ActWeight = totpcs;
                    this.Woven_Req_InMtrs = wt;
                    this.Grammage = Val;
                    bclrid = this.BColorID;
                    bclr = this.Bcolor;
                }
            });
            $.each(PlanCompFabricDetSave, function () {
                if (this.CompSlNo == Sno) {
                    this.BColorPQty = 0;
                    this.FColorPQty = 0;
                }
            });
            loadCompFabSaveTable(PlanCompFabricDetSave);

            $('#txtWeight').val("");
            $('#txtActualWeight').val("");



        }
        if (Colorid == 0 && Sizeid > 0) {
            var fd = 0;
            var s = 0;
            var bclrid = 0;
            var bclr = '';
            $.each(PlanCompFabricDet, function () {
                if (this.SizeId == Sizeid && this.CompSlNo == Sno) {
                    this.Weight = this.Prdn_Qty * parts;
                    this.ActWeight = this.Prdn_Qty * parts;
                    var r = (parseFloat(Val) * parseFloat(this.Weight)) / 1000;
                    this.Woven_Req_InMtrs = r;
                    //fd = this.FabricID;
                    //s = this.CompSlNo;
                    this.Grammage = Val;
                    bclrid = this.BColorID;
                    bclr = this.Bcolor;
                }
            });

            $.each(PlanCompFabricDet, function () {
                if (this.CompSlNo == Sno) {
                    this.BColorPQty = 0;
                    this.FColorPQty = 0;
                }
            });
            //loadCompFabTable(PlanCompFabricDet);

            var fabtable = $('#tCDbody').DataTable();
            var fabdata = fabtable.rows().data();

            $('input[id=txtPurQty]').each(function (ig) {
                if (fabdata[ig].SizeId == Sizeid && fabdata[ig].CompSlNo == Sno) {
                    var row = $(this).closest('tr');
                    var tr = row.find('#txtfabPrdQty').val();
                    row.find('#txtfabActwt').val(tr * parts);
                    row.find('#txtfabwt').val(tr * parts);
                    //row.find('#txtfabgram').val(ratecal);
                }
            });

            $('input[id=txtPurQty]').each(function (ig) {
                if (fabdata[ig].CompSlNo == Sno) {
                    var row = $(this).closest('tr');
                    row.find('#txtPurQty').val(0);
                    row.find('#txtFPurQty').val(0);
                }
            });

            var bclrid = 0;
            var bclr = '';
            $.each(PlanCompFabricDetSave, function () {
                if (this.SizeId == Sizeid && this.CompSlNo == Sno) {
                    this.Weight = this.Prdn_Qty * parts;
                    this.ActWeight = this.Prdn_Qty * parts;
                    var r = (parseFloat(Val) * parseFloat(this.Weight)) / 1000;
                    this.Woven_Req_InMtrs = r;
                    this.Grammage = Val;
                    bclrid = this.BColorID;
                    bclr = this.Bcolor;
                }
            });
            $.each(PlanCompFabricDetSave, function () {
                if (this.CompSlNo == Sno) {
                    this.BColorPQty = 0;
                    this.FColorPQty = 0;
                }
            });
            loadCompFabSaveTable(PlanCompFabricDetSave);

            $('#txtWeight').val("");
            $('#txtActualWeight').val("");


        }

        if (Colorid > 0 && Sizeid == 0) {
            var fd = 0;
            var s = 0;
            var bclrid = 0;
            var bclr = '';
            $.each(PlanCompFabricDet, function () {
                if (this.ColorID == Colorid && this.CompSlNo == Sno) {
                    this.Weight = this.Prdn_Qty * parts;
                    this.ActWeight = this.Prdn_Qty * parts;
                    var r = (parseFloat(Val) * parseFloat(this.Weight)) / 1000;
                    this.Woven_Req_InMtrs = r;
                    //fd = this.FabricID;
                    //s = this.CompSlNo;
                    this.Grammage = Val;
                    bclrid = this.BColorID;
                    bclr = this.Bcolor;
                }
            });

            $.each(PlanCompFabricDet, function () {
                if (this.CompSlNo == Sno) {
                    this.BColorPQty = 0;
                    this.FColorPQty = 0;
                }
            });
            //loadCompFabTable(PlanCompFabricDet);

            var fabtable = $('#tCDbody').DataTable();
            var fabdata = fabtable.rows().data();

            $('input[id=txtPurQty]').each(function (ig) {
                if (fabdata[ig].ColorID == Colorid && fabdata[ig].CompSlNo == Sno) {
                    var row = $(this).closest('tr');
                    var tr = row.find('#txtfabPrdQty').val();
                    row.find('#txtfabActwt').val(tr * parts);
                    row.find('#txtfabwt').val(tr * parts);
                    //row.find('#txtfabgram').val(ratecal);
                }
            });

            $('input[id=txtPurQty]').each(function (ig) {
                if (fabdata[ig].CompSlNo == Sno) {
                    var row = $(this).closest('tr');
                    row.find('#txtPurQty').val(0);
                    row.find('#txtFPurQty').val(0);
                }
            });

            var bclrid = 0;
            var bclr = '';
            $.each(PlanCompFabricDetSave, function () {
                if (this.ColorID == Colorid && this.CompSlNo == Sno) {
                    this.Weight = this.Prdn_Qty * parts;
                    this.ActWeight = this.Prdn_Qty * parts;
                    var r = (parseFloat(Val) * parseFloat(this.Weight)) / 1000;
                    this.Woven_Req_InMtrs = r;
                    this.Grammage = Val;
                    bclrid = this.BColorID;
                    bclr = this.Bcolor;
                }
            });
            $.each(PlanCompFabricDetSave, function () {
                if (this.CompSlNo == Sno) {
                    this.BColorPQty = 0;
                    this.FColorPQty = 0;
                }
            });
            loadCompFabSaveTable(PlanCompFabricDetSave);

            $('#txtWeight').val("");
            $('#txtActualWeight').val("");


        }
        var totprdqty = $('#txtProdQty').val();

        if (Colorid == 0 && Sizeid == 0) {
            $.each(PlanCompFabricDet, function () {
                var quan = this.Prdn_Qty;
                var res = parts * parseFloat(quan);
                res = res.toFixed(3);
                this.Weight = res;
                this.ActWeight = res;
                var r = (parseFloat(Val) * parseFloat(this.Weight)) / 1000;
                this.Woven_Req_InMtrs = r;
                this.Grammage = Val;
                //fd = this.FabricID;
                var s = this.snumb;
                var fabtable = $('#tCDbody').DataTable();
                var fabdata = fabtable.rows().data();

                $('input[id=txtPurQty]').each(function (ig) {
                    if (fabdata[ig].CompSlNo == Sno && fabdata[ig].snumb == s) {

                        var row = $(this).closest('tr');
                        row.find('#txtfabActwt').val(res);
                        row.find('#txtfabwt').val(res);
                        //row.find('#txtfabgram').val(ratecal);
                    }
                });
            });



            $.each(PlanCompFabricDetSave, function () {
                if (this.CompSlNo == Sno) {
                    var quan = this.Prdn_Qty;
                    var res = parts * parseFloat(quan);
                    res = res.toFixed(3);
                    this.Weight = res;
                    this.Grammage = Val;
                    this.ActWeight = res;
                    var r = (parseFloat(Val) * parseFloat(this.Weight)) / 1000;
                    this.Woven_Req_InMtrs = r;
                }
            });
            loadCompFabSaveTable(PlanCompFabricDetSave);

            $('#txtWeight').val("");
            $('#txtActualWeight').val("");


        }


        //yarn
        var result = [];
        $.each(PlanCompFabricDet, function (i, e) {
            var matchingItems = $.grep(result, function (item) {
                return item.BColorID === e.BColorID;
            });
            if (matchingItems.length === 0) {
                result.push(e);
            }
        });



        if (result.length > 0) {
            //PlanYarnSave = [];
            PlanYarn = [];

            PlanYarnSave = jQuery.grep(PlanYarnSave, function (value) {
                return value.SlNo != CompSlNo;
            });
            //PlanYarnSave = jQuery.grep(yarnlist, function (value) {
            //    return value.FabricID != fd;
            //});

            var Cs = result[0].CompSlNo;
            var ComponentId = 0;
            var Component = '';
            for (var t = 0; t < compList.length; t++) {
                if (compList[t].CompSlNo == Cs) {
                    ComponentId = compList[t].ComponentID;
                    Component = compList[t].ComponentName;
                }
            }

            //if (Mod != 0) {
            //    PlanYarnSave = $.grep(PlanYarnSave, function (e) {
            //        return e.SlNo != CompSlNo;
            //    });
            //}
            for (var j = 0; j < result.length; j++) {


                if (PlanYarn.length == 0) {
                    leng = 1;

                }
                else {
                    leng++;

                }
                var bd = 0;
                bd = result[j].BColorID;
                var snumb = result[j].snumb;
                var csln = result[j].CompSlNo;
                var totalqty = 0;
                for (var u = 0; u < PlanCompFabricDetSave.length; u++) {
                    if (PlanCompFabricDetSave[u].BColorID == bd && PlanCompFabricDetSave[u].CompSlNo == csln) {

                        var qty = PlanCompFabricDetSave[u].Woven_Req_InMtrs;
                        totalqty = totalqty + parseFloat(qty);
                    }
                }

                totalqty = totalqty.toFixed(3);

                var yarnlistobj = {
                    PlanId: 0,
                    Fabric: result[j].Fabric,
                    FabricID: result[j].FabricID,
                    Fabric_ColorId: result[j].BColorID,
                    Fabric_Weight: totalqty,
                    Fabric_type: result[j].type,//result[j].FabricType,
                    EntryDate: new Date($('#txtEntryDate').val()),
                    BColor: result[j].Bcolor,
                    SlNo: result[j].CompSlNo,
                    YPlanmasID: 0,
                    YSlno: leng,
                    ComponentId: ComponentId,
                    Component: Component
                }

                PlanYarnSave.push(yarnlistobj);
                PlanYarn.push(yarnlistobj);
            }
        }

        //loadYarndetTab
        PlanYarnSave = jQuery.grep(PlanYarnSave, function (value) {
            return value.Fabric_Weight != 0;
        });
        PlanYarn = jQuery.grep(PlanYarn, function (value) {
            return value.Fabric_Weight != 0;
        });
        loadYarnSavedetTab(PlanYarnSave);


        //var ctry = [];
        //ctry = PlanYarnSave;
        //ctry = $.grep(ctry, function (e) {
        //    if (e.SlNo == s) {
        //        return e;
        //    }
        //});
        //PlanYarn = ctry;

        loadYarndetTab(PlanYarn);
        //yarn

        //var totalamnt = 0;
        //for (var e = 0; e < ConItemList.length; e++) {

        //    var amount = ConItemList[e].Weight;
        //    totalamnt = totalamnt + parseFloat(amount);

        //}

        //totalamnt = totalamnt.toFixed(3);
        //for (var e = 0; e < PlanYarnSave.length; e++) {
        //    if (PlanYarnSave[e].SlNo == Sno) {
        //        PlanYarnSave[e].Fabric_Weight = (totalamnt);
        //    }
        //}
        //loadYarnSavedetTab(PlanYarnSave);


        //PlanYarn = $.grep(PlanYarnSave, function (e) {
        //    return e.SlNo == Sno;
        //});
        //loadYarndetTab(PlanYarn);

        totwght();

        //Yarndet

        if (PlanYarnDetSave.length > 0) {

            for (var b = 0; b < PlanYarnSave.length; b++) {
                var pysl = PlanYarnSave[b].YSlno;
                var cmpsl = PlanYarnSave[b].SlNo;
                var wgt = PlanYarnSave[b].Fabric_Weight;
                for (var m = 0; m < PlanYarnDetSave.length; m++) {
                    if (PlanYarnDetSave[m].CompSno == cmpsl && PlanYarnDetSave[m].YSlNo == pysl) {
                        var pr = PlanYarnDetSave[m].Knit_In_Per;
                        var re = parseFloat((pr * wgt) / 100);
                        re = re.toFixed(3);
                        PlanYarnDetSave[m].Knit_In_Qty = re;
                        PlanYarnDetSave[m].Knit_In_ActQty = re;
                        //PlanYarnDetSave[m].FabricID = FabricId;
                    }
                }
            }
            PlanYarnDet = $.grep(PlanYarnDetSave, function (e) {
                return e.CompSno == CompSlNo;
            });
            Loadsepyarn(PlanYarnDet);
            LoadsepSaveyarn(PlanYarnDetSave);


        }
        totwght();
    });
    $(document).on('change', '.calcgramm', function (e) {
        debugger;

        var table = $('#tCPIbody').DataTable();
        var quantity = table.row($(this).parents('tr')).data()["Prdn_Qty"];
        var CPlan = table.row($(this).parents('tr')).data()["CPlanSlNo"];
        var Sno = table.row($(this).parents('tr')).data()["CompSlNo"];
        var Colorid = table.row($(this).parents('tr')).data()["ColorID"];
        var Sizeid = table.row($(this).parents('tr')).data()["SizeId"];
        var Clen = table.row($(this).parents('tr')).data()["Length"];
        var CWid = table.row($(this).parents('tr')).data()["Width"];

        //var ftable = $('#tCPIbody').DataTable();
        //var fdata = fabtable.row().data();

        if (ChkMaj == "Y") {
            //for (var t = 0; t < compList.length; t++) {
            //    if (compList[t].CompSlNo == Sno) {
            //        var parts = compList[t].No_Of_Parts;
            //    }
            //}
            //if (Clen == 0 || CWid == 0) {
            //    alert("Please Enter the Length,This will be Major Component..");
            //    //$('input[id=txtGram]').each(function (ig) {
            //    //    if (fdata[ig].CompSlNo == Sno) {
            //    //        var row = $(this).closest('tr');
            //    //        row.find('#txtGram').val(0);
            //    //        //row.find('#txtFPurQty').val(0);
            //    //    }
            //    //});

            //    var data = table.rows().data();

            //    $('input[id=txtGram]').each(function (ind) {
            //        if (data[ind].CPlanSlNo == CPlan && data[ind].CompSlNo == Sno) {
            //            var row = $(this).closest('tr');
            //            row.find('#txtGram').val(0);
            //        }
            //    });

            //    return true;
            //}
        }

        for (var t = 0; t < compList.length; t++) {
            if (compList[t].CompSlNo == Sno) {
                var parts = compList[t].No_Of_Parts;
            }
        }

        var Val = $(this).val();

        fillvar = 'GRM';
        index;
        rowindex = $(this).closest('tr').index();
        indexforfill = rowindex;


        var IQty = 0;
        if (Val == 0) {
            IQty = 0;
        }
        else {
            IQty = Val;
        }

        var field = Val;
        if (!field.match(/^[\-\+]?[\d\,]*\.?[\d]*$/)) {
            $.each(ConItemList, function () {
                if (this.CPlanSlNo == CPlan && this.CompSlNo == Sno) {
                    this.Grammage = 0;
                    this.Weight = 0;
                }
            });


            var table = $('#tCPIbody').DataTable();
            var data = table.rows().data();
            $('input[id=txtGram]').each(function (ig) {
                if (data[ig].CPlanSlNo == CPlan && data[ig].CompSlNo == Sno) {
                    var row = $(this).closest('tr');
                
                    row.find('#txtGram').val(0);
                    row.find('#txtWght').val(0);
                }
            });
           // loadAdConTable(ConItemList);
            return false;
        }



        var ratecal = Val;
        var res = quantity * ratecal / 1000;
        finalresult = (res * parts).toFixed(3);
        res = (res * parts).toFixed(3);
        $.each(ConItemList, function () {
            if (this.CPlanSlNo == CPlan && this.CompSlNo == Sno) {
                this.Grammage = ratecal;
                this.Weight = res;
            }
        });

        //loadAdConTable(ConItemList);
        //

        //Weigth calculation for consumption table - Begin

        var data = table.rows().data();

        $('input[id=txtGram]').each(function (ind) {
            if (data[ind].CPlanSlNo == CPlan && data[ind].CompSlNo == Sno) {
                var row = $(this).closest('tr');
                row.find('#txtWght').val(res);
            }
        });

        //End      


        $.each(ConItemListSave, function () {
            if (this.CPlanSlNo == CPlan && this.CompSlNo == Sno) {
                this.Grammage = ratecal;
                this.Weight = res;
            }
        });
        //loadconSaveTable(ConItemListSave);

        //if (Colorid == 0 && Sizeid == 0) {
        //    //Calcavgfab(Val, res, Sno);
        //    //return true;

        //    var totprdqty = $('#txtProdQty').val();



        //    for (var d = 0; d < PlanCompFabricDet.length; d++) {
        //        var quan = PlanCompFabricDet[d].Prdn_Qty;
        //        var res1 = (res / totprdqty) * quan;
        //        res1 = res1.toFixed(3);
        //        PlanCompFabricDet[d].Weight = res1;
        //        PlanCompFabricDet[d].ActWeight = res1;
        //        PlanCompFabricDet[d].Grammage = Val;
        //    }

        //    $.each(PlanCompFabricDet, function () {
        //        if (this.CompSlNo == Sno) {
        //            this.BColorPQty = 0;
        //            this.FColorPQty = 0;
        //        }
        //    });
        //    //loadCompFabTable(PlanCompFabricDet);
        //    var fabtable = $('#tCDbody').DataTable();
        //    var fabdata = fabtable.rows().data();

        //    $('input[id=txtPurQty]').each(function (ig) {
        //        var row = $(this).closest('tr');
        //        var de = row.find('#txtfabPrdQty').val();
        //        row.find('#txtfabActwt').val(((res / totprdqty) * de).toFixed(3));
        //        row.find('#txtfabwt').val(((res / totprdqty) * de).toFixed(3));
        //        row.find('#txtfabgram').val(Val);

        //    });

        //    $('input[id=txtPurQty]').each(function (ig) {
        //        if (fabdata[ig].CompSlNo == Sno) {
        //            var row = $(this).closest('tr');
        //            row.find('#txtPurQty').val(0);
        //            row.find('#txtFPurQty').val(0);
        //        }
        //    });
        //    //var bclrid = 0;
        //    //var bclr = '';

        //    for (var d = 0; d < PlanCompFabricDetSave.length; d++) {
        //        if (PlanCompFabricDetSave[d].CompSlNo == Sno) {
        //            var quan = PlanCompFabricDetSave[d].Prdn_Qty;
        //            var res1 = (res / totprdqty) * quan;
        //            res1 = res1.toFixed(3);
        //            PlanCompFabricDetSave[d].Weight = res1;
        //            PlanCompFabricDetSave[d].ActWeight = res1;
        //            PlanCompFabricDetSave[d].Grammage = Val;
        //        }
        //    }

        //    //loadCompFabSaveTable(PlanCompFabricDetSave);

        //    //Planloss
        //    if (PlanLossSave.length > 0) {
        //        var totalamnt = 0;
        //        for (var e = 0; e < PlanLossSave.length; e++) {
        //            if (PlanLossSave[e].CompSNo == Sno) {
        //                var amount = PlanLossSave[e].Loss_Per;
        //                totalamnt = totalamnt + parseFloat(amount);
        //            }
        //        }
        //        var fabres = 0;
        //        if (totalamnt < 0) {
        //            for (var d = 0; d < PlanCompFabricDet.length; d++) {
        //                var sn = PlanCompFabricDet[d].snumb;
        //                var quan = PlanCompFabricDet[d].ActWeight;
        //                var res = -((totalamnt / 100) * quan).toFixed(3);
        //                PlanCompFabricDet[d].Weight = (parseFloat(quan) + parseFloat(res)).toFixed(3);
        //                fabres = (parseFloat(quan) + parseFloat(res)).toFixed(3);

        //                $('input[id=txtPurQty]').each(function (ig) {
        //                    if (fabdata[ig].snumb == sn && fabdata[ig].CompSlNo == Sno) {
        //                        var row = $(this).closest('tr');
        //                        row.find('#txtfabwt').val(fabres);

        //                    }
        //                });
        //            }
        //            //loadCompFabTable(PlanCompFabricDet);             



        //            for (var d = 0; d < PlanCompFabricDetSave.length; d++) {
        //                if (PlanCompFabricDetSave[d].CompSlNo == Sno) {
        //                    var quan = PlanCompFabricDetSave[d].ActWeight;
        //                    var res = -((totalamnt / 100) * quan).toFixed(3);
        //                    PlanCompFabricDetSave[d].Weight = (parseFloat(quan) + parseFloat(res)).toFixed(3);

        //                }
        //            }
        //            loadCompFabSaveTable(PlanCompFabricDetSave);
        //        }

        //        if (totalamnt > 0) {
        //            for (var d = 0; d < PlanCompFabricDet.length; d++) {
        //                var sn = PlanCompFabricDet[d].snumb;
        //                var quan = PlanCompFabricDet[d].ActWeight;
        //                var res = ((totalamnt / 100) * quan).toFixed(3);
        //                PlanCompFabricDet[d].Weight = (parseFloat(quan) - parseFloat(res)).toFixed(3);
        //                fabres = (parseFloat(quan) - parseFloat(res)).toFixed(3);

        //                $('input[id=txtPurQty]').each(function (ig) {
        //                    if (fabdata[ig].snumb == CPlan && fabdata[ig].CompSlNo == Sno) {
        //                        var row = $(this).closest('tr');
        //                        row.find('#txtfabwt').val(fabres);

        //                    }
        //                });
        //            }
        //            //loadCompFabTable(PlanCompFabricDet);

        //            for (var d = 0; d < PlanCompFabricDetSave.length; d++) {
        //                if (PlanCompFabricDetSave[d].CompSlNo == Sno) {
        //                    var quan = PlanCompFabricDetSave[d].ActWeight;
        //                    var res = ((totalamnt / 100) * quan).toFixed(3);
        //                    PlanCompFabricDetSave[d].Weight = (parseFloat(quan) - parseFloat(res)).toFixed(3);

        //                }
        //            }
        //            loadCompFabSaveTable(PlanCompFabricDetSave);
        //        }
        //        if (totalamnt == 0) {
        //            for (var d = 0; d < PlanCompFabricDet.length; d++) {
        //                var sn = PlanCompFabricDet[d].snumb;
        //                PlanCompFabricDet[d].Weight = PlanCompFabricDet[d].ActWeight;

        //                fabres = PlanCompFabricDet[d].ActWeight;

        //                $('input[id=txtPurQty]').each(function (ig) {
        //                    if (fabdata[ig].snumb == CPlan && fabdata[ig].CompSlNo == Sno) {
        //                        var row = $(this).closest('tr');
        //                        row.find('#txtfabwt').val(fabres);

        //                    }
        //                });
        //            }
        //            //loadCompFabTable(PlanCompFabricDet);

        //            for (var d = 0; d < PlanCompFabricDetSave.length; d++) {
        //                if (PlanCompFabricDetSave[d].CompSlNo == Sno) {

        //                    PlanCompFabricDetSave[d].Weight = PlanCompFabricDetSave[d].ActWeight;

        //                }
        //            }
        //            loadCompFabSaveTable(PlanCompFabricDetSave);
        //        }
        //        totwght();

        //    }
        //    //yarn
        //    var result = [];
        //    $.each(PlanCompFabricDet, function (i, e) {
        //        var matchingItems = $.grep(result, function (item) {
        //            return item.BColorID === e.BColorID;
        //        });
        //        if (matchingItems.length === 0) {
        //            result.push(e);
        //        }
        //    });



        //    if (result.length > 0) {
        //        //PlanYarnSave = [];
        //        PlanYarn = [];

        //        PlanYarnSave = jQuery.grep(PlanYarnSave, function (value) {
        //            return value.SlNo != CompSlNo;
        //        });
        //        //PlanYarnSave = jQuery.grep(yarnlist, function (value) {
        //        //    return value.FabricID != fd;
        //        //});

        //        var Cs = result[0].CompSlNo;
        //        var ComponentId = 0;
        //        var Component = '';
        //        for (var t = 0; t < compList.length; t++) {
        //            if (compList[t].CompSlNo == Cs) {
        //                ComponentId = compList[t].ComponentID;
        //                Component = compList[t].ComponentName;
        //            }
        //        }

        //        //if (Mod != 0) {
        //        //    PlanYarnSave = $.grep(PlanYarnSave, function (e) {
        //        //        return e.SlNo != CompSlNo;
        //        //    });
        //        //}
        //        for (var j = 0; j < result.length; j++) {


        //            if (PlanYarn.length == 0) {
        //                leng = 1;

        //            }
        //            else {
        //                leng++;

        //            }
        //            var bd = 0;
        //            bd = result[j].BColorID;
        //            var snumb = result[j].snumb;
        //            var csln = result[j].CompSlNo;
        //            var totalqty = 0;
        //            for (var u = 0; u < PlanCompFabricDetSave.length; u++) {
        //                if (PlanCompFabricDetSave[u].BColorID == bd && PlanCompFabricDetSave[u].CompSlNo == csln) {

        //                    var qty = PlanCompFabricDetSave[u].Weight;
        //                    totalqty = totalqty + parseFloat(qty);
        //                }
        //            }


        //            var bcqty = 0;
        //            for (var r = 0; r < PlanCompFabricDetSave.length; r++) {
        //                if (PlanCompFabricDetSave[r].BColorID == bd && PlanCompFabricDetSave[r].CompSlNo == s) {

        //                    var qty = PlanCompFabricDetSave[r].BColorPQty;
        //                    bcqty = bcqty + parseFloat(qty);
        //                }
        //            }


        //            var finqty = 0;
        //            for (var n = 0; n < PlanCompFabricDetSave.length; n++) {
        //                if (PlanCompFabricDetSave[n].BColorID == bd && PlanCompFabricDetSave[n].CompSlNo == s) {

        //                    var qty = PlanCompFabricDetSave[n].FColorPQty;
        //                    finqty = finqty + parseFloat(qty);
        //                }
        //            }


        //            var totclrqty = parseFloat(bcqty) + parseFloat(finqty);

        //            //for (var w = 0; w < PlanCompFabricDet.length; w++) {
        //            //    if (PlanCompFabricDet[w].BColorID == bd && PlanCompFabricDet[w].snumb == sno) {

        //            totalqty = totalqty - totclrqty;
        //            totalqty = totalqty.toFixed(3);
        //            //    }
        //            //}

        //            var yarnlistobj = {
        //                PlanId: 0,
        //                Fabric: result[j].Fabric,
        //                FabricID: result[j].FabricID,
        //                Fabric_ColorId: result[j].BColorID,
        //                Fabric_Weight: totalqty,
        //                Fabric_type: result[j].type,//result[j].FabricType,
        //                EntryDate: new Date($('#txtEntryDate').val()),
        //                BColor: result[j].Bcolor,
        //                SlNo: result[j].CompSlNo,
        //                YPlanmasID: 0,
        //                YSlno: leng,
        //                ComponentId: ComponentId,
        //                Component: Component
        //            }




        //            PlanYarnSave.push(yarnlistobj);
        //            PlanYarn.push(yarnlistobj);
        //        }
        //    }

        //    //loadYarndetTab
        //    PlanYarnSave = jQuery.grep(PlanYarnSave, function (value) {
        //        return value.Fabric_Weight != 0;
        //    });
        //    loadYarnSavedetTab(PlanYarnSave);


        //    //var ctry = [];
        //    //ctry = PlanYarnSave;
        //    //ctry = $.grep(ctry, function (e) {
        //    //    if (e.SlNo == s) {
        //    //        return e;
        //    //    }
        //    //});
        //    //PlanYarn = ctry;

        //    loadYarndetTab(PlanYarn);


        //    //var totalamnt = 0;
        //    //for (var e = 0; e < PlanCompFabricDet.length; e++) {
        //    //    if (PlanCompFabricDet[e].CompSlNo == Sno && PlanCompFabricDet[e].Bcolor == bclr) {
        //    //        var amount = PlanCompFabricDet[e].Weight;
        //    //        totalamnt = totalamnt + parseFloat(amount);
        //    //    }
        //    //}

        //    //totalamnt = totalamnt.toFixed(3);
        //    //for (var e = 0; e < PlanYarnSave.length; e++) {
        //    //    if (PlanYarnSave[e].SlNo == Sno && PlanYarnSave[e].BColor == bclr) {
        //    //        PlanYarnSave[e].Fabric_Weight = (totalamnt);
        //    //    }
        //    //}
        //    //loadYarnSavedetTab(PlanYarnSave);


        //    //PlanYarn = $.grep(PlanYarnSave, function (e) {
        //    //    return e.SlNo == Sno;
        //    //});
        //    //loadYarndetTab(PlanYarn);

        //    totwght();

        //    //Yarndet

        //    if (PlanYarnDetSave.length > 0) {


        //        var ys = PlanYarn[0].YSlno;

        //        for (var b = 0; b < PlanYarnSave.length; b++) {
        //            if (PlanYarnSave[b].SlNo == CompSlNo) {
        //                var pysl = PlanYarnSave[b].YSlno;
        //                var cmpsl = PlanYarnSave[b].SlNo;
        //                var wgt = PlanYarnSave[b].Fabric_Weight;
        //                var bcid = PlanYarnSave[b].Fabric_ColorId;

        //                for (var m = 0; m < PlanYarnDetSave.length; m++) {
        //                    if (PlanYarnDetSave[m].CompSno == cmpsl) {
        //                        var s = PlanYarnDetSave[m].SlNo;
        //                        if (PlanYarnDetSave[m].BaseColorID == bcid) {
        //                            YsBp = 1;
        //                            var pr = PlanYarnDetSave[m].Knit_In_Per;
        //                            var re = parseFloat((pr * wgt) / 100);
        //                            re = re.toFixed(3);
        //                            PlanYarnDetSave[m].Knit_In_Qty = re;
        //                            PlanYarnDetSave[m].Knit_In_ActQty = re;
        //                            PlanYarnDetSave[m].YSlNo = pysl;
        //                            PlanYarnDetSave[m].SlNo = s;
        //                            // PlanYarnDetSave[m].FabricID = FabricId;
        //                        }

        //                    }
        //                }
        //            }
        //        }
        //        PlanYarnDet = $.grep(PlanYarnDetSave, function (e) {
        //            return e.CompSno == CompSlNo && e.YSlNo == ys;
        //        });
        //        Loadsepyarn(PlanYarnDet);
        //        LoadsepSaveyarn(PlanYarnDetSave);
        //    }

        //    //yarn dyeing
        //    var totgc = [];
        //    for (var e = 0; e < PlanYarnDyeingSave.length; e++) {
        //        if (PlanYarnDyeingSave[e].CompSlNo == CompSlNo) {
        //            var gid = PlanYarnDyeingSave[e].Garment_ColorID;
        //            var totalqty = 0;
        //            for (var q = 0; q < PlanCompFabricDetSave.length; q++) {
        //                if (PlanCompFabricDetSave[q].CompSlNo == CompSlNo && PlanCompFabricDetSave[q].ColorID == gid) {

        //                    var qty = PlanCompFabricDetSave[q].Weight;
        //                    totalqty = totalqty + parseFloat(qty);
        //                }
        //            }
        //            var bcqty = 0;
        //            for (var w = 0; w < PlanCompFabricDetSave.length; w++) {
        //                if (PlanCompFabricDetSave[w].CompSlNo == CompSlNo && PlanCompFabricDetSave[w].ColorID == gid) {
        //                    var qty = PlanCompFabricDetSave[w].BColorPQty;
        //                    bcqty = bcqty + parseFloat(qty);
        //                }
        //            }
        //            var finqty = 0;
        //            for (var p = 0; p < PlanCompFabricDetSave.length; p++) {
        //                if (PlanCompFabricDetSave[p].CompSlNo == CompSlNo && PlanCompFabricDetSave[p].ColorID == gid) {

        //                    var qty = PlanCompFabricDetSave[p].FColorPQty;
        //                    finqty = finqty + parseFloat(qty);
        //                }
        //            }

        //            var totclrqty = parseFloat(bcqty) + parseFloat(finqty);

        //            var tot = parseFloat(totalqty - totclrqty);
        //            tot = tot.toFixed(3);
        //            var rt = {
        //                wt: tot,
        //                sl: PlanYarnDyeingSave[e].SlNo,
        //                Ysl: PlanYarnDyeingSave[e].YDSlNo,
        //                Cmpsl: PlanYarnDyeingSave[e].CompSlNo
        //            };
        //            totgc.push(rt);


        //        }
        //    }
        //    if (totgc.length > 0) {
        //        for (var t = 0; t < PlanYarnDet.length; t++) {
        //            if (PlanYarnDet[t].Dyeing_Req == true) {
        //                var Percnt = PlanYarnDet[t].Knit_In_Per;

        //                for (var p = 0; p < totgc.length; p++) {
        //                    if (totgc[p].Cmpsl == PlanYarnDet[t].CompSno && totgc[p].Ysl == PlanYarnDet[t].YSlNo) {
        //                        var g = totgc[p].wt;
        //                        totgc[p].wt = parseFloat((Percnt * g) / 100).toFixed(3);
        //                    }
        //                }
        //            }
        //        }

        //        for (var m = 0; m < totgc.length; m++) {
        //            var cm = totgc[m].Cmpsl;
        //            var ysl = totgc[m].Ysl;
        //            var sl = totgc[m].sl;
        //            for (var x = 0; x < PlanYarnDyeingSave.length; x++) {
        //                if (PlanYarnDyeingSave[x].CompSlNo == cm && PlanYarnDyeingSave[x].YDSlNo == ysl && PlanYarnDyeingSave[x].SlNo == sl) {
        //                    PlanYarnDyeingSave[x].ActWeight = totgc[m].wt;
        //                    PlanYarnDyeingSave[x].GWeight = totgc[m].wt;
        //                    var pr = PlanYarnDyeingSave[x].Qty_Per;
        //                    if (pr > 0) {
        //                        var qt = PlanYarnDyeingSave[x].ActWeight;
        //                        var res = parseFloat((pr * qt) / 100).toFixed(3);
        //                        PlanYarnDyeingSave[x].Weight = res;
        //                    }
        //                    else {
        //                        PlanYarnDyeingSave[x].Weight = totgc[m].wt;
        //                    }
        //                }
        //            }
        //        }

        //    }

        //    if (PlanYarnDet.length > 0) {
        //        var sl = PlanYarnDet[0].SlNo;
        //        PlanYarnDyeing = $.grep(PlanYarnDyeingSave, function (e) {
        //            return e.CompSlNo == CompSlNo && e.YDSlNo == sl;
        //        });
        //    }

        //    loadYarnDyeAddTable(PlanYarnDyeing);
        //    loadYarnDyeAddTableSave(PlanYarnDyeingSave);
        //    //Yarn Loss

        //    if (PlanYarnLossSave.length > 0) {
        //        PlanYarnLossSave = $.grep(PlanYarnLossSave, function (e) {
        //            return e.CompSNo != Sno;
        //        });
        //        loadyarnLossSaveTable(PlanYarnLossSave);

        //        PlanYarnLoss = $.grep(PlanYarnLoss, function (e) {
        //            return e.CompSNo != Sno;
        //        });
        //        loadyarnLossTable(PlanYarnLoss);
        //    }

        //ConItemList.sort(function (a, b) {
        //    return a.CPlanSlNo - b.CPlanSlNo;
        //});

        //ConItemListSave.sort(function (a, b) {
        //    return a.CPlanSlNo - b.CPlanSlNo;
        //});

        //    PlanCompFabricDet.sort(function (a, b) {
        //        return a.snumb - b.snumb;
        //    });

        //    PlanCompFabricDetSave.sort(function (a, b) {
        //        return a.snumb - b.snumb;
        //    });

        //    return true;
        //}
        //else if (Colorid == 0 && Sizeid > 0) {
        //    var resof = res / quantity;
        //    resof = resof;
        //    $.each(PlanCompFabricDet, function () {
        //        if (this.SizeId == Sizeid && this.CompSlNo == Sno) {

        //            this.Weight = (resof * this.Prdn_Qty).toFixed(3);
        //            this.ActWeight = (resof * this.Prdn_Qty).toFixed(3);
        //            this.Grammage = ratecal;

        //        }
        //    });
        //    $.each(PlanCompFabricDet, function () {
        //        if (this.CompSlNo == Sno) {
        //            this.BColorPQty = 0;
        //            this.FColorPQty = 0;
        //        }
        //    });
        //    //loadCompFabTable(PlanCompFabricDet);

        //    var fabtable = $('#tCDbody').DataTable();
        //    var fabdata = fabtable.rows().data();

        //    $('input[id=txtPurQty]').each(function (ig) {
        //        if (fabdata[ig].SizeId == Sizeid && fabdata[ig].CompSlNo == Sno) {
        //            var row = $(this).closest('tr');
        //            var de = row.find('#txtfabPrdQty').val();
        //            row.find('#txtfabActwt').val((resof * de).toFixed(3));
        //            row.find('#txtfabwt').val((resof * de).toFixed(3));
        //            row.find('#txtfabgram').val(ratecal);
        //        }
        //    });

        //    $('input[id=txtPurQty]').each(function (ig) {
        //        if (fabdata[ig].CompSlNo == Sno) {
        //            var row = $(this).closest('tr');
        //            row.find('#txtPurQty').val(0);
        //            row.find('#txtFPurQty').val(0);
        //        }
        //    });

        //    var bclrid = 0;
        //    var bclr = '';
        //    $.each(PlanCompFabricDetSave, function () {
        //        if (this.SizeId == Sizeid && this.CompSlNo == Sno) {
        //            this.Weight = (resof * this.Prdn_Qty);
        //            this.ActWeight = (resof * this.Prdn_Qty);
        //            this.Grammage = ratecal;
        //            bclrid = this.BColorID;
        //            bclr = this.Bcolor;
        //        }
        //    });
        //    $.each(PlanCompFabricDetSave, function () {
        //        if (this.CompSlNo == Sno) {
        //            this.BColorPQty = 0;
        //            this.FColorPQty = 0;
        //        }
        //    });
        //    //loadCompFabSaveTable(PlanCompFabricDetSave);

        //}
        //else if (Colorid > 0 && Sizeid == 0) {
        //    var resof = res / quantity;
        //    resof = resof;
        //    $.each(PlanCompFabricDet, function () {
        //        if (this.ColorID == Colorid && this.CompSlNo == Sno) {

        //            this.Weight = (resof * this.Prdn_Qty).toFixed(3);
        //            this.ActWeight = (resof * this.Prdn_Qty).toFixed(3);
        //            this.Grammage = ratecal;

        //        }
        //    });
        //    $.each(PlanCompFabricDet, function () {
        //        if (this.CompSlNo == Sno) {
        //            this.BColorPQty = 0;
        //            this.FColorPQty = 0;
        //        }
        //    });
        //    // loadCompFabTable(PlanCompFabricDet);

        //    var fabtable = $('#tCDbody').DataTable();
        //    var fabdata = fabtable.rows().data();

        //    $('input[id=txtPurQty]').each(function (ig) {
        //        if (fabdata[ig].ColorID == Colorid && fabdata[ig].CompSlNo == Sno) {
        //            var row = $(this).closest('tr');
        //            var de = row.find('#txtfabPrdQty').val();
        //            row.find('#txtfabActwt').val((resof * de).toFixed(3));
        //            row.find('#txtfabwt').val((resof * de).toFixed(3));
        //            row.find('#txtfabgram').val(ratecal);
        //        }
        //    });

        //    $('input[id=txtPurQty]').each(function (ig) {
        //        if (fabdata[ig].CompSlNo == Sno) {
        //            var row = $(this).closest('tr');
        //            row.find('#txtPurQty').val(0);
        //            row.find('#txtFPurQty').val(0);
        //        }
        //    });

        //    var bclrid = 0;
        //    var bclr = '';
        //    $.each(PlanCompFabricDetSave, function () {
        //        if (this.ColorID == Colorid && this.CompSlNo == Sno) {
        //            this.Weight = (resof * this.Prdn_Qty);
        //            this.ActWeight = (resof * this.Prdn_Qty);
        //            this.Grammage = ratecal;
        //            bclrid = this.BColorID;
        //            bclr = this.Bcolor;
        //        }
        //    });
        //    $.each(PlanCompFabricDetSave, function () {
        //        if (this.CompSlNo == Sno) {
        //            this.BColorPQty = 0;
        //            this.FColorPQty = 0;
        //        }
        //    });
        //    //loadCompFabSaveTable(PlanCompFabricDetSave);
        //}
        //else if (Colorid > 0 && Sizeid > 0) {
        //    var fd = 0;
        //    var s = 0;
        //    $.each(PlanCompFabricDet, function () {
        //        if (this.ColorID == Colorid && this.SizeId == Sizeid && this.CompSlNo == Sno) {
        //            this.Weight = res;
        //            this.ActWeight = res;
        //            this.Grammage = ratecal;
        //            fd = this.FabricID;
        //            s = this.CompSlNo;
        //        }
        //    });

        //    $.each(PlanCompFabricDet, function () {
        //        if (this.CompSlNo == Sno) {
        //            this.BColorPQty = 0;
        //            this.FColorPQty = 0;
        //        }
        //    });
        //    //loadCompFabTable(PlanCompFabricDet);

        //    var fabtable = $('#tCDbody').DataTable();
        //    var fabdata = fabtable.rows().data();

        //    $('input[id=txtPurQty]').each(function (ig) {
        //        if (fabdata[ig].ColorID == Colorid && fabdata[ig].SizeId == Sizeid && fabdata[ig].CompSlNo == Sno) {
        //            var row = $(this).closest('tr');
        //            row.find('#txtfabActwt').val(res);
        //            row.find('#txtfabwt').val(res);
        //            row.find('#txtfabgram').val(ratecal);
        //        }
        //    });

        //    $('input[id=txtPurQty]').each(function (ig) {
        //        if (fabdata[ig].CompSlNo == Sno) {
        //            var row = $(this).closest('tr');
        //            row.find('#txtPurQty').val(0);
        //            row.find('#txtFPurQty').val(0);
        //        }
        //    });

        //    var bclrid = 0;
        //    var bclr = '';
        //    $.each(PlanCompFabricDetSave, function () {
        //        if (this.ColorID == Colorid && this.SizeId == Sizeid && this.CompSlNo == Sno) {
        //            this.Weight = res;
        //            this.ActWeight = res;
        //            //this.BColorPQty = 0;
        //            //this.FColorPQty = 0;
        //            this.Grammage = ratecal;
        //            bclrid = this.BColorID;
        //            bclr = this.Bcolor;
        //        }
        //    });
        //    $.each(PlanCompFabricDetSave, function () {
        //        if (this.CompSlNo == Sno) {
        //            this.BColorPQty = 0;
        //            this.FColorPQty = 0;
        //        }
        //    });
        //    //loadCompFabSaveTable(PlanCompFabricDetSave);

        //    $('#txtWeight').val("");
        //    $('#txtActualWeight').val("");

        //}
        //if (PlanLossSave.length > 0) {
        //    var totalamnt = 0;
        //    for (var e = 0; e < PlanLossSave.length; e++) {
        //        if (PlanLossSave[e].CompSNo == Sno) {
        //            var amount = PlanLossSave[e].Loss_Per;
        //            totalamnt = totalamnt + parseFloat(amount);
        //        }
        //    }
        //    var fabres = 0;
        //    if (totalamnt < 0) {
        //        for (var d = 0; d < PlanCompFabricDet.length; d++) {
        //            var sn = PlanCompFabricDet[d].snumb;
        //            var quan = PlanCompFabricDet[d].ActWeight;
        //            var res = -((totalamnt / 100) * quan).toFixed(3);
        //            PlanCompFabricDet[d].Weight = (parseFloat(quan) + parseFloat(res)).toFixed(3);
        //            fabres = (parseFloat(quan) + parseFloat(res)).toFixed(3);

        //            $('input[id=txtPurQty]').each(function (ig) {
        //                if (fabdata[ig].snumb == sn && fabdata[ig].CompSlNo == Sno) {
        //                    var row = $(this).closest('tr');
        //                    row.find('#txtfabwt').val(fabres);

        //                }
        //            });
        //        }
        //        //loadCompFabTable(PlanCompFabricDet);             



        //        for (var d = 0; d < PlanCompFabricDetSave.length; d++) {
        //            if (PlanCompFabricDetSave[d].CompSlNo == Sno) {
        //                var quan = PlanCompFabricDetSave[d].ActWeight;
        //                var res = -((totalamnt / 100) * quan).toFixed(3);
        //                PlanCompFabricDetSave[d].Weight = (parseFloat(quan) + parseFloat(res)).toFixed(3);

        //            }
        //        }
        //        loadCompFabSaveTable(PlanCompFabricDetSave);
        //    }

        //    if (totalamnt > 0) {
        //        for (var d = 0; d < PlanCompFabricDet.length; d++) {
        //            var sn = PlanCompFabricDet[d].snumb;
        //            var quan = PlanCompFabricDet[d].ActWeight;
        //            var res = ((totalamnt / 100) * quan).toFixed(3);
        //            PlanCompFabricDet[d].Weight = (parseFloat(quan) - parseFloat(res)).toFixed(3);
        //            fabres = (parseFloat(quan) - parseFloat(res)).toFixed(3);

        //            $('input[id=txtPurQty]').each(function (ig) {
        //                if (fabdata[ig].snumb == CPlan && fabdata[ig].CompSlNo == Sno) {
        //                    var row = $(this).closest('tr');
        //                    row.find('#txtfabwt').val(fabres);

        //                }
        //            });
        //        }
        //        //loadCompFabTable(PlanCompFabricDet);

        //        for (var d = 0; d < PlanCompFabricDetSave.length; d++) {
        //            if (PlanCompFabricDetSave[d].CompSlNo == Sno) {
        //                var quan = PlanCompFabricDetSave[d].ActWeight;
        //                var res = ((totalamnt / 100) * quan).toFixed(3);
        //                PlanCompFabricDetSave[d].Weight = (parseFloat(quan) - parseFloat(res)).toFixed(3);

        //            }
        //        }
        //        loadCompFabSaveTable(PlanCompFabricDetSave);
        //    }
        //    if (totalamnt == 0) {
        //        for (var d = 0; d < PlanCompFabricDet.length; d++) {
        //            var sn = PlanCompFabricDet[d].snumb;
        //            PlanCompFabricDet[d].Weight = PlanCompFabricDet[d].ActWeight;

        //            fabres = PlanCompFabricDet[d].ActWeight;

        //            $('input[id=txtPurQty]').each(function (ig) {
        //                if (fabdata[ig].snumb == CPlan && fabdata[ig].CompSlNo == Sno) {
        //                    var row = $(this).closest('tr');
        //                    row.find('#txtfabwt').val(fabres);

        //                }
        //            });
        //        }
        //        //loadCompFabTable(PlanCompFabricDet);

        //        for (var d = 0; d < PlanCompFabricDetSave.length; d++) {
        //            if (PlanCompFabricDetSave[d].CompSlNo == Sno) {

        //                PlanCompFabricDetSave[d].Weight = PlanCompFabricDetSave[d].ActWeight;

        //            }
        //        }
        //        loadCompFabSaveTable(PlanCompFabricDetSave);
        //    }
        //    totwght();

        //}


        //yarn
        //var result = [];
        //$.each(PlanCompFabricDet, function (i, e) {
        //    var matchingItems = $.grep(result, function (item) {
        //        return item.BColorID === e.BColorID;
        //    });
        //    if (matchingItems.length === 0) {
        //        result.push(e);
        //    }
        //});



        //if (result.length > 0) {
        //    //PlanYarnSave = [];
        //    PlanYarn = [];

        //    PlanYarnSave = jQuery.grep(PlanYarnSave, function (value) {
        //        return value.SlNo != CompSlNo;
        //    });
        //    //PlanYarnSave = jQuery.grep(yarnlist, function (value) {
        //    //    return value.FabricID != fd;
        //    //});

        //    var Cs = result[0].CompSlNo;
        //    var ComponentId = 0;
        //    var Component = '';
        //    for (var t = 0; t < compList.length; t++) {
        //        if (compList[t].CompSlNo == Cs) {
        //            ComponentId = compList[t].ComponentID;
        //            Component = compList[t].ComponentName;
        //        }
        //    }

        //    //if (Mod != 0) {
        //    //    PlanYarnSave = $.grep(PlanYarnSave, function (e) {
        //    //        return e.SlNo != CompSlNo;
        //    //    });
        //    //}
        //    for (var j = 0; j < result.length; j++) {


        //        if (PlanYarn.length == 0) {
        //            leng = 1;

        //        }
        //        else {
        //            leng++;

        //        }
        //        var bd = 0;
        //        bd = result[j].BColorID;
        //        var snumb = result[j].snumb;
        //        var csln = result[j].CompSlNo;
        //        var totalqty = 0;
        //        for (var u = 0; u < PlanCompFabricDetSave.length; u++) {
        //            if (PlanCompFabricDetSave[u].BColorID == bd && PlanCompFabricDetSave[u].CompSlNo == csln) {

        //                var qty = PlanCompFabricDetSave[u].Weight;
        //                totalqty = totalqty + parseFloat(qty);
        //            }
        //        }


        //        var bcqty = 0;
        //        for (var r = 0; r < PlanCompFabricDetSave.length; r++) {
        //            if (PlanCompFabricDetSave[r].BColorID == bd && PlanCompFabricDetSave[r].CompSlNo == s) {

        //                var qty = PlanCompFabricDetSave[r].BColorPQty;
        //                bcqty = bcqty + parseFloat(qty);
        //            }
        //        }


        //        var finqty = 0;
        //        for (var n = 0; n < PlanCompFabricDetSave.length; n++) {
        //            if (PlanCompFabricDetSave[n].BColorID == bd && PlanCompFabricDetSave[n].CompSlNo == s) {

        //                var qty = PlanCompFabricDetSave[n].FColorPQty;
        //                finqty = finqty + parseFloat(qty);
        //            }
        //        }


        //        var totclrqty = parseFloat(bcqty) + parseFloat(finqty);

        //        //for (var w = 0; w < PlanCompFabricDet.length; w++) {
        //        //    if (PlanCompFabricDet[w].BColorID == bd && PlanCompFabricDet[w].snumb == sno) {

        //        totalqty = totalqty - totclrqty;
        //        totalqty = totalqty.toFixed(3);
        //        //    }
        //        //}

        //        var yarnlistobj = {
        //            PlanId: 0,
        //            Fabric: result[j].Fabric,
        //            FabricID: result[j].FabricID,
        //            Fabric_ColorId: result[j].BColorID,
        //            Fabric_Weight: totalqty,
        //            Fabric_type: result[j].type,//result[j].FabricType,
        //            EntryDate: new Date($('#txtEntryDate').val()),
        //            BColor: result[j].Bcolor,
        //            SlNo: result[j].CompSlNo,
        //            YPlanmasID: 0,
        //            YSlno: leng,
        //            ComponentId: ComponentId,
        //            Component: Component
        //        }




        //        PlanYarnSave.push(yarnlistobj);
        //        PlanYarn.push(yarnlistobj);
        //    }
        //}

        ////loadYarndetTab
        //PlanYarnSave = jQuery.grep(PlanYarnSave, function (value) {
        //    return value.Fabric_Weight != 0;
        //});
        //loadYarnSavedetTab(PlanYarnSave);


        //var ctry = [];
        //ctry = PlanYarnSave;
        //ctry = $.grep(ctry, function (e) {
        //    if (e.SlNo == s) {
        //        return e;
        //    }
        //});
        //PlanYarn = ctry;

        //loadYarndetTab(PlanYarn);


        //var totalamnt = 0;
        //for (var e = 0; e < PlanCompFabricDet.length; e++) {
        //    if (PlanCompFabricDet[e].CompSlNo == Sno && PlanCompFabricDet[e].Bcolor == bclr) {
        //        var amount = PlanCompFabricDet[e].Weight;
        //        totalamnt = totalamnt + parseFloat(amount);
        //    }
        //}

        //totalamnt = totalamnt.toFixed(3);
        //for (var e = 0; e < PlanYarnSave.length; e++) {
        //    if (PlanYarnSave[e].SlNo == Sno && PlanYarnSave[e].BColor == bclr) {
        //        PlanYarnSave[e].Fabric_Weight = (totalamnt);
        //    }
        //}
        //loadYarnSavedetTab(PlanYarnSave);


        //PlanYarn = $.grep(PlanYarnSave, function (e) {
        //    return e.SlNo == Sno;
        //});
        //loadYarndetTab(PlanYarn);

        //  totwght();

        //Yarndet

        //if (PlanYarnDetSave.length > 0) {


        //    var ys = PlanYarn[0].YSlno;

        //    for (var b = 0; b < PlanYarnSave.length; b++) {
        //        if (PlanYarnSave[b].SlNo == CompSlNo) {
        //            var pysl = PlanYarnSave[b].YSlno;
        //            var cmpsl = PlanYarnSave[b].SlNo;
        //            var wgt = PlanYarnSave[b].Fabric_Weight;
        //            var bcid = PlanYarnSave[b].Fabric_ColorId;

        //            for (var m = 0; m < PlanYarnDetSave.length; m++) {
        //                if (PlanYarnDetSave[m].CompSno == cmpsl) {
        //                    var s = PlanYarnDetSave[m].SlNo;
        //                    if (PlanYarnDetSave[m].BaseColorID == bcid) {
        //                        YsBp = 1;
        //                        var pr = PlanYarnDetSave[m].Knit_In_Per;
        //                        var re = parseFloat((pr * wgt) / 100);
        //                        re = re.toFixed(3);
        //                        PlanYarnDetSave[m].Knit_In_Qty = re;
        //                        PlanYarnDetSave[m].Knit_In_ActQty = re;
        //                        PlanYarnDetSave[m].YSlNo = pysl;
        //                        PlanYarnDetSave[m].SlNo = s;
        //                        //PlanYarnDetSave[m].FabricID = FabricId;
        //                    }

        //                }
        //            }
        //        }
        //    }
        //    PlanYarnDet = $.grep(PlanYarnDetSave, function (e) {
        //        return e.CompSno == CompSlNo && e.YSlNo == ys;
        //    });
        //    Loadsepyarn(PlanYarnDet);
        //    LoadsepSaveyarn(PlanYarnDetSave);
        //}

        //if (PlanYarnDetSave.length > 0) {


        //    for (var b = 0; b < PlanYarnSave.length; b++) {
        //        var pysl = PlanYarnSave[b].YSlno;
        //        var cmpsl = PlanYarnSave[b].SlNo;
        //        var wgt = PlanYarnSave[b].Fabric_Weight;
        //        for (var m = 0; m < PlanYarnDetSave.length; m++) {
        //            if (PlanYarnDetSave[m].CompSno == cmpsl && PlanYarnDetSave[m].YSlNo == pysl) {
        //                var sl = PlanYarnDetSave[m].SlNo;
        //                var pr = PlanYarnDetSave[m].Knit_In_Per;
        //                var re = parseFloat((pr * wgt) / 100);
        //                re = re.toFixed(3);
        //                PlanYarnDetSave[m].Knit_In_Qty = re;
        //                PlanYarnDetSave[m].Knit_In_ActQty = re;

        //            }
        //        }
        //    }
        //    PlanYarnDet = $.grep(PlanYarnDetSave, function (e) {
        //        return e.CompSno == CompSlNo;
        //    });
        //    Loadsepyarn(PlanYarnDet);
        //    LoadsepSaveyarn(PlanYarnDetSave);


        //}

        //Yarn Dyeing
        //var totgc = [];
        //for (var e = 0; e < PlanYarnDyeingSave.length; e++) {
        //    if (PlanYarnDyeingSave[e].CompSlNo == CompSlNo) {
        //        var gid = PlanYarnDyeingSave[e].Garment_ColorID;
        //        var totalqty = 0;
        //        for (var q = 0; q < PlanCompFabricDetSave.length; q++) {
        //            if (PlanCompFabricDetSave[q].CompSlNo == CompSlNo && PlanCompFabricDetSave[q].ColorID == gid) {

        //                var qty = PlanCompFabricDetSave[q].Weight;
        //                totalqty = totalqty + parseFloat(qty);
        //            }
        //        }
        //        var bcqty = 0;
        //        for (var w = 0; w < PlanCompFabricDetSave.length; w++) {
        //            if (PlanCompFabricDetSave[w].CompSlNo == CompSlNo && PlanCompFabricDetSave[w].ColorID == gid) {
        //                var qty = PlanCompFabricDetSave[w].BColorPQty;
        //                bcqty = bcqty + parseFloat(qty);
        //            }
        //        }
        //        var finqty = 0;
        //        for (var p = 0; p < PlanCompFabricDetSave.length; p++) {
        //            if (PlanCompFabricDetSave[p].CompSlNo == CompSlNo && PlanCompFabricDetSave[p].ColorID == gid) {

        //                var qty = PlanCompFabricDetSave[p].FColorPQty;
        //                finqty = finqty + parseFloat(qty);
        //            }
        //        }

        //        var totclrqty = parseFloat(bcqty) + parseFloat(finqty);

        //        var tot = parseFloat(totalqty - totclrqty);
        //        tot = tot.toFixed(3);
        //        var rt = {
        //            wt: tot,
        //            sl: PlanYarnDyeingSave[e].SlNo,
        //            Ysl: PlanYarnDyeingSave[e].YDSlNo,
        //            Cmpsl: PlanYarnDyeingSave[e].CompSlNo
        //        };
        //        totgc.push(rt);
        //    }
        //}

        //if (totgc.length > 0) {
        //    for (var t = 0; t < PlanYarnDet.length; t++) {
        //        if (PlanYarnDet[t].Dyeing_Req == true) {
        //            var Percnt = PlanYarnDet[t].Knit_In_Per;

        //            for (var p = 0; p < totgc.length; p++) {
        //                if (totgc[p].Cmpsl == PlanYarnDet[t].CompSno && totgc[p].Ysl == PlanYarnDet[t].YSlNo) {
        //                    var g = totgc[p].wt;
        //                    totgc[p].wt = parseFloat((Percnt * g) / 100).toFixed(3);
        //                }
        //            }
        //        }
        //    }
        //    for (var m = 0; m < totgc.length; m++) {
        //        var cm = totgc[m].Cmpsl;
        //        var ysl = totgc[m].Ysl;
        //        var sl = totgc[m].sl;
        //        for (var x = 0; x < PlanYarnDyeingSave.length; x++) {
        //            if (PlanYarnDyeingSave[x].CompSlNo == cm && PlanYarnDyeingSave[x].YDSlNo == ysl && PlanYarnDyeingSave[x].SlNo == sl) {
        //                PlanYarnDyeingSave[x].ActWeight = totgc[m].wt;
        //                PlanYarnDyeingSave[x].GWeight = totgc[m].wt;
        //                var pr = PlanYarnDyeingSave[x].Qty_Per;
        //                if (pr > 0) {
        //                    var qt = PlanYarnDyeingSave[x].ActWeight;
        //                    var res = parseFloat((pr * qt) / 100).toFixed(3);
        //                    PlanYarnDyeingSave[x].Weight = res;
        //                }
        //                else {
        //                    PlanYarnDyeingSave[x].Weight = totgc[m].wt;
        //                }
        //            }
        //        }
        //    }
        //}

        //if (PlanYarnDet.length > 0) {
        //    var sl = PlanYarnDet[0].SlNo;
        //    PlanYarnDyeing = $.grep(PlanYarnDyeingSave, function (e) {
        //        return e.CompSlNo == CompSlNo && e.YDSlNo == sl;
        //    });
        //}

        //loadYarnDyeAddTable(PlanYarnDyeing);
        //loadYarnDyeAddTableSave(PlanYarnDyeingSave);


        ////Yarn Loss

        //if (PlanYarnLossSave.length > 0) {
        //    PlanYarnLossSave = $.grep(PlanYarnLossSave, function (e) {
        //        return e.CompSNo != Sno;
        //    });
        //    loadyarnLossSaveTable(PlanYarnLossSave);

        //    PlanYarnLoss = $.grep(PlanYarnLoss, function (e) {
        //        return e.CompSNo != Sno;
        //    });
        //    loadyarnLossTable(PlanYarnLoss);
        //}



        ConItemList.sort(function (a, b) {
            return a.CPlanSlNo - b.CPlanSlNo;
        });

        ConItemListSave.sort(function (a, b) {
            return a.CPlanSlNo - b.CPlanSlNo;
        });

        //PlanCompFabricDet.sort(function (a, b) {
        //    return a.snumb - b.snumb;
        //});

        //PlanCompFabricDetSave.sort(function (a, b) {
        //    return a.snumb - b.snumb;
        //});

        //var rows = $("#tCPIbody").dataTable().fnGetNodes();
        //var dtTable = $('#tCPIbody').DataTable();
        //for (var i = 0; i < rows.length; i++) {
        //    var sn = dtTable.cells({ row: i, column: 0 }).data()[0];
        //    $('input[id=txtGram]').each(function () {
        //        if (sn == CPlan && $(this).val() == Val) {
        //            var row = $(this).closest('tr');
        //            var num = row.find('#txtGram').val();
        //            row.find('#txtGram').focus().val('').val(num);
        //            return true;
        //        }
        //    });
        //}
        totconwght();
    });

    $(document).on('keyup', '.loadpqty', function (e) {
        debugger;

        //var table = $('#tCDbody').DataTable();
        //var s = table.row($(this).parents('tr')).data()["CompSlNo"];
        //var sno = table.row($(this).parents('tr')).data()["snumb"];
        //var bc = table.row($(this).parents('tr')).data()["BColorID"];
        //var finclrqty = table.row($(this).parents('tr')).data()["FColorPQty"];
        //var wt = table.row($(this).parents('tr')).data()["Weight"];
        //var fq = table.row($(this).parents('tr')).data()["FColorPQty"];
        //var fd = table.row($(this).parents('tr')).data()["FabricID"];
        //var gm = table.row($(this).parents('tr')).data()["Grammage"];


        rowindex = $(this).closest('tr').index();
        var val = $(this).val();
        Fabindex;
        indexforfabfill = Fabindex;
        fabfillvar = 'BCQT';

        var currentrow = PlanCompFabricDet.slice(rowindex);
        var s = currentrow[0].CompSlNo;
        var sno = currentrow[0].snumb;
        var bc = currentrow[0].BColorID;
        var finclrqty = currentrow[0].FColorPQty;
        var wt = currentrow[0].Weight;
        var fq = currentrow[0].FColorPQty;
        var fd = currentrow[0].FabricID;
        var gm = currentrow[0].Grammage;

        //$.each(PlanCompFabricDet, function () {
        //    if (this.CompSlNo == s && this.snumb == sno) {
        //        this.FGsm = val;

        //    }
        //});

        //$.each(PlanCompFabricDetSave, function () {
        //    if (this.CompSlNo == s && this.snumb == sno) {
        //        this.FGsm = val;

        //    }
        //});



        //var val = $(this).val();

        //Fabindex;
        //indexforfabfill = Fabindex;
        //fabfillvar = 'BCQT';

        var tot = parseFloat(fq) + parseFloat(val);
        //if (type == 'KNITS') {
        if (tot > wt) {
            //alert('Sum of PurQty should not exceed actual weight');
            var msg = 'Sum of Purchase quantity should not exceed actual weight...';
            var flg = 4;
            var mo = 1;
            AlartMessage(msg, flg, mo);
            $.each(PlanCompFabricDet, function () {
                if (this.CompSlNo == s && this.snumb == sno) {
                    this.BColorPQty = 0;

                }
            });
            //loadCompFabTable(PlanCompFabricDet);
            var fabtable = $('#tCDbody').DataTable();
            var fabdata = fabtable.rows().data();

            $('input[id=txtPurQty]').each(function (ig) {
                if (fabdata[ig].snumb == sno && fabdata[ig].CompSlNo == s) {
                    var row = $(this).closest('tr');
                    row.find('#txtPurQty').val(0);

                }
            });
            return true;
        }
        //}
        //else {
        //    if (tot > wt) {
        //        var m = parseFloat(wt) - parseFloat(tot);
        //    }
        //}

        $.each(PlanCompFabricDet, function () {
            if (this.CompSlNo == s && this.snumb == sno) {
                this.BColorPQty = val;

            }
        });

        // loadCompFabTable(PlanCompFabricDet);

        $.each(PlanCompFabricDetSave, function () {
            if (this.CompSlNo == s && this.snumb == sno) {
                this.BColorPQty = val;

            }
        });
        //loadCompFabSaveTable(PlanCompFabricDetSave);

        //var totclrqty = parseFloat(val) + parseFloat(finclrqty);

        var result = [];
        $.each(PlanCompFabricDet, function (i, e) {
            var matchingItems = $.grep(result, function (item) {
                return item.BColorID === e.BColorID;
            });
            if (matchingItems.length === 0) {
                result.push(e);
            }
        });

        //if (result.length > 0) {
        //    //PlanYarnSave = [];

        //    //PlanYarnSave = jQuery.grep(PlanYarnSave, function (value) {
        //    //    return value.FabricID != fd;
        //    //});


        //    PlanYarnSave = jQuery.grep(PlanYarnSave, function (value) {
        //        return value.SlNo != CompSlNo;
        //    });

        //    var Cs = result[0].CompSlNo;
        //    var ComponentId = 0;
        //    var Component = '';
        //    for (var t = 0; t < compList.length; t++) {
        //        if (compList[t].CompSlNo == Cs) {
        //            ComponentId = compList[t].ComponentID;
        //            Component = compList[t].ComponentName;
        //        }
        //    }

        //    //result = jQuery.grep(result, function (value) {
        //    //    return value.Weight == 0;
        //    //});
        //    for (var j = 0; j < result.length; j++) {


        //        if (PlanYarnSave.length == 0) {
        //            leng = 1;

        //        }
        //        else {
        //            leng = PlanYarnSave.length + 1;

        //        }

        //        var bd = result[j].BColorID;
        //        var snumb = result[j].snumb;
        //        var csln = result[j].CompSlNo;

        //        if (type == 'KNITS') {
        //            var totalqty = 0;
        //            for (var w = 0; w < PlanCompFabricDetSave.length; w++) {
        //                if (PlanCompFabricDetSave[w].BColorID == bd && PlanCompFabricDetSave[w].CompSlNo == csln) {

        //                    var qty = PlanCompFabricDetSave[w].Weight;
        //                    totalqty = totalqty + parseFloat(qty);
        //                }
        //            }

        //            var bcqty = 0;
        //            for (var w = 0; w < PlanCompFabricDetSave.length; w++) {
        //                if (PlanCompFabricDetSave[w].BColorID == bd && PlanCompFabricDetSave[w].CompSlNo == csln) {

        //                    var qty = PlanCompFabricDetSave[w].BColorPQty;
        //                    bcqty = bcqty + parseFloat(qty);
        //                }
        //            }


        //            var finqty = 0;
        //            for (var w = 0; w < PlanCompFabricDetSave.length; w++) {
        //                if (PlanCompFabricDetSave[w].BColorID == bd && PlanCompFabricDetSave[w].CompSlNo == csln) {

        //                    var qty = PlanCompFabricDetSave[w].FColorPQty;
        //                    finqty = finqty + parseFloat(qty);
        //                }
        //            }


        //            var totclrqty = (parseFloat(bcqty) + parseFloat(finqty)).toFixed(3);

        //            for (var w = 0; w < PlanCompFabricDet.length; w++) {
        //                if (PlanCompFabricDet[w].BColorID == bc && PlanCompFabricDet[w].snumb == sno) {

        //                    totalqty = totalqty - totclrqty;
        //                }
        //            }


        //        }
        //        else {
        //            var respan = [];
        //            for (var w = 0; w < PlanCompFabricDetSave.length; w++) {
        //                if (PlanCompFabricDetSave[w].BColorID == bd && PlanCompFabricDetSave[w].CompSlNo == csln) {
        //                    var bqty = PlanCompFabricDetSave[w].BColorPQty;
        //                    var fqty = PlanCompFabricDetSave[w].FColorPQty;
        //                    var twt = PlanCompFabricDetSave[w].Weight;
        //                    var tot = parseFloat(bqty) + parseFloat(fqty);
        //                    var ww = (parseFloat(twt) - parseFloat(tot)).toFixed(3);
        //                    var gr = PlanCompFabricDetSave[w].Grammage;
        //                    var res = ((ww * gr) / 1000).toFixed(3);
        //                    respan.push(res);
        //                }
        //            }
        //            if (respan.length > 0) {
        //                var totalqty = 0;
        //                for (var w = 0; w < respan.length; w++) {
        //                    var qty = respan[w];
        //                    totalqty = totalqty + parseFloat(qty);
        //                }
        //            }
        //        }
        //        totalqty = totalqty.toFixed(3);
        //        var yarnlistobj = {
        //            PlanId: 0,
        //            Fabric: result[j].Fabric,
        //            FabricID: result[j].FabricID,
        //            Fabric_ColorId: result[j].BColorID,
        //            Fabric_Weight: totalqty,
        //            Fabric_type: result[j].type,//result[j].FabricType,
        //            EntryDate: new Date($('#txtEntryDate').val()),
        //            BColor: result[j].Bcolor,
        //            SlNo: result[j].CompSlNo,
        //            YPlanmasID: 0,
        //            YSlno: leng,
        //            ComponentId: ComponentId,
        //            Component: Component
        //        }



        //        PlanYarnSave.push(yarnlistobj);
        //    }
        //}

        //loadYarndetTab
        //PlanYarnSave = jQuery.grep(PlanYarnSave, function (value) {
        //    return value.Fabric_Weight != 0;
        //});
        //loadYarnSavedetTab(PlanYarnSave);

        //var ctry = [];
        //ctry = PlanYarnSave;
        //ctry = $.grep(ctry, function (e) {
        //    if (e.SlNo == s) {
        //        return e;
        //    }
        //});
        //PlanYarn = ctry;

        //loadYarndetTab(PlanYarn);

        //Yarn Loss

        //if (PlanYarnLossSave.length > 0) {
        //    PlanYarnLossSave = $.grep(PlanYarnLossSave, function (e) {
        //        return e.CompSNo != s;
        //    });
        //    loadyarnLossSaveTable(PlanYarnLossSave);

        //    PlanYarnLoss = $.grep(PlanYarnLoss, function (e) {
        //        return e.CompSNo != s;
        //    });
        //    loadyarnLossTable(PlanYarnLoss);
        //}


        //YarnDet


        //if (PlanYarnDetSave.length > 0) {
        //    PlanYarnDetSave = $.grep(PlanYarnDetSave, function (e) {
        //        return e.CompSno != s;
        //    });
        //    LoadsepSaveyarn(PlanYarnDetSave);

        //    PlanYarnDet = $.grep(PlanYarnDet, function (e) {
        //        return e.CompSno != s;
        //    });
        //    Loadsepyarn(PlanYarnDet);
        //}


        //Dyeing

        //if (PlanYarnDyeingSave.length > 0) {
        //    PlanYarnDyeingSave = $.grep(PlanYarnDyeingSave, function (e) {
        //        return e.CompSlNo != s;
        //    });
        //    loadYarnDyeAddTableSave(PlanYarnDyeingSave);

        //    PlanYarnDyeing = $.grep(PlanYarnDyeing, function (e) {
        //        return e.CompSlNo != s;
        //    });
        //    loadYarnDyeAddTable(PlanYarnDyeing);
        //}
        var rows = $("#tCDbody").dataTable().fnGetNodes();
        var dtTable = $('#tCDbody').DataTable();
        for (var i = 0; i < rows.length; i++) {
            var sn = dtTable.cells({ row: i, column: 0 }).data()[0];
            $('input[id=txtPurQty]').each(function () {
                if (sn == sno && $(this).val() == val) {
                    var row = $(this).closest('tr');
                    var num = row.find('#txtPurQty').val();
                    row.find('#txtPurQty').focus().val('').val(num);
                    return true;
                }
            });
        }
    });

    $(document).on('keyup', '.loadfcpqty', function (e) {
        debugger;

        //var table = $('#tCDbody').DataTable();
        //var s = table.row($(this).parents('tr')).data()["CompSlNo"];
        //var sno = table.row($(this).parents('tr')).data()["snumb"];
        //var wt = table.row($(this).parents('tr')).data()["Weight"];
        //var bq = table.row($(this).parents('tr')).data()["BColorPQty"];
        //var bclrqty = table.row($(this).parents('tr')).data()["BColorPQty"];
        //var fd = table.row($(this).parents('tr')).data()["FabricID"];
        //var bc = table.row($(this).parents('tr')).data()["BColorID"];

        //var val = $(this).val();



        rowindex = $(this).closest('tr').index();
        var val = $(this).val();
        Fabindex;
        indexforfabfill = Fabindex;
        fabfillvar = 'FIQT';

        var currentrow = PlanCompFabricDet.slice(rowindex);
        var s = currentrow[0].CompSlNo;
        var sno = currentrow[0].snumb;
        var bc = currentrow[0].BColorID;
        var bclrqty = currentrow[0].BColorPQty;
        var wt = currentrow[0].Weight;
        var bq = currentrow[0].BColorPQty;
        var fd = currentrow[0].FabricID;
        var gm = currentrow[0].Grammage;


        //Fabindex;
        //indexforfabfill = Fabindex;
        //fabfillvar = 'FIQT';

        var tot = parseFloat(bq) + parseFloat(val);
        if (tot > wt) {
            //alert('Sum of PurQty should not exceed actual weight');
            var msg = 'Sum of PurQty should not exceed actual weight...';
            var flg = 4;
            var mo = 1;
            AlartMessage(msg, flg, mo);
            $.each(PlanCompFabricDet, function () {
                if (this.CompSlNo == s && this.snumb == sno) {
                    this.FColorPQty = 0;

                }
            });
            //loadCompFabTable(PlanCompFabricDet);
            var fabtable = $('#tCDbody').DataTable();
            var fabdata = fabtable.rows().data();

            $('input[id=txtPurQty]').each(function (ig) {
                if (fabdata[ig].snumb == sno && fabdata[ig].CompSlNo == s) {
                    var row = $(this).closest('tr');
                    row.find('#txtFPurQty').val(0);

                }
            });
            return true;
        }

        $.each(PlanCompFabricDet, function () {
            if (this.CompSlNo == s && this.snumb == sno) {
                this.FColorPQty = val;

            }
        });
        //loadCompFabTable(PlanCompFabricDet);
        $.each(PlanCompFabricDetSave, function () {
            if (this.CompSlNo == s && this.snumb == sno) {
                this.FColorPQty = val;

            }
        });
        // loadCompFabSaveTable(PlanCompFabricDetSave);



        var result = [];
        $.each(PlanCompFabricDet, function (i, e) {
            var matchingItems = $.grep(result, function (item) {
                return item.BColorID === e.BColorID;
            });
            if (matchingItems.length === 0) {
                result.push(e);
            }
        });

        var ty = PlanCompFabricDet[0].type;
        //if (result.length > 0) {



        //    PlanYarnSave = jQuery.grep(PlanYarnSave, function (value) {
        //        return value.SlNo != CompSlNo;
        //    });

        //    var Cs = result[0].CompSlNo;
        //    var ComponentId = 0;
        //    var Component = '';
        //    for (var t = 0; t < compList.length; t++) {
        //        if (compList[t].CompSlNo == Cs) {
        //            ComponentId = compList[t].ComponentID;
        //            Component = compList[t].ComponentName;
        //        }
        //    }


        //    for (var j = 0; j < result.length; j++) {


        //        if (PlanYarnSave.length == 0) {
        //            leng = 1;

        //        }
        //        else {
        //            leng = PlanYarnSave.length + 1;

        //        }

        //        var bd = result[j].BColorID;
        //        var snumb = result[j].snumb;
        //        var csln = result[j].CompSlNo;
        //        if (type == 'KNITS') {
        //            var totalqty = 0;
        //            for (var w = 0; w < PlanCompFabricDetSave.length; w++) {
        //                if (PlanCompFabricDetSave[w].BColorID == bd && PlanCompFabricDetSave[w].CompSlNo == csln) {

        //                    var qty = PlanCompFabricDetSave[w].Weight;
        //                    totalqty = totalqty + parseFloat(qty);
        //                }
        //            }

        //            var bcqty = 0;
        //            for (var w = 0; w < PlanCompFabricDetSave.length; w++) {
        //                if (PlanCompFabricDetSave[w].BColorID == bd && PlanCompFabricDetSave[w].CompSlNo == csln) {

        //                    var qty = PlanCompFabricDetSave[w].BColorPQty;
        //                    bcqty = bcqty + parseFloat(qty);
        //                }
        //            }


        //            var finqty = 0;
        //            for (var w = 0; w < PlanCompFabricDetSave.length; w++) {
        //                if (PlanCompFabricDetSave[w].BColorID == bd && PlanCompFabricDetSave[w].CompSlNo == csln) {

        //                    var qty = PlanCompFabricDetSave[w].FColorPQty;
        //                    finqty = finqty + parseFloat(qty);
        //                }
        //            }


        //            var totclrqty = (parseFloat(bcqty) + parseFloat(finqty)).toFixed(3);

        //            for (var w = 0; w < PlanCompFabricDet.length; w++) {
        //                if (PlanCompFabricDet[w].BColorID == bc && PlanCompFabricDet[w].snumb == sno) {

        //                    totalqty = totalqty - totclrqty;
        //                }
        //            }
        //        }
        //        else {
        //            var respan = [];
        //            for (var w = 0; w < PlanCompFabricDetSave.length; w++) {
        //                if (PlanCompFabricDetSave[w].BColorID == bd && PlanCompFabricDetSave[w].CompSlNo == csln) {
        //                    var bqty = PlanCompFabricDetSave[w].BColorPQty;
        //                    var fqty = PlanCompFabricDetSave[w].FColorPQty;
        //                    var twt = PlanCompFabricDetSave[w].Weight;
        //                    var tot = parseFloat(bqty) + parseFloat(fqty);
        //                    var ww = (parseFloat(twt) - parseFloat(tot)).toFixed(3);
        //                    var gr = PlanCompFabricDetSave[w].Grammage;
        //                    var res = ((ww * gr) / 1000).toFixed(3);
        //                    respan.push(res);
        //                }
        //            }
        //            if (respan.length > 0) {
        //                var totalqty = 0;
        //                for (var w = 0; w < respan.length; w++) {
        //                    var qty = respan[w];
        //                    totalqty = totalqty + parseFloat(qty);
        //                }
        //            }
        //        }

        //        totalqty = totalqty.toFixed(3);
        //        var yarnlistobj = {
        //            PlanId: 0,
        //            Fabric: result[j].Fabric,
        //            FabricID: result[j].FabricID,
        //            Fabric_ColorId: result[j].BColorID,
        //            Fabric_Weight: totalqty,
        //            Fabric_type: result[j].type,//result[j].FabricType,
        //            EntryDate: new Date($('#txtEntryDate').val()),
        //            BColor: result[j].Bcolor,
        //            SlNo: result[j].CompSlNo,
        //            YPlanmasID: 0,
        //            YSlno: leng,
        //            ComponentId: ComponentId,
        //            Component: Component
        //        }



        //        PlanYarnSave.push(yarnlistobj);
        //    }
        //}



        //Yarn Loss

        //if (PlanYarnLossSave.length > 0) {
        //    PlanYarnLossSave = $.grep(PlanYarnLossSave, function (e) {
        //        return e.CompSNo != s;
        //    });
        //    loadyarnLossSaveTable(PlanYarnLossSave);

        //    PlanYarnLoss = $.grep(PlanYarnLoss, function (e) {
        //        return e.CompSNo != s;
        //    });
        //    loadyarnLossTable(PlanYarnLoss);
        //}


        ////loadYarndetTab
        //PlanYarnSave = jQuery.grep(PlanYarnSave, function (value) {
        //    return value.Fabric_Weight != 0;
        //});
        //loadYarnSavedetTab(PlanYarnSave);

        //var ctry = [];
        //ctry = PlanYarnSave;
        //ctry = $.grep(ctry, function (e) {
        //    if (e.SlNo == s) {
        //        return e;
        //    }
        //});
        //PlanYarn = ctry;

        //loadYarndetTab(PlanYarn);

        var rows = $("#tCDbody").dataTable().fnGetNodes();
        var dtTable = $('#tCDbody').DataTable();
        for (var i = 0; i < rows.length; i++) {
            var sn = dtTable.cells({ row: i, column: 0 }).data()[0];
            $('input[id=txtFPurQty]').each(function () {
                if (sn == sno && $(this).val() == val) {
                    var row = $(this).closest('tr');
                    var num = row.find('#txtFPurQty').val();
                    row.find('#txtFPurQty').focus().val('').val(num);
                    return true;
                }
            });
        }


        //if (PlanYarnDetSave.length > 0) {
        //    var ys = PlanYarn[0].YSlno;
        //    PlanYarnDetSave = jQuery.grep(PlanYarnDetSave, function (e) {
        //        return e.CompSno != CompSlNo && e.YSlNo != ys;
        //    });
        //    PlanYarnDet = jQuery.grep(PlanYarnDet, function (e) {
        //        return e.CompSno != CompSlNo && e.YSlNo != ys;
        //    });
        //    Loadsepyarn(PlanYarnDet);
        //    LoadsepSaveyarn(PlanYarnDetSave);
        //}

    });

    $(document).on('keyup', '.txtQty_Per', function () {
        debugger;
        rowindex = $(this).closest('tr').index();
        var val = $(this).val();

        var table = $('#tFYDbody').DataTable();
        var s = table.row($(this).parents('tr')).data()["CompSlNo"];
        var ysno = table.row($(this).parents('tr')).data()["YDSlNo"];
        var sno = table.row($(this).parents('tr')).data()["SlNo"];
        var actwt = table.row($(this).parents('tr')).data()["ActWeight"];
        var gid = table.row($(this).parents('tr')).data()["Garment_ColorID"];

        var dye = -1;
        $.each(PlanYarnDet, function () {
            if (this.CompSno == s && this.SlNo == ysno) {
                dye = this.Dyeing_Req;
            }
        });
        if (dye == 0) {
            //alert('Please check the dye value...');
            var msg = 'Please check the dye value...';
            var flg = 4;
            var mo = 1;
            AlartMessage(msg, flg, mo);
            return true;
        }

        if (actwt == 0) {
            //alert('Garment color is not available for this item...');
            var msg = 'Garment color is not available for this item...';
            var flg = 4;
            var mo = 1;
            AlartMessage(msg, flg, mo);
            $.each(PlanYarnDyeing, function () {
                if (this.CompSlNo == s && this.SlNo == sno) {

                    this.Qty_Per = 0;
                }
            });

            loadYarnDyeAddTable(PlanYarnDyeing);

            return true;
        }

        $.each(PlanYarnDyeing, function () {
            if (this.CompSlNo == s && this.SlNo == sno) {
                this.Weight = wt;
                this.Qty_Per = val;
            }
        });

        var totalamnt = 0;
        for (var e = 0; e < PlanYarnDyeing.length; e++) {
            if (PlanYarnDyeing[e].CompSlNo == s && PlanYarnDyeing[e].YDSlNo == ysno && PlanYarnDyeing[e].Garment_ColorID == gid) {
                var amount = PlanYarnDyeing[e].Qty_Per;
                totalamnt = totalamnt + parseFloat(amount);
            }
        }


        totalamnt = parseFloat(totalamnt).toFixed(2);
        if (totalamnt > 100) {
            //alert('Percentage should not exceed 100...');
            var msg = 'Percentage should not exceed 100...';
            var flg = 4;
            var mo = 1;
            AlartMessage(msg, flg, mo);
            $.each(PlanYarnDyeing, function () {
                if (this.CompSlNo == s && this.SlNo == sno) {
                    this.Weight = this.ActWeight;
                    this.Qty_Per = 0;
                }
            });

            loadYarnDyeAddTable(PlanYarnDyeing);
            return true;
        }
        var wt = parseFloat((val * actwt) / 100);
        wt = wt.toFixed(3);
        if (val == 0) {
            $.each(PlanYarnDyeing, function () {
                if (this.CompSlNo == s && this.SlNo == sno) {
                    this.Weight = this.ActWeight;
                    this.Qty_Per = val;
                }
            });

            loadYarnDyeAddTable(PlanYarnDyeing);

            $.each(PlanYarnDyeingSave, function () {
                if (this.CompSlNo == s && this.SlNo == sno && this.YDSlNo == ysno) {
                    this.Weight = this.ActWeight;
                    this.Qty_Per = val;
                }
            });

            loadYarnDyeAddTableSave(PlanYarnDyeingSave);
            return true;
        }
        $.each(PlanYarnDyeing, function () {
            if (this.CompSlNo == s && this.SlNo == sno) {
                this.Weight = wt;
                this.Qty_Per = val;
            }
        });

        loadYarnDyeAddTable(PlanYarnDyeing);

        $.each(PlanYarnDyeingSave, function () {
            if (this.CompSlNo == s && this.SlNo == sno && this.YDSlNo == ysno) {
                this.Weight = wt;
                this.Qty_Per = val;
            }
        });

        loadYarnDyeAddTableSave(PlanYarnDyeingSave);

        var rows = $("#tFYDbody").dataTable().fnGetNodes();
        var dtTable = $('#tFYDbody').DataTable();
        for (var i = 0; i < rows.length; i++) {
            var sn = dtTable.cells({ row: i, column: 1 }).data()[0];
            $('input[id=txtQty_Per]').each(function () {
                if (sn == sno && $(this).val() == val) {
                    var row = $(this).closest('tr');
                    var num = row.find('#txtQty_Per').val();
                    row.find('#txtQty_Per').focus().val('').val(num);
                    return true;
                }
            });
        }
    });

    ////////////Yarn dyeing Purchase Quantity Validation
    $(document).on('keyup', '.txtPurchase_Qty', function () {

        rowindex = $(this).closest('tr').index();
        var val = $(this).val();

        var table = $('#tFYDbody').DataTable();
        var s = table.row($(this).parents('tr')).data()["CompSlNo"];
        var ysno = table.row($(this).parents('tr')).data()["YDSlNo"];
        var sno = table.row($(this).parents('tr')).data()["SlNo"];
        var actwt = table.row($(this).parents('tr')).data()["ActWeight"];
        var wt = table.row($(this).parents('tr')).data()["Weight"];



        var cwt = parseFloat(val) > parseFloat(val);


        if (parseFloat(val) > parseFloat(wt)) {

            //alert("Purchase Dyeing Quantity Should Not Greater then Actual Weight...");
            var msg = 'Purchase Dyeing Quantity Should Not Greater then Actual Weight...';
            var flg = 4;
            var mo = 1;
            AlartMessage(msg, flg, mo);


            $.each(PlanYarnDyeing, function () {
                if (this.CompSlNo == s && this.SlNo == sno) {
                    this.Weight = wt;
                    this.Purchase_Qty = 0;
                }
            });

            loadYarnDyeAddTable(PlanYarnDyeing);

            $.each(PlanYarnDyeingSave, function () {
                if (this.CompSlNo == s && this.SlNo == sno && this.YDSlNo == ysno) {
                    this.Weight = wt;
                    this.Purchase_Qty = 0;
                }
            });

            loadYarnDyeAddTableSave(PlanYarnDyeingSave);

            return true;
        }


        $.each(PlanYarnDyeing, function () {
            if (this.CompSlNo == s && this.SlNo == sno) {
                this.Weight = wt;
                this.Purchase_Qty = val;
            }
        });

        loadYarnDyeAddTable(PlanYarnDyeing);

        $.each(PlanYarnDyeingSave, function () {
            if (this.CompSlNo == s && this.SlNo == sno && this.YDSlNo == ysno) {
                this.Weight = wt;
                this.Purchase_Qty = val;
            }
        });

        loadYarnDyeAddTableSave(PlanYarnDyeingSave);

    });



    /////////////


    $(document).on('change', '.ddlPColor', function () {

        rowindex = $(this).closest('tr').index();
        var oldind = -1;
        var val = $(this).val();
        var currentrow = PlanCompFabricDet.slice(rowindex);
        var s = currentrow[0].CompSlNo;
        var sno = currentrow[0].snumb;
        var cname = "";
        indexforfabfill = rowindex;
        fabfillvar = 'PRC';
        for (var d = 0; d < PrintColorlist.length; d++) {
            if (PrintColorlist[d].ColorID == val) {
                oldind = d;
                cname = PrintColorlist[d].Color;
            }
        }
        $.each(PlanCompFabricDet, function () {
            if (this.CompSlNo == s && this.snumb == sno) {
                this.PColorID = val;
                this.PColor = cname;

            }
        });

        $.each(PlanCompFabricDetSave, function () {
            if (this.CompSlNo == s && this.snumb == sno) {
                this.PColorID = val;
                this.PColor = cname;
            }
        });
        //array_move(PrintColorlist, oldind, 0)
        loadCompFabSaveTable(PlanCompFabricDetSave);

        //loadFabAddTable(PlanFabricDet);
    });

    $(document).on('keyup', '.loadfgsm', function (e) {
        debugger;
        //var table = $('#tCDbody').DataTable();
        //var s = table.row($(this).parents('tr')).data()["CompSlNo"];
        //var sno = table.row($(this).parents('tr')).data()["snumb"]
        rowindex = $(this).closest('tr').index();
        var val = $(this).val();
        Fabindex;
        indexforfabfill = Fabindex;
        fabfillvar = 'FGSM';

        var currentrow = PlanCompFabricDet.slice(rowindex);
        var s = currentrow[0].CompSlNo;
        var sno = currentrow[0].snumb;
       
        //var val = $(this).val();
        //Fabindex;
        //indexforfabfill = Fabindex;
        //fabfillvar = 'FGSM';

        $.each(PlanCompFabricDet, function () {
            if (this.CompSlNo == s && this.snumb == sno) {
                this.FGsm = val;

            }
        });

        $.each(PlanCompFabricDetSave, function () {
            if (this.CompSlNo == s && this.snumb == sno) {
                this.FGsm = val;

            }
        });
        loadCompFabSaveTable(PlanCompFabricDetSave);

        var rows = $("#tCDbody").dataTable().fnGetNodes();
        var dtTable = $('#tCDbody').DataTable();
        for (var i = 0; i < rows.length; i++) {
            var sn = dtTable.cells({ row: i, column: 0 }).data()[0];
            $('input[id=txtFGsm]').each(function () {
                if (sn == sno && $(this).val() == val) {
                    var row = $(this).closest('tr');
                    var num = row.find('#txtFGsm').val();
                    row.find('#txtFGsm').focus().val('').val(num);
                    return true;
                }
            });
        }
    });

    $(document).on('keyup', '.calcknitgsm', function (e) {
        debugger;
        //var table = $('#tCDbody').DataTable();
        //var s = table.row($(this).parents('tr')).data()["CompSlNo"];
        //var sno = table.row($(this).parents('tr')).data()["snumb"];

        //var val = $(this).val();
        //Fabindex;
        //indexforfabfill = Fabindex;
        //fabfillvar = 'KGSM';

        var val = $(this).val();
        Fabindex;
        indexforfabfill = Fabindex;
        fabfillvar = 'KGSM';

        var currentrow = PlanCompFabricDet.slice(rowindex);
        var s = currentrow[0].CompSlNo;
        var sno = currentrow[0].snumb;

        $.each(PlanCompFabricDet, function () {
            if (this.CompSlNo == s && this.snumb == sno) {
                this.KGsm = val;

            }
        });

        $.each(PlanCompFabricDetSave, function () {
            if (this.CompSlNo == s && this.snumb == sno) {
                this.KGsm = val;

            }
        });
        loadCompFabSaveTable(PlanCompFabricDetSave);

        var rows = $("#tCDbody").dataTable().fnGetNodes();
        var dtTable = $('#tCDbody').DataTable();
        for (var i = 0; i < rows.length; i++) {
            var sn = dtTable.cells({ row: i, column: 0 }).data()[0];
            $('input[id=txtKnitgsm]').each(function () {
                if (sn == sno && $(this).val() == val) {
                    var row = $(this).closest('tr');
                    var num = row.find('#txtKnitgsm').val();
                    row.find('#txtKnitgsm').focus().val('').val(num);
                    return true;
                }
            });
        }
    });
    $(document).on('keyup', '.calclooplen', function (e) {

        //var table = $('#tCDbody').DataTable();
        //var s = table.row($(this).parents('tr')).data()["CompSlNo"];
        //var sno = table.row($(this).parents('tr')).data()["snumb"];

        //var val = $(this).val();
        //Fabindex;
        //indexforfabfill = Fabindex;
        //fabfillvar = 'LOOPLEN';
        var val = $(this).val();
        Fabindex;
        indexforfabfill = Fabindex;
        fabfillvar = 'LOOPLEN';

        var currentrow = PlanCompFabricDet.slice(rowindex);
        var s = currentrow[0].CompSlNo;
        var sno = currentrow[0].snumb;


        $.each(PlanCompFabricDet, function () {
            if (this.CompSlNo == s && this.snumb == sno) {
                this.LoopLen = val;

            }
        });

        $.each(PlanCompFabricDetSave, function () {
            if (this.CompSlNo == s && this.snumb == sno) {
                this.LoopLen = val;

            }
        });
        loadCompFabSaveTable(PlanCompFabricDetSave);

        var rows = $("#tCDbody").dataTable().fnGetNodes();
        var dtTable = $('#tCDbody').DataTable();
        for (var i = 0; i < rows.length; i++) {
            var sn = dtTable.cells({ row: i, column: 0 }).data()[0];
            $('input[id=txtlooplen]').each(function () {
                if (sn == sno && $(this).val() == val) {
                    var row = $(this).closest('tr');
                    var num = row.find('#txtlooplen').val();
                    row.find('#txtlooplen').focus().val('').val(num);
                    return true;
                }
            });
        }
    });

    $(document).on('keyup', '.calcTexture', function (e) {

        //var table = $('#tCDbody').DataTable();
        //var s = table.row($(this).parents('tr')).data()["CompSlNo"];
        //var sno = table.row($(this).parents('tr')).data()["snumb"];

        //var val = $(this).val();
        //Fabindex;
        //indexforfabfill = Fabindex;
        //fabfillvar = 'TEXT';
        var val = $(this).val();
        Fabindex;
        indexforfabfill = Fabindex;
        fabfillvar = 'TEXT';

        var currentrow = PlanCompFabricDet.slice(rowindex);
        var s = currentrow[0].CompSlNo;
        var sno = currentrow[0].snumb;

        $.each(PlanCompFabricDet, function () {
            if (this.CompSlNo == s && this.snumb == sno) {
                this.texture = val;

            }
        });

        $.each(PlanCompFabricDetSave, function () {
            if (this.CompSlNo == s && this.snumb == sno) {
                this.texture = val;

            }
        });
        loadCompFabSaveTable(PlanCompFabricDetSave);

        var rows = $("#tCDbody").dataTable().fnGetNodes();
        var dtTable = $('#tCDbody').DataTable();
        for (var i = 0; i < rows.length; i++) {
            var sn = dtTable.cells({ row: i, column: 0 }).data()[0];
            $('input[id=txtTexture]').each(function () {
                if (sn == sno && $(this).val() == val) {
                    var row = $(this).closest('tr');
                    var num = row.find('#txtTexture').val();
                    row.find('#txtTexture').focus().val('').val(num);
                    return true;
                }
            });
        }
    });

    $(document).on('keyup', '.CalcContent', function (e) {

        //var table = $('#tCDbody').DataTable();
        //var s = table.row($(this).parents('tr')).data()["CompSlNo"];
        //var sno = table.row($(this).parents('tr')).data()["snumb"];

        //var val = $(this).val();
        //Fabindex;
        //indexforfabfill = Fabindex;
        //fabfillvar = 'CONT';
        var val = $(this).val();
        Fabindex;
        indexforfabfill = Fabindex;
        fabfillvar = 'CONT';

        var currentrow = PlanCompFabricDet.slice(rowindex);
        var s = currentrow[0].CompSlNo;
        var sno = currentrow[0].snumb;

        $.each(PlanCompFabricDet, function () {
            if (this.CompSlNo == s && this.snumb == sno) {
                this.content = val;

            }
        });

        $.each(PlanCompFabricDetSave, function () {
            if (this.CompSlNo == s && this.snumb == sno) {
                this.content = val;

            }
        });
        loadCompFabSaveTable(PlanCompFabricDetSave);

        var rows = $("#tCDbody").dataTable().fnGetNodes();
        var dtTable = $('#tCDbody').DataTable();
        for (var i = 0; i < rows.length; i++) {
            var sn = dtTable.cells({ row: i, column: 0 }).data()[0];
            $('input[id=txtContent]').each(function () {
                if (sn == sno && $(this).val() == val) {
                    var row = $(this).closest('tr');
                    var num = row.find('#txtContent').val();
                    row.find('#txtContent').focus().val('').val(num);
                    return true;
                }
            });
        }
    });

    $(document).on('keyup', '.CalcGauge', function (e) {

        //var table = $('#tCDbody').DataTable();
        //var s = table.row($(this).parents('tr')).data()["CompSlNo"];
        //var sno = table.row($(this).parents('tr')).data()["snumb"];

        //var val = $(this).val();
        //Fabindex;
        //indexforfabfill = Fabindex;
        //fabfillvar = 'GUAGE';

        var val = $(this).val();
        Fabindex;
        indexforfabfill = Fabindex;
        fabfillvar = 'GUAGE';

        var currentrow = PlanCompFabricDet.slice(rowindex);
        var s = currentrow[0].CompSlNo;
        var sno = currentrow[0].snumb;

        $.each(PlanCompFabricDet, function () {
            if (this.CompSlNo == s && this.snumb == sno) {
                this.guage = val;

            }
        });

        $.each(PlanCompFabricDetSave, function () {
            if (this.CompSlNo == s && this.snumb == sno) {
                this.guage = val;

            }
        });
        loadCompFabSaveTable(PlanCompFabricDetSave);

        var rows = $("#tCDbody").dataTable().fnGetNodes();
        var dtTable = $('#tCDbody').DataTable();
        for (var i = 0; i < rows.length; i++) {
            var sn = dtTable.cells({ row: i, column: 0 }).data()[0];
            $('input[id=txtGauge]').each(function () {
                if (sn == sno && $(this).val() == val) {
                    var row = $(this).closest('tr');
                    var num = row.find('#txtGauge').val();
                    row.find('#txtGauge').focus().val('').val(num);
                    return true;
                }
            });
        }
    });
    $(document).on('change', '.ddlFColor', function () {

        rowindex = $(this).closest('tr').index();
        var currentrow = PlanCompFabricDet.slice(rowindex);
        var s = currentrow[0].CompSlNo;
        var sno = currentrow[0].snumb;
        var cname = "";
        var oldind = -1;
        var val = $(this).val();
        indexforfabfill = rowindex;
        fabfillvar = 'FIC';
        for (var d = 0; d < FinishColorlist.length; d++) {
            if (FinishColorlist[d].ColorID == val) {
                cname = FinishColorlist[d].Color;
                oldind = d;
            }
        }

        $.each(PlanCompFabricDet, function () {
            if (this.CompSlNo == s && this.snumb == sno) {
                this.FColorID = val;
                this.Fcolor = cname;
            }
        });

        $.each(PlanCompFabricDetSave, function () {
            if (this.CompSlNo == s && this.snumb == sno) {
                this.FColorID = val;
                this.Fcolor = cname;
            }
        });
        loadCompFabSaveTable(PlanCompFabricDetSave);

        CheckfabricStock();

        // array_move(Colorlist, oldind, 0)
        //loadFabAddTable(PlanFabricDet);
    });

    $(document).on('change', '.ddlBColor', function () {
        debugger;
        rowindex = $(this).closest('tr').index();
        var oldind = -1;
        indexforfabfill = rowindex;
        fabfillvar = 'BC';
        var currentrow = PlanCompFabricDet.slice(rowindex);
        var s = currentrow[0].CompSlNo;
        var sno = currentrow[0].snumb;
        var fd = currentrow[0].FabricID;
        var ty = currentrow[0].type;
        var bcl = '';
        var val = $(this).val();
        var bclrqty = currentrow[0].BColorPQty;
        var finclrqty = currentrow[0].FColorPQty;

        for (var d = 0; d < BaseColorlist.length; d++) {
            if (BaseColorlist[d].ColorID == val) {
                bcl = BaseColorlist[d].Color;
                oldind = d;
            }
        }
        $.each(PlanCompFabricDet, function () {
            if (this.CompSlNo == s && this.snumb == sno) {
                this.BColorID = val;
                this.Bcolor = bcl;
            }
        });

        $.each(PlanCompFabricDetSave, function () {
            if (this.CompSlNo == s && this.snumb == sno) {
                this.BColorID = val;
                this.Bcolor = bcl;
            }
        });


        //array_move(BaseColorlist, oldind, 0)
        // loadFabAddTable(PlanFabricDet);

        loadCompFabSaveTable(PlanCompFabricDetSave);
        /// loadCompFabTable(PlanCompFabricDet);
        fillfabrictbl(PlanCompFabricDet);


        var result = [];
        $.each(PlanCompFabricDet, function (i, e) {
            var matchingItems = $.grep(result, function (item) {
                return item.Bcolor === e.Bcolor;
            });
            if (matchingItems.length === 0) {
                result.push(e);
            }
        });

        CheckfabricStock();

        //if (result.length > 0) {
        //    //PlanYarnSave = [];
        //    PlanYarn = [];

        //    PlanYarnSave = jQuery.grep(PlanYarnSave, function (value) {
        //        return value.SlNo != CompSlNo;
        //    });
        //    //PlanYarnSave = jQuery.grep(yarnlist, function (value) {
        //    //    return value.FabricID != fd;
        //    //});

        //    var Cs = result[0].CompSlNo;
        //    var ComponentId = 0;
        //    var Component = '';
        //    for (var t = 0; t < compList.length; t++) {
        //        if (compList[t].CompSlNo == Cs) {
        //            ComponentId = compList[t].ComponentID;
        //            Component = compList[t].ComponentName;
        //        }
        //    }

        //    //if (Mod != 0) {
        //    //    PlanYarnSave = $.grep(PlanYarnSave, function (e) {
        //    //        return e.SlNo != CompSlNo;
        //    //    });
        //    //}
        //    if (ty == "PANELS" || ty == "WOVEN") {
        //        for (var j = 0; j < result.length; j++) {


        //            if (PlanYarn.length == 0) {
        //                leng = 1;

        //            }
        //            else {
        //                leng++;

        //            }
        //            var bd = 0;
        //            bd = result[j].BColorID;
        //            var snumb = result[j].snumb;
        //            var csln = result[j].CompSlNo;
        //            var totalqty = 0;

        //            var respan = [];
        //            for (var w = 0; w < PlanCompFabricDetSave.length; w++) {
        //                if (PlanCompFabricDetSave[w].BColorID == bd && PlanCompFabricDetSave[w].CompSlNo == csln) {
        //                    var bqty = PlanCompFabricDetSave[w].BColorPQty;
        //                    var fqty = PlanCompFabricDetSave[w].FColorPQty;
        //                    var twt = PlanCompFabricDetSave[w].Weight;
        //                    var tot = parseFloat(bqty) + parseFloat(fqty);
        //                    var ww = (parseFloat(twt) - parseFloat(tot)).toFixed(3);
        //                    var gr = PlanCompFabricDetSave[w].Grammage;
        //                    var res = ((ww * gr) / 1000).toFixed(3);
        //                    respan.push(res);
        //                }
        //            }
        //            if (respan.length > 0) {
        //                var totalqty = 0;
        //                for (var w = 0; w < respan.length; w++) {
        //                    var qty = respan[w];
        //                    totalqty = totalqty + parseFloat(qty);
        //                }
        //            }


        //            totalqty = totalqty.toFixed(3);


        //            var yarnlistobj = {
        //                PlanId: 0,
        //                Fabric: result[j].Fabric,
        //                FabricID: result[j].FabricID,
        //                Fabric_ColorId: result[j].BColorID,
        //                Fabric_Weight: totalqty,
        //                Fabric_type: result[j].type,//result[j].FabricType,
        //                EntryDate: new Date($('#txtEntryDate').val()),
        //                BColor: result[j].Bcolor,
        //                SlNo: result[j].CompSlNo,
        //                YPlanmasID: 0,
        //                YSlno: leng,
        //                ComponentId: ComponentId,
        //                Component: Component
        //            }




        //            PlanYarnSave.push(yarnlistobj);
        //            PlanYarn.push(yarnlistobj);
        //        }
        //    }
        //    else {
        //        for (var j = 0; j < result.length; j++) {


        //            if (PlanYarn.length == 0) {
        //                leng = 1;

        //            }
        //            else {
        //                leng++;

        //            }
        //            var bd = 0;
        //            bd = result[j].BColorID;
        //            var snumb = result[j].snumb;
        //            var csln = result[j].CompSlNo;
        //            var totalqty = 0;
        //            for (var u = 0; u < PlanCompFabricDetSave.length; u++) {
        //                if (PlanCompFabricDetSave[u].BColorID == bd && PlanCompFabricDetSave[u].CompSlNo == csln) {

        //                    var qty = PlanCompFabricDetSave[u].Weight;
        //                    totalqty = totalqty + parseFloat(qty);
        //                }
        //            }


        //            var bcqty = 0;
        //            for (var r = 0; r < PlanCompFabricDetSave.length; r++) {
        //                if (PlanCompFabricDetSave[r].BColorID == bd && PlanCompFabricDetSave[r].CompSlNo == s) {

        //                    var qty = PlanCompFabricDetSave[r].BColorPQty;
        //                    bcqty = bcqty + parseFloat(qty);
        //                }
        //            }


        //            var finqty = 0;
        //            for (var n = 0; n < PlanCompFabricDetSave.length; n++) {
        //                if (PlanCompFabricDetSave[n].BColorID == bd && PlanCompFabricDetSave[n].CompSlNo == s) {

        //                    var qty = PlanCompFabricDetSave[n].FColorPQty;
        //                    finqty = finqty + parseFloat(qty);
        //                }
        //            }


        //            var totclrqty = parseFloat(bcqty) + parseFloat(finqty);

        //            //for (var w = 0; w < PlanCompFabricDet.length; w++) {
        //            //    if (PlanCompFabricDet[w].BColorID == bd && PlanCompFabricDet[w].snumb == sno) {

        //            totalqty = totalqty - totclrqty;
        //            totalqty = totalqty.toFixed(3);
        //            //    }
        //            //}

        //            var yarnlistobj = {
        //                PlanId: 0,
        //                Fabric: result[j].Fabric,
        //                FabricID: result[j].FabricID,
        //                Fabric_ColorId: result[j].BColorID,
        //                Fabric_Weight: totalqty,
        //                Fabric_type: result[j].type,//result[j].FabricType,
        //                EntryDate: new Date($('#txtEntryDate').val()),
        //                BColor: result[j].Bcolor,
        //                SlNo: result[j].CompSlNo,
        //                YPlanmasID: 0,
        //                YSlno: leng,
        //                ComponentId: ComponentId,
        //                Component: Component
        //            }




        //            PlanYarnSave.push(yarnlistobj);
        //            PlanYarn.push(yarnlistobj);
        //        }

        //    }
        //}

        //loadYarndetTab
        //PlanYarnSave = jQuery.grep(PlanYarnSave, function (value) {
        //    return value.Fabric_Weight > 0;
        //});
        //PlanYarn = jQuery.grep(PlanYarn, function (value) {
        //    return value.Fabric_Weight > 0;
        //});
        //loadYarnSavedetTab(PlanYarnSave);


        //var ctry = [];
        //ctry = PlanYarnSave;
        //ctry = $.grep(ctry, function (e) {
        //    if (e.SlNo == s) {
        //        return e;
        //    }
        //});
        //PlanYarn = ctry;

        //loadYarndetTab(PlanYarn);

        //if (PlanYarnDetSave.length > 0) {


        //    var ys = PlanYarn[0].YSlno;

        //    for (var b = 0; b < PlanYarnSave.length; b++) {
        //        if (PlanYarnSave[b].SlNo == CompSlNo) {
        //            var pysl = PlanYarnSave[b].YSlno;
        //            var cmpsl = PlanYarnSave[b].SlNo;
        //            var wgt = PlanYarnSave[b].Fabric_Weight;
        //            var bcid = PlanYarnSave[b].Fabric_ColorId;

        //            for (var m = 0; m < PlanYarnDetSave.length; m++) {
        //                if (PlanYarnDetSave[m].CompSno == cmpsl) {
        //                    var s = PlanYarnDetSave[m].SlNo;
        //                    if (PlanYarnDetSave[m].BaseColorID == bcid) {
        //                        YsBp = 1;
        //                        var pr = PlanYarnDetSave[m].Knit_In_Per;
        //                        var re = parseFloat((pr * wgt) / 100);
        //                        re = re.toFixed(3);
        //                        PlanYarnDetSave[m].Knit_In_Qty = re;
        //                        PlanYarnDetSave[m].Knit_In_ActQty = re;
        //                        PlanYarnDetSave[m].YSlNo = pysl;
        //                        PlanYarnDetSave[m].SlNo = s;
        //                        //PlanYarnDetSave[m].FabricID = FabricId;
        //                    }

        //                }
        //            }
        //        }
        //    }
        //    PlanYarnDet = $.grep(PlanYarnDetSave, function (e) {
        //        return e.CompSno == CompSlNo && e.YSlNo == ys;
        //    });
        //    Loadsepyarn(PlanYarnDet);
        //    LoadsepSaveyarn(PlanYarnDetSave);
        //}

        //if (PlanYarnDyeingSave.length > 0) {
        //    PlanYarnDyeing = $.grep(PlanYarnDyeing, function (e) {
        //        return e.YDSlNo != CompSlNo;
        //    });
        //    PlanYarnDyeingSave = $.grep(PlanYarnDyeingSave, function (e) {
        //        return e.YDSlNo != CompSlNo;
        //    });
        //    loadYarnDyeAddTableSave(PlanYarnDyeingSave);
        //    loadYarnDyeAddTable(PlanYarnDyeing);
        //}
    });

    $(document).on('change', '.ddlGSize', function () {

        rowindex = $(this).closest('tr').index();
        var gs = "";//$("#ddlGSize option:selected").text();
        var oldind = -1;
        var val = $(this).val();
        fillvar = 'GYW';
        indexforfill = rowindex;

        var Sizres = [];
        Sizres = $.grep(GreyList, function (r) {
            return r.SizeId == val;
        });

        gs = Sizres[0].Size;
        //for (var x = 0; x < GreyList.length; x++) {
        //    if (GreyList[x].SizeId == val) {
        //        gs = GreyList[x].Size;
        //        oldind = x;
        //    }
        //}
        var currentrow = ConItemList.slice(rowindex);
        var s = currentrow[0].CPlanSlNo;
        var sno = currentrow[0].CompSlNo;
        var Colorid = currentrow[0].ColorID;
        var Sizeid = currentrow[0].SizeId;
        $.each(ConItemList, function () {
            if (this.CPlanSlNo == s && this.CompSlNo == sno) {
                this.GreyWidthID = val;
                this.GreyWidth = gs;

            }
        });


        $.each(ConItemListSave, function () {
            if (this.CPlanSlNo == s && this.CompSlNo == sno) {
                this.GreyWidthID = val;
                this.GreyWidth = gs;

            }
        });
        //array_move(GreyList, oldind, 0);
        //loadAdConTable(ConItemList);
        //loadconSaveTable(ConItemListSave);
        ConsmtnHideCol(type);


        if (Colorid == 0 && Sizeid == 0) {
            $.each(PlanCompFabricDet, function () {
                if (this.CompSlNo == sno) {
                    this.GreyWidthID = val;
                    this.GreyWidth = gs;
                }
            });

            //loadCompFabTable(PlanCompFabricDet);


            var bclrid = 0;
            var bclr = '';
            $.each(PlanCompFabricDetSave, function () {
                if (this.CompSlNo == sno) {
                    this.GreyWidthID = val;
                    this.GreyWidth = gs;
                }
            });
            loadCompFabSaveTable(PlanCompFabricDetSave);
            return true;
        }

        else if (Colorid > 0 && Sizeid == 0) {
            $.each(PlanCompFabricDet, function () {
                if (this.CompSlNo == sno && this.ColorID == Colorid) {
                    this.GreyWidthID = val;
                    this.GreyWidth = gs;
                }
            });

            //loadCompFabTable(PlanCompFabricDet);

            var bclrid = 0;
            var bclr = '';
            $.each(PlanCompFabricDetSave, function () {
                if (this.CompSlNo == sno && this.ColorID == Colorid) {
                    this.GreyWidthID = val;
                    this.GreyWidth = gs;
                }
            });
            loadCompFabSaveTable(PlanCompFabricDetSave);
            return true;
        }
        else if (Colorid == 0 && Sizeid > 0) {
            $.each(PlanCompFabricDet, function () {
                if (this.CompSlNo == sno && this.SizeId == Sizeid) {
                    this.GreyWidthID = val;
                    this.GreyWidth = gs;
                }
            });

            //loadCompFabTable(PlanCompFabricDet);

            var bclrid = 0;
            var bclr = '';
            $.each(PlanCompFabricDetSave, function () {
                if (this.CompSlNo == sno && this.SizeId == Sizeid) {
                    this.GreyWidthID = val;
                    this.GreyWidth = gs;
                }
            });
            loadCompFabSaveTable(PlanCompFabricDetSave);
            return true;
        }
        $.each(PlanCompFabricDet, function () {
            if (this.ColorID == Colorid && this.SizeId == Sizeid && this.CompSlNo == sno) {
                this.GreyWidthID = val;
                this.GreyWidth = gs;
            }
        });

        //loadCompFabTable(PlanCompFabricDet);

        var bclrid = 0;
        var bclr = '';
        $.each(PlanCompFabricDetSave, function () {
            if (this.ColorID == Colorid && this.SizeId == Sizeid && this.CompSlNo == sno) {
                this.GreyWidthID = val;
                this.GreyWidth = gs;
            }
        });
        loadCompFabSaveTable(PlanCompFabricDetSave);
    });

    $(document).on('change', '.ddlFSize', function () {

        debugger;
        //$("#tCPIbody tr").change(function () {
        // alert(this.rowIndex - 1);

        //});
        rowindex = $(this).closest('tr').index();
        indexforfill = rowindex;
        fillvar = 'FW';
        var fs = "";// = $("#ddlFSize option:selected").text();
        var val = $(this).val();

        var oldind = -1;
        var Sizres = [];
        Sizres = $.grep(Fabriclist, function (r) {
            return r.SizeId == val;
        });

        fs = Sizres[0].Size;


        //for (var x = 0; x < Fabriclist.length; x++) {
        //    if (Fabriclist[x].SizeId == val) {
        //        fs = Fabriclist[x].Size;
        //        oldind = x;
        //    }
        //}
        var currentrow = ConItemList.slice(rowindex);
        var s = currentrow[0].CPlanSlNo;
        var u = currentrow[0].CompSlNo;

        var Colorid = currentrow[0].ColorID;
        var Sizeid = currentrow[0].SizeId;

        $.each(ConItemList, function () {
            if (this.CPlanSlNo == s && this.CompSlNo == u) {
                this.FinishWidth = fs;
                this.FinishWidthID = val;

            }
        });


        $.each(ConItemListSave, function () {
            if (this.CPlanSlNo == s && this.CompSlNo == u) {
                this.FinishWidth = fs;
                this.FinishWidthID = val;

            }
        });
        //array_move(Fabriclist, oldind, 0);
        //loadAdConTable(ConItemList);
        //loadconSaveTable(ConItemListSave);

        if (Colorid == 0 && Sizeid == 0) {
            $.each(PlanCompFabricDet, function () {
                if (this.CompSlNo == u) {
                    this.FinishWidth = fs;
                    this.FinishWidthID = val;
                }
            });

            //loadCompFabTable(PlanCompFabricDet);

            var bclrid = 0;
            var bclr = '';
            $.each(PlanCompFabricDetSave, function () {
                if (this.CompSlNo == u) {
                    this.FinishWidth = fs;
                    this.FinishWidthID = val;
                }
            });
            loadCompFabSaveTable(PlanCompFabricDetSave);
            return true;
        }

        else if (Colorid > 0 && Sizeid == 0) {
            $.each(PlanCompFabricDet, function () {
                if (this.CompSlNo == u && this.ColorID == Colorid) {
                    this.FinishWidth = fs;
                    this.FinishWidthID = val;
                }
            });

            //loadCompFabTable(PlanCompFabricDet);

            var bclrid = 0;
            var bclr = '';
            $.each(PlanCompFabricDetSave, function () {
                if (this.CompSlNo == u && this.ColorID == Colorid) {
                    this.FinishWidth = fs;
                    this.FinishWidthID = val;
                }
            });
            loadCompFabSaveTable(PlanCompFabricDetSave);
            return true;
        }
        else if (Colorid == 0 && Sizeid > 0) {
            $.each(PlanCompFabricDet, function () {
                if (this.CompSlNo == u && this.SizeId == Sizeid) {
                    this.FinishWidth = fs;
                    this.FinishWidthID = val;
                }
            });

            //loadCompFabTable(PlanCompFabricDet);

            var bclrid = 0;
            var bclr = '';
            $.each(PlanCompFabricDetSave, function () {
                if (this.CompSlNo == u && this.SizeId == Sizeid) {
                    this.FinishWidth = fs;
                    this.FinishWidthID = val;
                }
            });
            loadCompFabSaveTable(PlanCompFabricDetSave);
            return true;
        }
        $.each(PlanCompFabricDet, function () {
            if (this.ColorID == Colorid && this.SizeId == Sizeid && this.CompSlNo == u) {
                this.FinishWidth = fs;
                this.FinishWidthID = val;
            }
        });


        //loadCompFabTable(PlanCompFabricDet);

        var bclrid = 0;
        var bclr = '';
        $.each(PlanCompFabricDetSave, function () {
            if (this.ColorID == Colorid && this.SizeId == Sizeid && this.CompSlNo == u) {
                this.FinishWidth = fs;
                this.FinishWidthID = val;
            }
        });
        loadCompFabSaveTable(PlanCompFabricDetSave);
    });



    $(document).on('click', '.btnFabricLoss', function () {



        $("#FabricLossId").show();

    });

    $(document).on('click', '#profile-tab2', function () {
        debugger;
        var totBcolorPqty = 0;
        var totFcolorPqty = 0;
        var totwgt = 0;
        if (PlanCompFabricDetSave.length > 0) {
            for (i = 0; PlanCompFabricDetSave.length > i; i++) {
                totBcolorPqty = totBcolorPqty + PlanCompFabricDetSave[i].BColorPQty;
                totFcolorPqty = totFcolorPqty + PlanCompFabricDetSave[i].FColorPQty;
                totwgt = totwgt + PlanCompFabricDetSave[i].Weight;
            }
            var totfill = Math.round(totBcolorPqty) + Math.round(totFcolorPqty);
            if (totfill == Math.round(totwgt)) {
                //alert('Fabric are Planned to Purchase.Hence Yarn Planning is not Necessary');
                var msg = 'Fabric are Planned to Purchase.Hence Yarn Planning is not Necessary...';
                var flg = 4;
                var mo = 1;
                AlartMessage(msg, flg, mo);
            }
        }


        if (PlanCompFabricDetSave.length == 0) {
            EditCompFabricLossPlanList(PLID, fcompno);
        }


    });
    ////////////////



    //Yarn Details
    LoadYarnDDL("#ddlYarn");
    LoadYSizeDDL("#ddlCount");
    LoadColorDDL("#ddlColor");
    LoadProcessDDL("#ddlProcess,#ddlFabProcess");
    //


    //fabric loss

    $('#btnLossViewAdd').click(function () {

        if (Mod == 0) {
            ///////hide the loss table
            $("#CListLoss").show();
            ///////
        }
        var procid = $('#ddlFabProcess').val();
        for (var g = 0; g < PlanLossSave.length; g++) {
            if (PlanLossSave[g].CompSNo == fcompno && PlanLossSave[g].ProcessId == procid && PlanLossSave[g].FLGColorID == fgcolorid) {
                //alert('Must be a different process..');
                var msg = 'Must be a different process...';
                var flg = 4;
                var mo = 1;
                AlartMessage(msg, flg, mo);
                fnClearCompLossControls();
                return true;
            }
        }

        var lengp = 0;
        var isAllValid = true;



        if ($('#ddlFabProcess').val() == "0") {
            isAllValid = false;
            //$('#ddlFabProcess').css('border-color', 'Red');
            $('#ddlFabProcess').siblings(".select2-container").css('border', '1px solid red');
        }
        else {
            //$('#ddlFabProcess').css('border-color', 'lightgrey');
            $('#ddlFabProcess').siblings(".select2-container").css('border', 'lightgrey');
        }


        if ($('#txtFabLoss').val() == "") {
            isAllValid = false;
            $('#txtFabLoss').css('border-color', 'Red');
        }
        else {
            $('#txtFabLoss').css('border-color', 'lightgrey');
        }

        if (PlanLossSave.length == 0) {
            lengp = 1;
        }
        else {
            lengp = PlanLossSave.length + 1;
        }

        if (fcompno == 0) {
            fcompno == 1;
        } else {
            fcompno == fcompno;
        }

        if (isAllValid) {



            var compLossObj = {
                ProcessName: $("#ddlFabProcess option:selected").text(),
                ProcessId: $('#ddlFabProcess').val(),
                SlNo: lengp,
                Loss_Per: $('#txtFabLoss').val(),
                CompSNo: fcompno,
                FLPlanID: 0,
                FPlanId: 0,
                FLGColorID:fgcolorid,
                Status: ['<img src="images/first.png" class="btnSave"><img src="images/delete.png" class="btnDelete"/>']
            };

            PlanLossSave.push(compLossObj);

            loadFabricLossSaveTable(PlanLossSave);

            fnClearCompLossControls();

            var colorempty = [];
            colorempty = PlanLossSave;

            colorempty = $.grep(colorempty, function (v) {
                return (v.CompSNo == fcompno && v.FLGColorID == fgcolorid);
            });

            PlanLoss = colorempty;
            loadFabricLossTable(PlanLoss);

            //loadfillloss();
            var totalamnt = 0;
            for (var e = 0; e < PlanLossSave.length; e++) {
                if (PlanLossSave[e].CompSNo == fcompno && PlanLossSave[e].FLGColorID==fgcolorid) {
                    var amount = PlanLossSave[e].Loss_Per;
                    totalamnt = totalamnt + parseFloat(amount);
                }
            }
            $('#txttotfabloss').val(totalamnt);
            loadfillloss();
        }

    });


    function fnClearCompLossControls() {

        $('#ddlFabProcess').val('0').trigger('change');
        $('#txtFabLoss').val('');

    }

    $(document).on('click', '.btncompLossedit', function () {

        Mode = 1;

        rowindex = $(this).closest('tr').index();

        var cur1 = PlanLoss.slice(rowindex);

        $('#ddlFabProcess').val(cur1[0]['ProcessId']).trigger('change');
        $('#txtFabLoss').val(cur1[0]['Loss_Per']);


        $('#btnLossViewAdd').hide();
        $('#btnLossViewUpdate').show();
    });

    $('#btnLossViewUpdate').click(function () {

        var currentrowsel = PlanLoss.slice(rowindex);

        currentrowsel[0]['ProcessId'] = $("#ddlFabProcess").val();
        currentrowsel[0]['ProcessName'] = $("#ddlFabProcess option:selected").text();
        currentrowsel[0]['Loss_Per'] = $("#txtFabLoss").val();

        var sno = currentrowsel[0]['SlNo'];
        var compsn = currentrowsel[0]['CompSNo']
        PlanLoss[rowindex] = currentrowsel[0];

        loadFabricLossTable(PlanLoss);

        $('#btnLossViewUpdate').hide();
        $('#btnLossViewAdd').show();
        fnClearCompLossControls();
        for (var f = 0; f < PlanLossSave.length; f++) {
            if (PlanLossSave[f].CompSNo == compsn && PlanLossSave[f].SlNo == sno) {
                PlanLossSave[f] = currentrowsel[0];
            }
        }

        loadFabricLossSaveTable(PlanLossSave);
        var totalamnt = 0;
        for (var e = 0; e < PlanLossSave.length; e++) {
            if (PlanLossSave[e].CompSNo == CompSlNo) {
                var amount = PlanLossSave[e].Loss_Per;
                totalamnt = totalamnt + parseFloat(amount);
            }
        }
        $('#txttotfabloss').val(totalamnt);
        loadfillloss();
    });

    $(document).on('click', '.btncompLossremove', function () {
        rowindex = $(this).closest('tr').index();
        var currentrowsel = PlanLoss.slice(rowindex);
        var sno = currentrowsel[0]['SlNo'];
        var compsn = currentrowsel[0]['CompSNo']
        PlanLoss.splice(rowindex, 1);
        for (var f = 0; f < PlanLossSave.length; f++) {
            if (PlanLossSave[f].CompSNo == compsn && PlanLossSave[f].SlNo == sno) {
                PlanLossSave.splice(f, 1);
            }
        }
        document.getElementById("tblcompfabricloss").deleteRow(rowindex + 1);
        loadFabricLossSaveTable(PlanLossSave);
        var totalamnt = 0;
        for (var e = 0; e < PlanLossSave.length; e++) {
            if (PlanLossSave[e].CompSNo == CompSlNo) {
                var amount = PlanLossSave[e].Loss_Per;
                totalamnt = totalamnt + parseFloat(amount);
            }
        }
        $('#txttotfabloss').val(totalamnt);
        loadfillloss();
    });
    //

    ///Yarn loss

    $('#btnLossYarnViewAdd').click(function () {


        if (Mod == 0) {
            ///////hide the loss table
            $("#CList").show();
            ///////
        }
        var lengp = 0;
        var isAllValid = true;

        var procid = $('#ddlProcess').val();
        for (var g = 0; g < PlanYarnLossSave.length; g++) {
            if (PlanYarnLossSave[g].SNo == YDetSlNo && PlanYarnLossSave[g].ProcessId == procid) {
                //alert('Must be a different process..');
                var msg = 'Must be a different process...';
                var flg = 4;
                var mo = 1;
                AlartMessage(msg, flg, mo);
                fnClearYarnLossControls();
                return true;
            }
        }


        if ($('#ddlProcess').val() == "0") {
            isAllValid = false;
            $('#ddlProcess').css('border-color', 'Red');
        }
        else {
            $('#ddlProcess').css('border-color', 'lightgrey');
        }


        if ($('#txtLoss').val() == "") {
            isAllValid = false;
            $('#txtLoss').css('border-color', 'Red');
        }
        else {
            $('#txtLoss').css('border-color', 'lightgrey');
        }

        if (PlanYarnLossSave.length == 0) {
            lengp = 1;
        }
        else {
            lengp = PlanYarnLossSave.length + 1;
        }

        if (isAllValid) {



            var YarnLossObj = {
                ProcessName: $("#ddlProcess option:selected").text(),
                ProcessId: $('#ddlProcess').val(),
                SlNo: lengp,
                Loss_Per: $('#txtLoss').val(),
                YPlanLossID: 0,
                SNo: YDetSlNo,
                CompSNo: CompSlNo,
                Status: ['<img src="images/first.png" class="btnSave"><img src="images/delete.png" class="btnDelete"/>']
            };

            PlanYarnLossSave.push(YarnLossObj);

            loadyarnLossSaveTable(PlanYarnLossSave);

            fnClearYarnLossControls();

            var colorempty = [];
            colorempty = PlanYarnLossSave;

            colorempty = $.grep(colorempty, function (v) {
                return (v.CompSNo == CompSlNo);
            });

            PlanYarnLoss = colorempty;
            loadyarnLossTable(PlanYarnLoss);

            var totalamnt = 0;
            for (var e = 0; e < PlanYarnLossSave.length; e++) {
                if (PlanYarnLossSave[e].CompSNo == CompSlNo) {
                    var amount = PlanYarnLossSave[e].Loss_Per;
                    totalamnt = totalamnt + parseFloat(amount);
                }
            }
            $('#txttotyarnloss').val(totalamnt);
        }

    });


    function fnClearYarnLossControls() {

        $('#ddlProcess').val('0');
        $('#txtLoss').val('');

    }

    $(document).on('click', '.btnYarnLossedit', function () {

        Mode = 1;

        rowindex = $(this).closest('tr').index();

        var cur1 = PlanYarnLoss.slice(rowindex);

        $('#ddlProcess').val(cur1[0]['ProcessId']);
        $('#txtLoss').val(cur1[0]['Loss_Per']);


        $('#btnLossYarnViewAdd').hide();
        $('#btnLossYarnViewUpdate').show();
    });

    $('#btnLossYarnViewUpdate').click(function () {

        var currentrowsel = PlanYarnLoss.slice(rowindex);

        currentrowsel[0]['ProcessId'] = $("#ddlProcess").val();
        currentrowsel[0]['ProcessName'] = $("#ddlProcess option:selected").text();
        currentrowsel[0]['Loss_Per'] = $("#txtLoss").val();

        var sno = currentrowsel[0]['SlNo'];
        var compsn = currentrowsel[0]['CompSNo']
        PlanYarnLoss[rowindex] = currentrowsel[0];

        loadyarnLossTable(PlanYarnLoss);

        $('#btnLossYarnViewUpdate').hide();
        $('#btnLossYarnViewAdd').show();
        fnClearYarnLossControls();

        for (var f = 0; f < PlanYarnLossSave.length; f++) {
            if (PlanYarnLossSave[f].CompSNo == compsn && PlanYarnLossSave[f].SlNo == sno) {
                PlanYarnLossSave[f] = currentrowsel[0];
            }
        }

        loadyarnLossSaveTable(PlanYarnLossSave);
        var totalamnt = 0;
        for (var e = 0; e < PlanYarnLossSave.length; e++) {
            if (PlanYarnLossSave[e].CompSNo == CompSlNo) {
                var amount = PlanYarnLossSave[e].Loss_Per;
                totalamnt = totalamnt + parseFloat(amount);
            }
        }
        $('#txttotyarnloss').val(totalamnt);


    });

    $(document).on('click', '.btnYarnLossremove', function () {
        rowindex = $(this).closest('tr').index();
        var currentrowsel = PlanLoss.slice(rowindex);
        var sno = currentrowsel[0]['SlNo'];
        var compsn = currentrowsel[0]['CompSNo'];
        PlanYarnLoss.splice(rowindex, 1);
        for (var f = 0; f < PlanLossSave.length; f++) {
            if (PlanLossSave[f].CompSNo == compsn && PlanLossSave[f].SlNo == sno) {
                PlanLossSave.splice(f, 1);
            }
        }
        document.getElementById("tblcompyarnloss").deleteRow(rowindex + 1);
        loadyarnLossSaveTable(PlanYarnLossSave);
        var totalamnt = 0;
        for (var e = 0; e < PlanYarnLossSave.length; e++) {
            if (PlanYarnLossSave[e].CompSNo == CompSlNo) {
                var amount = PlanYarnLossSave[e].Loss_Per;
                totalamnt = totalamnt + parseFloat(amount);
            }
        }
        $('#txttotyarnloss').val(totalamnt);

    });
    //Show Fabric Loss


    //


});






function loadyarnLossTable(list) {
    //$('#tblcompyarnloss').DataTable().destroy();

    var inputcount = 0;
    $('#tblcompyarnloss tr').each(function () {
        inputcount++;
    });

    if (inputcount > 0) {
        $('#tblcompyarnloss').DataTable().destroy();
    }
    $('#tblcompyarnloss').empty();
    $('#tblcompyarnloss').DataTable({
        data: list,
        scrollY: 300,
        scrollCollapse: true,
        paging: false,
        fixedColumns: false,
        select: false,
        scrollX: "100%",
        scrollXInner: "100%",
        scroller: false,
        "bSort": false,
        columns: [
            { title: "CompSlNo", data: "CompSNo", "visible": false },
            { title: "YPlanLossID", data: "YPlanLossID", "visible": false },
            { title: "ProcessID", data: "ProcessId", "visible": false },
            { title: "Process", data: "ProcessName" },
            { title: "Loss%", data: "Loss_Per" },
            { title: "Sl No", data: "SlNo", "visible": false },
            { title: "YDDetSNo", data: "SNo", "visible": false },
               {
                   title: "ACTION", "mDataProp": null,
                   "sDefaultContent": '<button type="button" style="width: 20px;padding: 0px;height: 20px;border-radius:10px;" data-toggle="tooltip" data-placement="top" title="Edit" class="btnYarnLossedit btn  btn-warning btn-round"> <i class="fa fa-pencil-square-o"></i> </button> <button type="button"style="width: 20px;padding: 0px;height: 20px;border-radius:10px;" data-toggle="tooltip" data-placement="top" title="Remove" class="btnYarnLossremove btn btn-danger btn-round"> <i class="fa fa-times"></i> </button>'
                   //"sDefaultContent": '<button type="button" class="btnYarnLossedit"> Edit </button> <button type="button" class="btnYarnLossremove"> Remove </button>'
               }
        ]
    });
}


function loadyarnLossSaveTable(list) {
    // $('#tblcompyarnlosssave').DataTable().destroy();
    var inputcount = 0;
    $('#tblcompyarnlosssave tr').each(function () {
        inputcount++;
    });

    if (inputcount > 0) {
        $('#tblcompyarnlosssave').DataTable().destroy();
    }
    $('#tblcompyarnlosssave').empty();

    $('#tblcompyarnlosssave').DataTable({
        data: list,
        scrollY: 300,
        scrollCollapse: true,
        paging: false,
        fixedColumns: false,
        select: false,
        scrollX: "100%",
        scrollXInner: "100%",
        scroller: false,
        "bSort": false,
        columns: [
             { title: "CompSlNo", data: "CompSNo" },
            { title: "YPlanLossID", data: "YPlanLossID" },
            { title: "ProcessID", data: "ProcessId" },
            { title: "Process", data: "ProcessName" },
            { title: "Loss%", data: "Loss_Per" },
            { title: "Sl No", data: "SlNo" },
            { title: "YDDetSNo", data: "SNo" },
               {
                   title: "ACTION", "mDataProp": null,
                   //"sDefaultContent": '<button type="button" class="btnYarnLossedit"> Edit </button> <button type="button" class="btnYarnLossremove"> Remove </button>'
               }
        ]
    });
}

function totwght() {
    debugger;

    if (fcompno == 0) {
        fcompno == 1;
    } else {
        fcompno == fcompno;
    }

    var totalamnt = 0;
    for (var e = 0; e < PlanCompFabricDet.length; e++) {
        if (PlanCompFabricDet[e].CompSlNo == fcompno) {
            var amount = PlanCompFabricDet[e].ActWeight;
            totalamnt = totalamnt + parseFloat(amount);
        }
    }
    $('#txttotwt').val(totalamnt.toFixed(3));

    var totalamntloss = 0;
    for (var e = 0; e < PlanCompFabricDet.length; e++) {
        if (PlanCompFabricDet[e].CompSlNo == fcompno) {
            var amountloss = PlanCompFabricDet[e].Weight;
            totalamntloss = totalamntloss + parseFloat(amountloss); 
        }
    }
    $('#txttotwtloss').val(totalamntloss.toFixed(3));

    if (PlanCompFabricDet.length > 0) {
        if (PlanCompFabricDet[0].FabricType == 'P') {
            var totalpcs = 0;
            for (var e = 0; e < PlanCompFabricDet.length; e++) {
                if (PlanCompFabricDet[e].CompSlNo == fcompno) {
                    var pcs = PlanCompFabricDet[e].Woven_Req_InMtrs;
                    totalpcs = totalpcs + parseFloat(pcs);
                }
            }
            $('#txttotPcs').val(totalpcs.toFixed(3));
            $('#txttotPcs').show();
            $('#lbltotpcs').show();
        } else {
            $('#txttotPcs').hide();
            $('#lbltotpcs').hide();
        }
    }

}

function totconwght() {
    debugger;
    var totalconqty = 0;
    for (var e = 0; e < ConItemList.length; e++) {
        if (ConItemList[e].CompSlNo == CompSlNo) {
            var amountconqty = ConItemList[e].Prdn_Qty;
            totalconqty = totalconqty + parseFloat(amountconqty);
        }
    }
    $('#txtconqty').val(totalconqty.toFixed(0));

    var totalconwgt = 0;
    for (var e = 0; e < ConItemList.length; e++) {
        if (ConItemList[e].CompSlNo == CompSlNo) {
            var amountconwgt = ConItemList[e].Weight;
            totalconwgt = totalconwgt + parseFloat(amountconwgt);
        }
    }
    $('#txtconwgt').val(totalconwgt.toFixed(3));
}

function totyarn() {
    debugger;
    var totalfabqty = 0;

    for (var e = 0; e < PlanYarnSave.length; e++) {
        var pcs = PlanYarnSave[e].Fabric_Weight;
        totalfabqty = totalfabqty + parseFloat(pcs);

    }
    $('#txtfabqty').val(totalfabqty.toFixed(3));

    var totalyarn = 0;
    for (var e = 0; e < PlanYarnDetSave.length; e++) {
        var ypcs = PlanYarnDetSave[e].Knit_In_ActQty;
        totalyarn = totalyarn + parseFloat(ypcs);

    }
    $('#txtyarnqty').val(totalyarn.toFixed(3));
}

function loadfillyarnloss() {
    debugger;

    var totalamnt = 0;
    for (var e = 0; e < PlanYarnLossSave.length; e++) {
        if (PlanYarnLossSave[e].CompSNo == CompSlNo && PlanYarnLossSave[e].SNo == YDetSlNo) {
            var amount = PlanYarnLossSave[e].Loss_Per;
            totalamnt = totalamnt + parseFloat(amount);
        }
    }

    if (totalamnt < 0) {
        for (var d = 0; d < PlanYarnDet.length; d++) {
            if (PlanYarnDet[d].SlNo == YDetSlNo) {
                var sno = PlanYarnDet[d].SlNo;
                var comps = PlanYarnDet[d].CompSno;
                var quan = PlanYarnDet[d].Knit_In_Qty;
                var res = -(totalamnt / 100) * quan;
                PlanYarnDet[d].Knit_In_ActQty = parseFloat(quan) + parseFloat(res.toFixed(3));
                PlanYarnDet[d].Loss_per = totalamnt;
                for (var r = 0; r < PlanYarnDetSave.length; r++) {
                    if (PlanYarnDetSave[r].CompSno == comps && PlanYarnDetSave[r].SlNo == YDetSlNo) {
                        PlanYarnDetSave[r].Knit_In_ActQty = (parseFloat(quan) + parseFloat(res)).toFixed(3);
                        PlanYarnDetSave[r].Loss_per = totalamnt;

                    }
                }
            }
        }
        Loadsepyarn(PlanYarnDet);
        LoadsepSaveyarn(PlanYarnDetSave);
    }

    if (totalamnt > 0) {
        for (var d = 0; d < PlanYarnDet.length; d++) {
            if (PlanYarnDet[d].SlNo == YDetSlNo) {
                var sno = PlanYarnDet[d].SlNo;
                var comps = PlanYarnDet[d].CompSno;
                var quan = PlanYarnDet[d].Knit_In_Qty;
                var res = (totalamnt / 100) * quan;
                PlanYarnDet[d].Knit_In_ActQty = parseFloat(quan) - parseFloat(res.toFixed(3));
                PlanYarnDet[d].Loss_per = totalamnt;
                for (var r = 0; r < PlanYarnDetSave.length; r++) {
                    if (PlanYarnDetSave[r].CompSno == comps && PlanYarnDetSave[r].SlNo == sno) {
                        PlanYarnDetSave[r].Knit_In_ActQty = (parseFloat(quan) - parseFloat(res)).toFixed(3);
                        PlanYarnDetSave[r].Loss_per = totalamnt;
                    }
                }
            }
        }
        Loadsepyarn(PlanYarnDet);
        LoadsepSaveyarn(PlanYarnDetSave);
    }

    if (totalamnt == 0) {
        for (var d = 0; d < PlanYarnDet.length; d++) {
            var sno = PlanYarnDet[d].SlNo;
            var comps = PlanYarnDet[d].CompSno;
            PlanYarnDet[d].Knit_In_ActQty = PlanYarnDet[d].Knit_In_Qty;
            PlanYarnDet[d].Loss_per = totalamnt;
            for (var r = 0; r < PlanYarnDetSave.length; r++) {
                if (PlanYarnDetSave[r].CompSno == comps && PlanYarnDetSave[r].SlNo == sno) {
                    PlanYarnDetSave[r].Knit_In_ActQty = PlanYarnDetSave[d].Knit_In_Qty;
                    PlanYarnDetSave[r].Loss_per = totalamnt;
                }
            }
        }
        Loadsepyarn(PlanYarnDet);
        LoadsepSaveyarn(PlanYarnDetSave);
    }
}


function loadfillloss() {
    debugger;

    if (fcompno == 0) {
        fcompno == 1;
    } else {
        fcompno == fcompno;
    }

    var totalamnt = 0;
    for (var e = 0; e < PlanLossSave.length; e++) {
        if (PlanLossSave[e].CompSNo == fcompno && PlanLossSave[e].FLGColorID == fgcolorid) {
            var amount = PlanLossSave[e].Loss_Per;
            totalamnt = totalamnt + parseFloat(amount);
        }
    }
    //var fabtable = $('#tCDbody').DataTable();
    //var fabdata = fabtable.rows().data();

    if (totalamnt < 0) {
        //for (var d = 0; d < PlanCompFabricDet.length; d++) {
        //    var snu = PlanCompFabricDet[d].snumb;
        //    var quan = PlanCompFabricDet[d].ActWeight;
        //    var res = -((totalamnt / 100) * quan).toFixed(3);
        //    PlanCompFabricDet[d].Weight = parseFloat(quan) + parseFloat(res);
        //    var res = (parseFloat(quan) + parseFloat(res)).toFixed(3);
        //    $('input[id=txtPurQty]').each(function (ig) {
        //        if (fabdata[ig].snumb == snu && fabdata[ig].CompSlNo == fcompno) {
        //            var row = $(this).closest('tr');
        //            row.find('#txtfabwt').val(res);
        //        }
        //    });
        //}
        //loadCompFabTable(PlanCompFabricDet);


        var table = $('#tCDbody').DataTable();
        var ecdata = table.rows().data();

        debugger;
        $('input[id=txtPurQty]').each(function (ig) {
            debugger;
            // if (ecdata[ig].snumb == (ig + 1)) {
            var row = $(this).closest('tr');

            for (var h = 0; h < PlanCompFabricDet.length; h++) {
                if (ig == h) {

                    var snu = PlanCompFabricDet[h].snumb;
                    var quan = PlanCompFabricDet[h].ActWeight;
                    var res = -((totalamnt / 100) * quan).toFixed(3);
                    PlanCompFabricDet[h].Weight = parseFloat(quan) + parseFloat(res);
                    var res = (parseFloat(quan) + parseFloat(res)).toFixed(3);

                    if (PlanCompFabricDet[h].FabricType == 'P') {
                        var Woven_Req_InMtrs = PlanCompFabricDet[h].Prdn_Qty;
                        var res2 = -((totalamnt / 100) * Woven_Req_InMtrs).toFixed(0);
                        PlanCompFabricDet[h].Woven_Req_InMtrs = parseFloat(Woven_Req_InMtrs) + parseFloat(res2);
                        var res2 = (parseFloat(Woven_Req_InMtrs) + parseFloat(res2)).toFixed(0);
                    }
                    else {
                        var res2 = 0;
                    }

                    var snumb = PlanCompFabricDet[h].snumb;
                    var FPlanId = PlanCompFabricDet[h].FPlanId;
                    var ColorID = PlanCompFabricDet[h].ColorID;
                    var Color = PlanCompFabricDet[h].Color;
                    var SizeId = PlanCompFabricDet[h].SizeId;
                    var Size = PlanCompFabricDet[h].Size;
                    var Prdn_Qty = PlanCompFabricDet[h].Prdn_Qty;
                    var ActWeight = PlanCompFabricDet[h].ActWeight;
                    var Weight = res;
                    var Grammage = PlanCompFabricDet[h].Grammage;
                    var FabricID = PlanCompFabricDet[h].FabricID;

                    var GreyWidthID = PlanCompFabricDet[h].GreyWidthID;
                    var FinishWidthID = PlanCompFabricDet[h].FinishWidthID;
                    var FabricType = PlanCompFabricDet[h].FabricType;
                    var PlanID = PlanCompFabricDet[h].PlanID;
                    var CompSlNo = PlanCompFabricDet[h].CompSlNo;
                    var Bcolor = PlanCompFabricDet[h].Bcolor;
                    var BColorPQty = PlanCompFabricDet[h].BColorPQty;
                    var Fcolor = PlanCompFabricDet[h].Fcolor;
                    var FColorPQty = PlanCompFabricDet[h].FColorPQty;
                    var PColor = PlanCompFabricDet[h].PColor;
                    var FGsm = PlanCompFabricDet[h].FGsm;

                    var KGsm = PlanCompFabricDet[h].KGsm;
                    var LoopLen = PlanCompFabricDet[h].LoopLen;
                    var texture = PlanCompFabricDet[h].texture;
                    var content = PlanCompFabricDet[h].content;
                    var guage = PlanCompFabricDet[h].guage;
                    var woven = res2;
                    var CheckDcMade = PlanCompFabricDet[h].CheckDcMade;
                   // var Woven_Req_InMtrs = PlanCompFabricDet[h].Woven_Req_InMtrs;

                    //if (comsn == CompSlNo) {


                    row.find('#txtsnumb').val(snumb);
                    row.find('#txtColor').val(Color);
                    row.find('#txtSize').val(Size);
                    row.find('#txtfabPrdQty').val(Prdn_Qty);
                    row.find('#txtfabActwt').val(ActWeight);
                    row.find('#txtfabwt').val(Weight);
                    row.find('#txtPurQty').val(BColorPQty);
                    row.find('#txtFPurQty').val(FColorPQty);
                    row.find('#txtFGsm').val(FGsm);
                    row.find('#txtKnitgsm').val(KGsm);
                    row.find('#txtlooplen').val(LoopLen);
                    row.find('#txtTexture').val(texture);
                    row.find('#txtContent').val(content);
                    row.find('#txtGauge').val(guage);

                   

                    //  row.find('#txtNos').val('(' + woven * Grammage + ')' + woven);
                    row.find('#txtNos').val( woven);

                    if (PColor == null) {
                        PColor = '--Select--';
                    }
                    // row.find('#ddlBColor option:selected').text(Bcolor);
                    $.each(BaseColorlist, function (k, v) {
                        var id = 0;
                        if (Bcolor === v.Color) {
                            id = v.ColorID
                            row.find('#ddlBColor').val(id);
                        }

                    });
                    // row.find('#ddlFColor option:selected').text(Fcolor);
                    $.each(FinishColorlist, function (k, v) {
                        var id = 0;
                        if (Fcolor === v.Color) {
                            id = v.ColorID
                            row.find('#ddlFColor').val(id);
                        }

                    });
                    // row.find('#ddlPColor option:selected').text(PColor);
                    $.each(PrintColorlist, function (k, v) {
                        var id = 0;
                        if (PColor === v.Color) {
                            id = v.ColorID
                            row.find('#ddlPColor').val(id);
                        }

                    });


                    if (CheckDcMade > "0") {
                        $('td', row).css('background-color', '#FCF3CF');

                        row.find('#ddlBColor').attr('disabled', true);
                        row.find('#ddlFColor').attr('disabled', true);
                        row.find('#txtPurQty').attr('disabled', true);
                        row.find('#txtFPurQty').attr('disabled', true);

                    }
                    else {
                        $('td', row).css('background-color', '#ffffff');

                        row.find('#ddlBColor').attr('disabled', false);
                        row.find('#ddlFColor').attr('disabled', false);
                        row.find('#txtPurQty').attr('disabled', false);
                        row.find('#txtFPurQty').attr('disabled', false);

                    }

                    if (FabricType == 'P') {

                        var tbl = $('#tCDbody');
                        tbl.DataTable().column(9).visible(true);
                    } else {
                        var tbl = $('#tCDbody');
                        tbl.DataTable().column(9).visible(false);
                    }


                }
            }
            // }
        });


        for (var d = 0; d < PlanCompFabricDetSave.length; d++) {
            if (PlanCompFabricDetSave[d].CompSlNo == fcompno && PlanCompFabricDetSave[d].ColorID==fgcolorid) {
                var quan = PlanCompFabricDetSave[d].ActWeight;
                var res = -((totalamnt / 100) * quan).toFixed(3);
                PlanCompFabricDetSave[d].Weight = parseFloat(quan) + parseFloat(res);

            }
        }

        //for (var d = 0; d < PlanCompFabricDetSave.length; d++) {
        //    if (PlanCompFabricDetSave[d].CompSlNo == fcompno && PlanCompFabricDetSave[d].ColorID == fgcolorid &&PlanCompFabricDetSave[d].FabricType =='P' ) {
        //        var Woven_Req_InMtrs = PlanCompFabricDetSave[d].Woven_Req_InMtrs;
        //        var res2 = -((totalamnt / 100) * Woven_Req_InMtrs).toFixed(0);
        //        PlanCompFabricDetSave[d].Woven_Req_InMtrs = parseFloat(Woven_Req_InMtrs) + parseFloat(res2);

        //    }
        //}


        //loadCompFabSaveTable(PlanCompFabricDetSave);
    }

    //if (totalamnt > 0) {
    //    for (var d = 0; d < PlanCompFabricDet.length; d++) {
    //        var snu = PlanCompFabricDet[d].snumb;
    //        var quan = PlanCompFabricDet[d].ActWeight;
    //        var res = ((totalamnt / 100) * quan).toFixed(3);
    //        PlanCompFabricDet[d].Weight = parseFloat(quan) - parseFloat(res);
    //        var res = (parseFloat(quan) - parseFloat(res)).toFixed(3);
    //        $('input[id=txtPurQty]').each(function (ig) {
    //            if (fabdata[ig].snumb == snu && fabdata[ig].CompSlNo == fcompno) {
    //                var row = $(this).closest('tr');
    //                row.find('#txtfabwt').val(res);
    //            }
    //        });
    //    }
    //    //loadCompFabTable(PlanCompFabricDet);

    //    for (var d = 0; d < PlanCompFabricDetSave.length; d++) {
    //        if (PlanCompFabricDetSave[d].CompSlNo == fcompno) {
    //            var quan = PlanCompFabricDetSave[d].ActWeight;
    //            var res = ((totalamnt / 100) * quan).toFixed(3);
    //            PlanCompFabricDetSave[d].Weight = parseFloat(quan) - parseFloat(res);

    //        }
    //    }
    //    //loadCompFabSaveTable(PlanCompFabricDetSave);
    //}
    if (totalamnt == 0) {
        //for (var d = 0; d < PlanCompFabricDet.length; d++) {
        //    var snu = PlanCompFabricDet[d].snumb;
        //    PlanCompFabricDet[d].Weight = PlanCompFabricDet[d].ActWeight;
        //    var res = PlanCompFabricDet[d].ActWeight;
        //    $('input[id=txtPurQty]').each(function (ig) {
        //        if (fabdata[ig].snumb == snu && fabdata[ig].CompSlNo == fcompno) {
        //            var row = $(this).closest('tr');
        //            row.find('#txtfabwt').val(res);
        //        }
        //    });

        //}
        //loadCompFabTable(PlanCompFabricDet);

        var table = $('#tCDbody').DataTable();
        var ecdata = table.rows().data();

        debugger;
        $('input[id=txtPurQty]').each(function (ig) {
            debugger;
            // if (ecdata[ig].snumb == (ig + 1)) {
            var row = $(this).closest('tr');

            for (var h = 0; h < PlanCompFabricDet.length; h++) {
                if (ig == h) {

                    //var snu = PlanCompFabricDet[h].snumb;
                    //var quan = PlanCompFabricDet[h].ActWeight;
                    //var res = -((totalamnt / 100) * quan).toFixed(3);
                    //PlanCompFabricDet[h].Weight = parseFloat(quan) + parseFloat(res);
                    //var res = (parseFloat(quan) + parseFloat(res)).toFixed(3);

                    var snumb = PlanCompFabricDet[h].snumb;
                    var FPlanId = PlanCompFabricDet[h].FPlanId;
                    var ColorID = PlanCompFabricDet[h].ColorID;
                    var Color = PlanCompFabricDet[h].Color;
                    var SizeId = PlanCompFabricDet[h].SizeId;
                    var Size = PlanCompFabricDet[h].Size;
                    var Prdn_Qty = PlanCompFabricDet[h].Prdn_Qty; 
                    var Woven_Req_InMtrs = PlanCompFabricDet[h].Woven_Req_InMtrs;
                    var ActWeight = PlanCompFabricDet[h].ActWeight;
                    var Weight = PlanCompFabricDet[h].ActWeight;;
                    var Grammage = PlanCompFabricDet[h].Grammage;
                    var FabricID = PlanCompFabricDet[h].FabricID;

                    var GreyWidthID = PlanCompFabricDet[h].GreyWidthID;
                    var FinishWidthID = PlanCompFabricDet[h].FinishWidthID;
                    var FabricType = PlanCompFabricDet[h].FabricType;
                    var PlanID = PlanCompFabricDet[h].PlanID;
                    var CompSlNo = PlanCompFabricDet[h].CompSlNo;
                    var Bcolor = PlanCompFabricDet[h].Bcolor;
                    var BColorPQty = PlanCompFabricDet[h].BColorPQty;
                    var Fcolor = PlanCompFabricDet[h].Fcolor;
                    var FColorPQty = PlanCompFabricDet[h].FColorPQty;
                    var PColor = PlanCompFabricDet[h].PColor;
                    var FGsm = PlanCompFabricDet[h].FGsm;

                    var KGsm = PlanCompFabricDet[h].KGsm;
                    var LoopLen = PlanCompFabricDet[h].LoopLen;
                    var texture = PlanCompFabricDet[h].texture;
                    var content = PlanCompFabricDet[h].content;
                    var guage = PlanCompFabricDet[h].guage;
                    var CheckDcMade = PlanCompFabricDet[h].CheckDcMade;

                    //if (comsn == CompSlNo) {


                    // row.find('#txtsnumb').val(snumb);
                    row.find('#txtColor').val(Color);
                    row.find('#txtSize').val(Size);
                    row.find('#txtfabPrdQty').val(Prdn_Qty);
                    row.find('#txtfabActwt').val(ActWeight);
                    row.find('#txtfabwt').val(Weight);
                    row.find('#txtPurQty').val(BColorPQty);
                    row.find('#txtFPurQty').val(FColorPQty);
                    row.find('#txtFGsm').val(FGsm);
                    row.find('#txtKnitgsm').val(KGsm);
                    row.find('#txtlooplen').val(LoopLen);
                    row.find('#txtFGsm').val(texture);
                    row.find('#txtKnitgsm').val(content);
                    row.find('#txtlooplen').val(guage);
                    // row.find('#txtNos').val('(' + Woven_Req_InMtrs * Grammage + ')' + Woven_Req_InMtrs);
                    row.find('#txtNos').val(Woven_Req_InMtrs);
                    if (PColor == null) {
                        PColor = '--Select--';
                    }
                    // row.find('#ddlBColor option:selected').text(Bcolor);
                    $.each(BaseColorlist, function (k, v) {
                        var id = 0;
                        if (Bcolor === v.Color) {
                            id = v.ColorID
                            row.find('#ddlBColor').val(id);
                        }

                    });
                    // row.find('#ddlFColor option:selected').text(Fcolor);
                    $.each(FinishColorlist, function (k, v) {
                        var id = 0;
                        if (Fcolor === v.Color) {
                            id = v.ColorID
                            row.find('#ddlFColor').val(id);
                        }

                    });
                    // row.find('#ddlPColor option:selected').text(PColor);
                    $.each(PrintColorlist, function (k, v) {
                        var id = 0;
                        if (PColor === v.Color) {
                            id = v.ColorID
                            row.find('#ddlPColor').val(id);
                        }

                    });


                    if (CheckDcMade > "0") {
                        $('td', row).css('background-color', '#FCF3CF');

                        row.find('#ddlBColor').attr('disabled', true);
                        row.find('#ddlFColor').attr('disabled', true);
                        row.find('#txtPurQty').attr('disabled', true);
                        row.find('#txtFPurQty').attr('disabled', true);

                    }
                    else {
                        $('td', row).css('background-color', '#ffffff');

                        row.find('#ddlBColor').attr('disabled', false);
                        row.find('#ddlFColor').attr('disabled', false);
                        row.find('#txtPurQty').attr('disabled', false);
                        row.find('#txtFPurQty').attr('disabled', false);

                    }

                    if (FabricType == 'P') {

                        var tbl = $('#tCDbody');
                        tbl.DataTable().column(9).visible(true);
                    } else {
                        var tbl = $('#tCDbody');
                        tbl.DataTable().column(9).visible(false);
                    }

                }
            }
            // }
        });

        for (var d = 0; d < PlanCompFabricDetSave.length; d++) {
            if (PlanCompFabricDetSave[d].CompSlNo == fcompno && PlanCompFabricDetSave[d].ColorID == fgcolorid) {

                PlanCompFabricDetSave[d].Weight = PlanCompFabricDetSave[d].ActWeight;

            }
        }
        for (var d = 0; d < PlanCompFabricDetSave.length; d++) {
            if (PlanCompFabricDetSave[d].CompSlNo == fcompno && PlanCompFabricDetSave[d].ColorID == fgcolorid && PlanCompFabricDetSave[d].FabricType == 'P') {
              
                PlanCompFabricDetSave[d].Woven_Req_InMtrs = PlanCompFabricDetSave[d].Prdn_Qty;

            }
        }

        //loadCompFabSaveTable(PlanCompFabricDetSave);
    }
    totwght();


    //

    //for (var r = 0; r < PlanYarnSave.length; r++) {
    //    if (PlanYarnSave[r].SlNo == CompSlNo) {
    //        //PlanYarnSave[d].Fabric_Weight = $('#txtOrderNo').val();
    //        var bclr = PlanYarnSave[r].BColor;
    //        var totalamnt = 0;
    //        for (var e = 0; e < PlanCompFabricDetSave.length; e++) {
    //            if (PlanCompFabricDetSave[e].CompSlNo == CompSlNo && PlanCompFabricDetSave[e].Bcolor == bclr) {
    //                var amount = PlanCompFabricDetSave[e].Weight;
    //                totalamnt = totalamnt + parseFloat(amount);
    //            }
    //        }
    //        totalamnt = totalamnt.toFixed(3);
    //        PlanYarnSave[r].Fabric_Weight = totalamnt;
    //        //r++;
    //    }
    //}
    //loadYarnSavedetTab(PlanYarnSave);
    //



    //loadYarndetTab


    //var ctry = [];
    //ctry = PlanYarnSave;
    //ctry = $.grep(ctry, function (e) {
    //    if (e.SlNo == CompSlNo) {
    //        return e;
    //    }
    //});
    //PlanYarn = ctry;

    //loadYarndetTab(PlanYarn);

    //if (PlanYarnDetSave.length > 0) {
    //PlanYarnDetSave = $.grep(PlanYarnDetSave, function (e) {
    //    return e.CompSno != CompSlNo;
    //});
    //LoadsepSaveyarn(PlanYarnDetSave);

    //PlanYarnDet = $.grep(PlanYarnDet, function (e) {
    //    return e.CompSno != CompSlNo;
    //});
    //Loadsepyarn(PlanYarnDet);

    //if (PlanYarnDetSave.length > 0) {


    //    var ys = PlanYarn[0].YSlno;

    //    for (var b = 0; b < PlanYarnSave.length; b++) {
    //        if (PlanYarnSave[b].SlNo == CompSlNo) {
    //            var pysl = PlanYarnSave[b].YSlno;
    //            var cmpsl = PlanYarnSave[b].SlNo;
    //            var wgt = PlanYarnSave[b].Fabric_Weight;
    //            var bcid = PlanYarnSave[b].Fabric_ColorId;

    //            for (var m = 0; m < PlanYarnDetSave.length; m++) {
    //                if (PlanYarnDetSave[m].CompSno == cmpsl) {
    //                    var s = PlanYarnDetSave[m].SlNo;
    //                    if (PlanYarnDetSave[m].BaseColorID == bcid) {
    //                        YsBp = 1;
    //                        var pr = PlanYarnDetSave[m].Knit_In_Per;
    //                        var re = parseFloat((pr * wgt) / 100);
    //                        re = re.toFixed(3);
    //                        PlanYarnDetSave[m].Knit_In_Qty = re;
    //                        PlanYarnDetSave[m].Knit_In_ActQty = re;
    //                        PlanYarnDetSave[m].YSlNo = pysl;
    //                        PlanYarnDetSave[m].SlNo = s;
    //                        //PlanYarnDetSave[m].FabricID = FabricId;
    //                    }

    //                }
    //            }
    //        }
    //    }
    //    PlanYarnDet = $.grep(PlanYarnDetSave, function (e) {
    //        return e.CompSno == CompSlNo && e.YSlNo == ys;
    //    });
    //    Loadsepyarn(PlanYarnDet);
    //    LoadsepSaveyarn(PlanYarnDetSave);
    //}
    //}

    //if (PlanYarnDyeingSave.length > 0) {
    //    PlanYarnDyeingSave = $.grep(PlanYarnDyeingSave, function (e) {
    //        return e.CompSlNo != CompSlNo;
    //    });
    //    loadYarnDyeAddTableSave(PlanYarnDyeingSave);

    //    PlanYarnDyeing = $.grep(PlanYarnDyeing, function (e) {
    //        return e.CompSlNo != CompSlNo;
    //    });
    //    loadYarnDyeAddTable(PlanYarnDyeing);
    //}
}

$(document).ready(function () {
    $("#tCPIbody ").dataTable().find("tbody").on('click', 'tr', function () {
        index = (this.rowIndex) - 1;
    });
});

$(document).ready(function () {
    $("#tblcompdetails ").dataTable().find("tbody").on('click', 'tr', function () {
        Compindex = (this.rowIndex) - 1;
    });
});

$(document).ready(function () {
    $("#tCDbody ").dataTable().find("tbody").on('click', 'tr', function () {
        debugger;
        Fabindex = (this.rowIndex) - 1;
    });
});



function getDate() {
    var todaydate = new Date();
    var day = todaydate.getDate();
    var Pmonth = todaydate.getMonth() - 2;
    var Cmonth = todaydate.getMonth() + 1;
    var year = todaydate.getFullYear();
    var datestring = Pmonth + "/" + day + "/" + year;
    var Fdatestring = day + "/" + Cmonth + "/" + year;
    $('#txtFromDate').val(Fdatestring);
    $('#txtToDate').val(Fdatestring);
    today = Fdatestring;
}
function ClearCon() {
    $('#tCPIbody').DataTable().destroy();

}

function LoadPlanItemDetails(ItemId, StyleRowId) {
    $.ajax({
        url: "/PlanningConsumption/GetPlanItemDetails",
        data: JSON.stringify({ ItemId: ItemId, StyleRowId: StyleRowId }),
        type: "POST",
        contentType: "application/json;charset=utf-8",
        dataType: "json",
        success: function (result) {

            var obj = result.Value;

            if (obj != undefined) {
                $('#txtOrderNo').val(obj[0]["Order_No"]);
                $('#txtRefNo').val(obj[0]["Ref_no"]);
                $('#txtCompany').val(obj[0]["Company"]);
                $('#txtHCompanyId').val(obj[0]["CompanyID"]);
                $('#txtStyle').val(obj[0]["Style"]);
                $('#txtProdQty').val(obj[0]["ProductionQty"]);
                $('#txtBuyer').val(obj[0]["buyer"]);
                $('#txtHBuyerId').val(obj[0]["buyerid"]);
                $('#txtItem').val(obj[0]["Item"]);
                $('#txtHItemId').val(obj[0]["ItemID"]);
                $('#txtHStyleId').val(obj[0]["StyleID"]);
                $('#txtBuyOrdMasId').val(obj[0]["BMasID"]);
                $('#txtWorkOrderNo').val(obj[0]["Job_Ord_No"]);
                $('#txtEntryDate').val(moment(obj[0]["EDate"]).format('DD/MM/YYYY'));
                LockDet();
                CheckFabric = obj[0]["Fabric_Plan"];
                var BmID = obj[0]["BMasID"];
                var ChildOrdNo = obj[0]["Order_No"];
                // LoadMeasuListDef(ItemId, StyleRowId, BmID);
                LoadCopyParentNo(ChildOrdNo);
                if (UserName.toUpperCase() != "SUPERUSER") {
                    LoadProcessListDef(ItemId, StyleRowId, BmID);
                   // LoadFabListDef(ItemId, StyleRowId, BmID);
                   // LoadYarnListDef(ItemId, StyleRowId, BmID);

                }
                Entrystatus(obj[0]["Order_No"], obj[0]["StyleID"], obj[0]["ItemID"]);


                DispatchClosed = obj[0]["Despatch_Closed"];
                
                if (PLID > 0 && Mod == 1) {
                    // $('#ConUpdate').show();
                    if (DispatchClosed == "N") {
                        $('#ConUpdate').show();
                    }
                    else if (DispatchClosed == "Y") {
                        $('#ConUpdate').hide();
                    }

                    $('#ConAdd').hide();
                    $('#btnCpyList').attr("disabled", true);
                } else if (Mod == 0) {
                    $('#ConAdd').show();
                    $('#ConUpdate').hide();
                    $('#btnCpyList').attr("disabled", false);
                }
                else if (Mod == 2) {
                    $('#ConAdd').hide();
                    $('#ConUpdate').hide();

                    //$('#ConDelete').show();
                    if (DispatchClosed == "N") {
                        $('#ConDelete').show();
                    }
                    else if (DispatchClosed == "Y") {
                        $('#ConDelete').hide();
                    }

                    $('#btnCpyList').attr("disabled", true);
                }

            }
            else {

            }
        },

        failure: function (errMsg) {
            alert(errMsg);
        }
    });
}


$(document).ready(function () {


    $('#btncomponentadd').click(function () {
        debugger;

        $("#CompList").show();
        var d = $("#ddlComponent option:selected").text();
        if (compList.length > 0) {
            for (var q = 0; q < compList.length; q++) {
                if (compList[q].ComponentName == d) {
                    //alert('Must be different Component...');
                    var msg = 'Must be different Component...';
                    var flg = 4;
                    var mo = 1;
                    AlartMessage(msg, flg, mo);
                    return true;
                }
            }
        }
        var leng = 0;

        var isAllValid = true;


        if ($('#ddlComponent').val() == "0") {

            //$('#ddlComponent').siblings('span.error').css('visibility', 'visible');

            //$('#ddlComponent').css('border-color', 'Red');
            $('#ddlComponent').siblings(".select2-container").css('border', '1px solid red');

            isAllValid = false;
        }
        else {
            //$('#ddlComponent').siblings('span.error').css('visibility', 'hidden');

            //$('#ddlComponent').css('border-color', 'lightgrey');
            $('#ddlComponent').siblings(".select2-container").css('border', '1px solid lightgrey');
        }

        if ($('#txtParts').val() == "") {
            isAllValid = false;
            $('#txtParts').css('border-color', 'Red');
        }
        else {
            $('#txtParts').css('border-color', 'lightgrey');
        }

        if ($('#ddlType').val() == "0") {
            isAllValid = false;
            //$('#ddlType').css('border-color', 'Red');
            $('#ddlType').siblings(".select2-container").css('border', '1px solid red');

        }
        else {
            //$('#ddlType').css('border-color', 'lightgrey');
            $('#ddlType').siblings(".select2-container").css('border', '1px solid lightgrey');

        }
        if ($('#ddlGroup').val() == "0") {
            isAllValid = false;
            //$('#ddlGroup').css('border-color', 'Red');
            $('#ddlGroup').siblings(".select2-container").css('border', '1px solid red');

        }
        else {
            //$('#ddlGroup').css('border-color', 'lightgrey');
            $('#ddlGroup').siblings(".select2-container").css('border', '1px solid lightgrey');
        }
        if ($('#ddlFabric').val() == "0") {
            isAllValid = false;
            //$('#ddlFabric').css('border-color', 'Red');
            $('#ddlFabric').siblings(".select2-container").css('border', '1px solid red');

        }
        else {
            //$('#ddlFabric').css('border-color', 'lightgrey');
            $('#ddlFabric').siblings(".select2-container").css('border', '1px solid lightgrey');
        }

        //if (compList.length == 0) {
        //    leng = 1;
        //    Yarnid = 1;
        //}
        //else {
        //    leng = compList.length + 1;
        //    Yarnid = compList.length + 1;
        //}

        var slno = [];
        $.each(compList, function () {
            var sl = this.CompSlNo;
            slno.push(sl);
        });
        var largest = 0;

        for (var i = 0; i < slno.length; i++) {
            if (slno[i] > largest) {
                var largest = slno[i];
            }
        }

        leng = largest +1;
        Yarnid = largest +1;


        if (isAllValid) {

            var compListObj = {
                ComponentName: $("#ddlComponent option:selected").text(),
                ComponentID: $('#ddlComponent').val(),
                No_Of_Parts: $('#txtParts').val(),
                Fabric_Type: $("#ddlType option:selected").text(),
                Fabric_TypeID: $('#ddlType').val(),
                Grouping: $("#ddlGroup option:selected").text(),
                GroupingID: $('#ddlGroup').val(),
                Description: $('#txtDesc').val(),
                FabricName: $("#ddlFabric option:selected").text(),
                FabricID: $('#ddlFabric').val(),
                CompSlNo: leng,
                Entry_Date: new Date($('#txtEntryDate').val()),
                Comp_Plan_MasID: 0,
                GSM: $('#txtGsm').val(),
                Status: ['<img src="images/first.png" class="btnSave"><img src="images/delete.png" class="btnDelete"/>']
            };

            compList.push(compListObj);

            loadcomponentTable(compListObj);

            CompSlNo = leng ;

            connewadd = 1;
            //Fabric

            FabricId = $('#ddlFabric option:selected').val();
            Fabric = $("#ddlFabric option:selected").text();

            gsm = $('#txtGsm').val();
            parts = $('#txtParts').val();

            type = $("#ddlType option:selected").text();

            var gr = $("#ddlGroup option:selected").text();
            Chkgroup(gr);
            fnClearCompControls();

            //Consumption
            //ClearCon();
            if (compListObj.Grouping == "COLOR/SIZE") {

                ListConsump(ItemId, StyleRId, "CS", leng);

            } else if (compListObj.Grouping == "AVERAGE") {

                ListConsump(ItemId, StyleRId, "A", leng);

            } else if (compListObj.Grouping == "COLOR") {
                ListConsump(ItemId, StyleRId, "C", leng);
            }
            else if (compListObj.Grouping == "SIZE") {
                ListConsump(ItemId, StyleRId, "S", leng);
            }

            //Fabric
            //LoadCompFabricItemDetails(ItemId, StyleRId, leng);


        }
    });

    $(document).on('click', '.btncompedit', function () {
        debugger;
        Mode = 1;

        rowindex = $(this).closest('tr').index();

        var currentro12 = compList.slice(rowindex);

        $('#ddlComponent').val(currentro12[0]['ComponentID']).trigger('change');
        $('#ddlFabric').val(currentro12[0]['FabricID']).trigger('change');
        $('#ddlGroup').val(currentro12[0]['GroupingID']).trigger('change');
        $('#ddlType').val(currentro12[0]['Fabric_TypeID']).trigger('change');
        $('#txtDesc').val(currentro12[0]['Description']);
        $('#txtParts').val(currentro12[0]['No_Of_Parts']);
        $('#txtGsm').val(currentro12[0]['GSM']);


        $('#btncomponentadd').hide();
        $('#btncomponentupdate').show();
    });

    $('#btncomponentupdate').click(function () {
        debugger;

        var currentrowsel1 = compList.slice(rowindex);
        var ncomps = currentrowsel1[0]['CompSlNo'];


        var TempcompList = $.grep(compList, function (e) {
            return e.CompSlNo == ncomps;
        });

        if (TempcompList.length > 0) {
            var ntype = TempcompList[0].Fabric_Type;
            var ngroup = TempcompList[0].Grouping;
        }





        var isAllValid = true;


        if ($('#ddlComponent').val() == "0") {

            //$('#ddlComponent').siblings('span.error').css('visibility', 'visible');

            //$('#ddlComponent').css('border-color', 'Red');
            $('#ddlComponent').siblings(".select2-container").css('border', '1px solid red');
            isAllValid = false;
        }
        else {
            $('#ddlComponent').siblings('span.error').css('visibility', 'hidden');

            //$('#ddlComponent').css('border-color', 'lightgrey');
            //$('#ddlcity').siblings(".select2-container").css('border', 'lightgrey');
        }

        if ($('#txtParts').val() == "") {
            isAllValid = false;
            $('#txtParts').css('border-color', 'Red');
        }
        else {
            $('#txtParts').css('border-color', 'lightgrey');
        }

        if ($('#ddlType').val() == "0") {
            isAllValid = false;
            // $('#ddlType').css('border-color', 'Red');
            $('#ddlType').siblings(".select2-container").css('border', '1px solid red');
        }
        else {
            //$('#ddlType').css('border-color', 'lightgrey');
            $('#ddlType').siblings(".select2-container").css('border', 'lightgrey');
        }
        if ($('#ddlGroup').val() == "0") {
            isAllValid = false;
            //$('#ddlGroup').css('border-color', 'Red');
            $('#ddlGroup').siblings(".select2-container").css('border', '1px solid red');
        }
        else {
            //$('#ddlGroup').css('border-color', 'lightgrey');
            $('#ddlGroup').siblings(".select2-container").css('border', 'lightgrey');
        }
        if ($('#ddlFabric').val() == "0") {
            isAllValid = false;
            //$('#ddlFabric').css('border-color', 'Red');
            $('#ddlFabric').siblings(".select2-container").css('border', '1px solid red');
        }
        else {
            //$('#ddlFabric').css('border-color', 'lightgrey');
            $('#ddlFabric').siblings(".select2-container").css('border', 'lightgrey');
        }

        if (isAllValid) {
            var currentrowsel = compList.slice(rowindex);

            currentrowsel[0]['ComponentID'] = $("#ddlComponent").val();
            currentrowsel[0]['ComponentName'] = $("#ddlComponent option:selected").text();
            currentrowsel[0]['FabricID'] = $("#ddlFabric").val();
            currentrowsel[0]['FabricName'] = $("#ddlFabric option:selected").text();
            currentrowsel[0]['GroupingID'] = $("#ddlGroup option:selected").val();
            currentrowsel[0]['Grouping'] = $("#ddlGroup option:selected").text();
            currentrowsel[0]['Fabric_TypeID'] = $("#ddlType").val();
            currentrowsel[0]['Fabric_Type'] = $("#ddlType option:selected").val();
            currentrowsel[0]['Description'] = $("#txtDesc").val();
            currentrowsel[0]['No_Of_Parts'] = $("#txtParts").val();
            currentrowsel[0]['GSM'] = $("#txtGsm").val();

            var comps = currentrowsel[0]['CompSlNo'];
            compList[rowindex] = currentrowsel[0];
            CompSlNo = comps;
            ComSNo = comps;
            Yarnid = comps;
            loadcomponentTable(compList);

            $('#btncomponentupdate').hide();
            $('#btncomponentadd').show();

            FabricId = $('#ddlFabric option:selected').val();
            Fabric = $("#ddlFabric option:selected").text();

            gsm = $('#txtGsm').val();
            parts = $('#txtParts').val();

            type = $("#ddlType option:selected").text();


            var newtype = $("#ddlType").val();

            var gr = $("#ddlGroup option:selected").text();
            Chkgroup(gr);



            if (ntype == newtype) {
                checktype = 1;
            }
            if (ngroup == gr) {
                checkgroup = 1;
            }

            //YarnMasSl = 'U';

            fnClearCompControls();

            // Mode = 0;

            //Delete old rows

            if (checktype == 0 || checkgroup == 0) {
                if (comps != undefined) {
                    if (ConItemListSave.length > 0) {

                        ConItemListSave = $.grep(ConItemListSave, function (e) {
                            return e.CompSlNo != comps;
                        });

                        loadconSaveTable(ConItemListSave);

                        ConItemList = $.grep(ConItemList, function (e) {
                            return e.CompSlNo != comps;
                        });
                        loadAdConTable(ConItemList);
                    }

                    //if (PlanCompFabricDetSave.length > 0) {
                    //    PlanCompFabricDetSave = $.grep(PlanCompFabricDetSave, function (e) {
                    //        return e.CompSlNo != comps;
                    //    });
                    //    loadCompFabSaveTable(PlanCompFabricDetSave);

                    //    PlanCompFabricDet = $.grep(PlanCompFabricDet, function (e) {
                    //        return e.CompSlNo != comps;
                    //    });
                    //    loadCompFabTable(PlanCompFabricDet);
                    //}

                    //if (PlanYarnSave.length > 0) {
                    //    PlanYarnSave = $.grep(PlanYarnSave, function (e) {
                    //        return e.SlNo != comps;
                    //    });

                    //    loadYarnSavedetTab(PlanYarnSave);

                    //    PlanYarn = $.grep(PlanYarn, function (e) {
                    //        return e.SlNo != comps;
                    //    });
                    //    loadYarndetTab(PlanYarn);
                    //}

                    //if (PlanYarnDetSave.length > 0) {
                    //    PlanYarnDetSave = $.grep(PlanYarnDetSave, function (e) {
                    //        return e.CompSno != comps;
                    //    });
                    //    LoadsepSaveyarn(PlanYarnDetSave);

                    //    PlanYarnDet = $.grep(PlanYarnDet, function (e) {
                    //        return e.CompSno != comps;
                    //    });
                    //    Loadsepyarn(PlanYarnDet);
                    //}

                    //if (PlanLossSave.length > 0) {
                    //    PlanLossSave = $.grep(PlanLossSave, function (e) {
                    //        return e.CompSNo != comps;
                    //    });
                    //    loadFabricLossSaveTable(PlanLossSave);

                    //    PlanLoss = $.grep(PlanLoss, function (e) {
                    //        return e.CompSNo != comps;
                    //    });
                    //    loadFabricLossTable(PlanLoss);
                    //}


                    //if (PlanYarnLossSave.length > 0) {
                    //    PlanYarnLossSave = $.grep(PlanYarnLossSave, function (e) {
                    //        return e.CompSNo != comps;
                    //    });
                    //    loadyarnLossSaveTable(PlanYarnLossSave);

                    //    PlanYarnLoss = $.grep(PlanYarnLoss, function (e) {
                    //        return e.CompSNo != comps;
                    //    });
                    //    loadyarnLossTable(PlanYarnLoss);
                    //}

                    //if (PlanYarnDyeingSave.length > 0) {

                    //}
                }
            }
            var leng = 0;

            if (compList.length == 0) {
                leng = 1;
                //Yarnid = 1;
            }
            else {
                leng = compList.length + 1;
                //Yarnid = compList.length + 1;
            }

            //if (Mod == 0) {
            //Consumption

            if (currentrowsel[0].Grouping == "COLOR/SIZE") {

                ListConsump(ItemId, StyleRId, "CS", comps);

            } else if (currentrowsel[0].Grouping == "AVERAGE") {

                ListConsump(ItemId, StyleRId, "A", comps);

            } else if (currentrowsel[0].Grouping == "COLOR") {
                ListConsump(ItemId, StyleRId, "C", comps);
            }
            else if (currentrowsel[0].Grouping == "SIZE") {
                ListConsump(ItemId, StyleRId, "S", comps);
            }



            //Fabric
            // LoadCompFabricItemDetails(ItemId, StyleRId, comps);
            // }

            //if (Mod == 1 || Mod == 2) {

            //    EditDetCompPlanList(ItemId, StyleRId, PLID);
            //    getfabric();
            //    var CompSNo = 1;
            //    var gs = 0;
            //    EditDetConPlanTotList(ItemId, StyleRId, PLID, gs);
            //    loadprintlistcolor();
            //    var BCID = 0;
            //    var FID = 0;
            //    var CompId = 0;
            //    var YlNo = 0;
            //    LoadYarnDyeing(StyleRowId, ItemId, BCID, FID, CompId, YlNo);


            //}
        };
    });
    $(document).on('click', '.btncompremove', function () {
        debugger;
        rowindex = $(this).closest('tr').index();
        var currentrowsel = compList.slice(rowindex);
        var compsn = currentrowsel[0]['CompSlNo'];
        compList.splice(rowindex, 1);
        document.getElementById("tblcompdetails").deleteRow(rowindex + 1);

        if (ConItemListSave.length > 0) {
            //for (var g = 0; g < ConItemListSave.length; g++) {
            //    if (ConItemListSave[g].CompSlNo == compsn) {
            //        ConItemListSave.splice(g, 1);
            //    }
            //}

            ConItemListSave = $.grep(ConItemListSave, function (e) {

                return e.CompSlNo != compsn;

            });
            loadconSaveTable(ConItemListSave);

            //for (var g = 0; g < ConItemList.length; g++) {
            //    if (ConItemList[g].CompSlNo == compsn) {
            //        ConItemList.splice(g, 1);
            //    }
            //}

            ConItemList = $.grep(ConItemList, function (e) {

                return e.CompSlNo != compsn;

            });
            loadAdConTable(ConItemList);
        }

        //if (PlanCompFabricDetSave.length > 0) {
        //    //for (var g = 0; g < PlanCompFabricDetSave.length; g++) {
        //    //    if (PlanCompFabricDetSave[g].CompSlNo == compsn) {
        //    //        PlanCompFabricDetSave.splice(g, 1);
        //    //    }
        //    //}

        //    PlanCompFabricDetSave = $.grep(PlanCompFabricDetSave, function (e) {

        //        return e.CompSlNo != compsn;

        //    });
        //    loadCompFabSaveTable(PlanCompFabricDetSave);

        //    //for (var g = 0; g < PlanCompFabricDet.length; g++) {
        //    //    if (PlanCompFabricDet[g].CompSlNo == compsn) {
        //    //        PlanCompFabricDet.splice(g, 1);
        //    //    }
        //    //}
        //    PlanCompFabricDet = $.grep(PlanCompFabricDet, function (e) {

        //        return e.CompSlNo != compsn;

        //    });
        //    loadCompFabTable(PlanCompFabricDet);
        //}

        //if (PlanYarnSave.length > 0) {
        //    //for (var g = 0; g < PlanYarnSave.length; g++) {
        //    //    if (PlanYarnSave[g].SlNo == compsn) {
        //    //        PlanYarnSave.splice(g, 1);
        //    //    }
        //    //}
        //    PlanYarnSave = $.grep(PlanYarnSave, function (e) {

        //        return e.SlNo != compsn;

        //    });
        //    loadYarnSavedetTab(PlanYarnSave);

        //    //for (var g = 0; g < PlanYarn.length; g++) {
        //    //    if (PlanYarn[g].SlNo == compsn) {
        //    //        PlanYarn.splice(g, 1);
        //    //    }
        //    //}
        //    PlanYarn = $.grep(PlanYarn, function (e) {

        //        return e.SlNo != compsn;

        //    });
        //    loadYarndetTab(PlanYarn);
        //}

        //if (PlanYarnDetSave.length > 0) {
        //    //for (var g = 0; g < PlanYarnDetSave.length; g++) {
        //    //    if (PlanYarnDetSave[g].CompSno == compsn) {
        //    //        PlanYarnDetSave.splice(g, 1);
        //    //        g++;
        //    //    }
        //    //}
        //    PlanYarnDetSave = $.grep(PlanYarnDetSave, function (e) {

        //        return e.CompSno != compsn;

        //    });
        //    LoadsepSaveyarn(PlanYarnDetSave);

        //    //for (var g = 0; g < PlanYarnDet.length; g++) {
        //    //    if (PlanYarnDet[g].CompSno == compsn) {
        //    //        PlanYarnDet.splice(g, 1);
        //    //    }
        //    //}
        //    PlanYarnDet = $.grep(PlanYarnDet, function (e) {

        //        return e.CompSno != compsn;

        //    });
        //    Loadsepyarn(PlanYarnDet);
        //}

        //if (PlanLossSave.length > 0) {
        //    //for (var g = 0; g < PlanLossSave.length; g++) {
        //    //    if (PlanLossSave[g].CompSNo == compsn) {
        //    //        PlanLossSave.splice(g, 1);
        //    //    }
        //    //}
        //    PlanLossSave = $.grep(PlanLossSave, function (e) {

        //        return e.CompSNo != compsn;

        //    });
        //    loadFabricLossSaveTable(PlanLossSave);

        //    //for (var g = 0; g < PlanLoss.length; g++) {
        //    //    if (PlanLoss[g].CompSNo == compsn) {
        //    //        PlanLoss.splice(g, 1);
        //    //    }
        //    //}
        //    PlanLoss = $.grep(PlanLoss, function (e) {
        //        return e.CompSNo != compsn;

        //    });
        //    loadFabricLossTable(PlanLoss);
        //}


        //if (PlanYarnLossSave.length > 0) {
        //    //for (var g = 0; g < PlanYarnLossSave.length; g++) {
        //    //    if (PlanYarnLossSave[g].CompSNo == compsn) {
        //    //        PlanYarnLossSave.splice(g, 1);
        //    //    }
        //    //}
        //    PlanYarnLossSave = $.grep(PlanYarnLossSave, function (e) {
        //        return e.CompSNo != compsn;

        //    });
        //    loadyarnLossSaveTable(PlanYarnLossSave);

        //    //for (var g = 0; g < PlanYarnLoss.length; g++) {
        //    //    if (PlanYarnLoss[g].CompSNo == compsn) {
        //    //        PlanYarnLoss.splice(g, 1);
        //    //    }
        //    //}
        //    PlanYarnLoss = $.grep(PlanYarnLoss, function (e) {
        //        return e.CompSNo != compsn;

        //    });
        //    loadyarnLossTable(PlanYarnLoss);
        //}

        //if (PlanYarnDyeingSave.length > 0) {

        //}
    });

});


function loadcomponentTable(compListObj) {
    debugger;
    // $('#tblcompdetails').DataTable().destroy();
    var inputcount = 0;
    $('#tblcompdetails tr').each(function () {
        inputcount++;
    });

    if (inputcount > 0) {
        $('#tblcompdetails').DataTable().destroy();
    }
    $('#tblcompdetails').empty();
    compList.sort(function (a, b) {
        return a.CompSlNo - b.CompSlNo;
    })
    $('#tblcompdetails').DataTable({
        //'bSortable': false,
        //'aTargets' : [ 7, 8 ],
        data: compList,
        scrollY: 300,
        scrollCollapse: true,
        paging: false,
        fixedColumns: false,
        select: false,
        scrollX: "100%",
        scrollXInner: "100%",
        scroller: false,
        "bSort": false,
        "rowCallback": function (row, data, index) {
            if (data.CheckDcMade > "0") {
                $('td', row).css('background-color', '#FCF3CF');

            }

        },
        columns: [
             { title: "Comp SlNo", data: "CompSlNo", "visible": false },
            { title: "Comp_Plan_MasID", data: "Comp_Plan_MasID", "visible": false },
            { title: "ComponentID", data: "ComponentID", "visible": false },
            { title: "Component Name", data: "ComponentName" },
            { title: "Parts", data: "No_Of_Parts" },
            { title: "Type", data: "Fabric_Type" },
            { title: "Gsm", data: "GSM" },
            { title: "Grouping", data: "Grouping" },
            { title: "Description", data: "Description" },
            { title: "FabricID", data: "FabricID", "visible": false },
            { title: "Fabric Name", data: "FabricName" },

               {
                   title: "ACTION", "mDataProp": null,
                   "sDefaultContent": '<div style="display:inline-flex"><button type="button" data-toggle="tooltip" data-placement="top" title="Edit" style="width: 20px;padding: 0px;height: 20px;border-radius:10px;" class="btncompedit btn btn-round btn-warning"> <i class="fa fa-pencil-square-o"></i> </button> <button type="button" data-toggle="tooltip" data-placement="top" title="Remove" style="width: 20px;padding: 0px;height: 20px;border-radius:10px;" class="btncompremove btn btn-round btn-danger"> <i class="fa fa-times"></i> </button></div>'
               }
        ]
    });


    $("#tblcompdetails tr").click(function () {
        var selected = $(this).hasClass("selected");
        $("#tblcompdetails tr").removeClass("selected");
        if (!selected)
            $(this).addClass("selected");
    });




}

function GetStyleNo() {
    debugger;
    var OrderNo = '';
    var ON = $('#ddlCpyOrderNo').val();
    if (ON == 0) {
        OrderNo = "";
        //alert('Please select any OrderNo...');
        var msg = 'Please select any Order Number...';
        var flg = 4;
        var mo = 1;
        AlartMessage(msg, flg, mo);
        //return false;
    }
    else {
        OrderNo = $('#ddlCpyOrderNo option:selected').text();
    }
    $.ajax({
        url: "/PlanningConsumption/GetStyleNumber/",
        data: JSON.stringify({ OrdNo: OrderNo }),
        type: "POST",
        contentType: "application/json;charset=UTF-8",
        //dataType: "json",
        success: function (result) {
            debugger;
            var obj = result.Value;
            CpyStyle = obj;

            var compdet = {};
            var comp = [];

            $.each(obj, function (i, el) {

                if (!compdet[el.StyleID]) {
                    compdet[el.StyleID] = true;
                    comp.push(el);
                }
            });

            $('#ddlCpyStyle').empty();
            $('#ddlCpyStyle').append($('<option/>').val('0').text('--Select Style--'));
            $.each(comp, function () {
                $('#ddlCpyStyle').append($('<option></option>').val(this.StyleID).text(this.Style));
            });


        },
        error: function (errormessage) {
            debugger;
            alert(errormessage.responseText);
        }
    });
}
function GetItem() {
    var OrderNo = '';
    var ON = $('#ddlCpyOrderNo').val();
    if (ON == 0) {
        OrderNo = "";
        //alert('Please select any OrderNo...');
        var msg = 'Please select any Order Number...';
        var flg = 4;
        var mo = 1;
        AlartMessage(msg, flg, mo);
        return false;
    }
    else {
        OrderNo = $('#ddlCpyOrderNo option:selected').text();
    }

    var StyleNo = '';
    var Sty = $('#ddlCpyStyle').val();
    if (Sty == 0) {
        StyleNo = "";
        //alert('Please select any Style...');
        var msg = 'Please select any Style...';
        var flg = 4;
        var mo = 1;
        AlartMessage(msg, flg, mo);
        return false;
    }
    else {
        StyleNo = $('#ddlCpyStyle option:selected').val();
    }
    var obj = $.grep(CpyStyle, function (e) {
        return e.Order_No == OrderNo && e.StyleID == StyleNo;
    });

    var compdet = {};
    var comp = [];

    $.each(obj, function (i, el) {

        if (!compdet[el.ItemID]) {
            compdet[el.ItemID] = true;
            comp.push(el);
        }
    });
    $('#ddlCpyItem').empty();
    $('#ddlCpyItem').append($('<option/>').val('0').text('--Select Item--'));
    $.each(comp, function () {
        $('#ddlCpyItem').append($('<option></option>').val(this.ItemID).text(this.Item));
    });
}

function LoadCpyOrdData() {
    debugger;
    var OrdN = $('#ddlCpyOrderNo').val();
    var StyN = $('#ddlCpyStyle').val();
    var Itm = $('#ddlCpyItem').val();
    if (OrdN != 0 && StyN != 0) {
        var ord = $('#ddlCpyOrderNo option:selected').text();
        var styid = $('#ddlCpyStyle').val();
        var itmid = $('#ddlCpyItem').val();
        var res = $.grep(CpyStyle, function (e) {
            return e.Order_No == ord && e.StyleID == styid && e.ItemID == itmid;
        });
        if (res.length == 1) {
            CpyMode = 1;
            var styrw = res[0].StyleRowid;
            var plnid = res[0].PlanID;
            //ItemId = itmid;
            //StyleRId = styrw;
            //PLID = plnid;
            $('#CompList').show();
            CpyDetCompPlanList(itmid, styrw, plnid);
            CpyDetConPlanList(itmid, styrw, plnid);

        }
    }
    else {
        var msg = 'Please Select Order Number and Style...';
        var flg = 4;
        var mo = 1;
        AlartMessage(msg, flg, mo);
        //alert('Please Select OrderNo and Style...');
    }

}

function CpyDetCompPlanList(PItemId, StyleRowId, PLID) {
    debugger;

    $.ajax({
        url: "/PlanningConsumption/ListCompDetDetails",
        data: JSON.stringify({ PItemId: PItemId, StyleRowId: StyleRowId, PlanID: PLID }),
        type: "POST",
        contentType: "application/json;charset=utf-8",
        dataType: "json",
        success: function (result) {
            debugger;
            compList = result;
            loadcomponentTable(compList);

            if (compList.length == 0) {
                //alert("Planning Consumption is not made for this Order,Please Select Any Other Order...");
                var msg = 'Planning Consumption is not made for this Order,Please Select Any Other Order...';
                var flg = 4;
                var mo = 1;
                AlartMessage(msg, flg, mo);
                $("#ddlCpyOrderNo").val(0);
                $("#ddlCpyStyle").val(0);
                $("#ddlCpyItem").val(0);
                return true;
            } else {

                CompSlNo = compList[0].CompSlNo;
                var Slno = compList[0].CompSlNo;
                gsm = compList[0].GSM;
                var tp = compList[0].Fabric_Type;
                if (tp == 'P') {
                    type = 'PANELS'
                }
                else if (tp == 'W') {
                    type = 'WOVEN'
                }
                else if (tp == 'K') {
                    type = 'KNITS'
                }
            }
        },
        failure: function (errMsg) {
            alert(errMsg);
        }
    });
}
function CpyDetConPlanList(PItemId, StyleRowId, PLID) {
    debugger;

    $.ajax({
        url: "/PlanningConsumption/TotListCopyConDetDetails",
        data: JSON.stringify({ PItemId: PItemId, StyleRowId: StyleRowId, PlanID: PLID, CopyStyRowID: StyleRId, CopyItemID: ItemId }),
        type: "POST",
        contentType: "application/json;charset=utf-8",
        dataType: "json",
        success: function (result) {

            debugger;
            ConItemListSave = result;
            loadconSaveTable(ConItemListSave);

            $.each(ConItemListSave, function () {
                if (this.CompSlNo == CompSlNo) {
                    this.GSM = gsm;

                }
            });
            loadconSaveTable(ConItemListSave);
            var colorempty = [];
            colorempty = ConItemListSave;

            colorempty = $.grep(colorempty, function (v) {
                return (v.CompSlNo == CompSlNo);
            });

            ConItemList = colorempty;
            loadAdConTable(ConItemList);
            ConsmtnHideCol(type);
            if (ConItemListSave.length > 0) {
                Loadtotcopyfabriceditdet(PLID);
            }
        },
        failure: function (errMsg) {
            alert(errMsg);
        }
    });


}
$(document).ready(function () {

    $('#tblcompdetails').on('click', 'tr', function (e) {

        debugger;
        var table = $('#tblcompdetails').DataTable();
        var row = $(this).closest('tr');
        var data = $('#tblcompdetails').dataTable().fnGetData(row);

        ///alert(data.CompSlNo);



        var table = $('#tblcompdetails').DataTable();
        //CompSlNo = table.row($(this).parents('tr')).data()["CompSlNo"];
        //var Slno = table.row($(this).parents('tr')).data()["CompSlNo"];
        //var gsm = table.row($(this).parents('tr')).data()["GSM"];
        //FabricId = table.row($(this).parents('tr')).data()["FabricID"];
        //Fabric = table.row($(this).parents('tr')).data()["FabricName"];

        CompSlNo = data.CompSlNo;
        var checkdc = data.CheckDcMade;

        if (checkdc > 0) {
            $("#ddlFabric").prop("disabled", true);
            $("#ddlComponent").prop("disabled", true);
            $("#ddlType").prop("disabled", true);
            $("#ddlGroup").prop("disabled", true);
        } else {
            $("#ddlFabric").prop("disabled", false);
            $("#ddlComponent").prop("disabled", false);
            $("#ddlType").prop("disabled", false);
            $("#ddlGroup").prop("disabled", false);
        }
        var Slno = data.CompSlNo;
        gsm = data.GSM;
        FabricId = data.FabricID;
        Fabric = data.FabricName;
        type = data.Fabric_Type;
        Yarnid = CompSlNo;
        if (Mod == 1 || Mod == 2 || CpyMode == 1) {
            var tp = data.Fabric_Type;
            if (tp == 'P') {
                type = 'PANELS'
            }
            else if (tp == 'W') {
                type = 'WOVEN'
            }
            else if (tp == 'K') {
                type = 'KNITS'
            }
        }
        var grp = data.Grouping;

        Chkgroup(grp);
        if (CpyMode == 1) {
            //Fabric             
            parts = data.No_Of_Parts;

            //Consumption
            //ClearCon();
            if (data.Grouping == "COLOR/SIZE") {

                ListConsump(ItemId, StyleRId, "CS", CompSlNo);

            } else if (data.Grouping == "AVERAGE") {

                ListConsump(ItemId, StyleRId, "A", CompSlNo);

            } else if (data.Grouping == "COLOR") {
                ListConsump(ItemId, StyleRId, "C", CompSlNo);
            }
            else if (data.Grouping == "SIZE") {
                ListConsump(ItemId, StyleRId, "S", CompSlNo);
            }

            //Fabric
            //LoadCompFabricItemDetails(ItemId, StyleRId, CompSlNo);

        }



        //Consumption
        $.each(ConItemListSave, function () {
            if (this.CompSlNo == Slno) {
                this.GSM = gsm;

            }
        });

        //loadconSaveTable(ConItemListSave);
        var colorempty = [];
        colorempty = ConItemListSave;

        colorempty = $.grep(colorempty, function (v) {
            return (v.CompSlNo == Slno);
        });

        ConItemList = colorempty;
        loadAdConTable(ConItemList);

        //for (var h = 0; h < ConItemList.length; h++) {

        //    var comsn = ConItemList[h].CompSlNo;
        //    var consn = ConItemList[h].CPlanSlNo;
        //    var conweg = ConItemList[h].Weight;
        //    var alln = ConItemList[h].AlloLen;
        //    var allw = ConItemList[h].AllowWid;
        //    var gs = ConItemList[h].GSM;
        //    var gm = ConItemList[h].Grammage;
        //    var len = ConItemList[h].Length;
        //    var tp = ConItemList[h].TotPieces;
        //    var we = ConItemList[h].Weight;
        //    var wi = ConItemList[h].Width;


        //    var table = $('#tCPIbody').DataTable();
        //    var ecdata = table.rows().data();

        //    $('input[id=txtWght]').each(function (ig) {
        //        //if (ecdata[ig].CompSlNo == comsn && ecdata[ig].CPlanSlNo == consn && ecdata[ig].CompSlNo == CompSlNo) {
        //        if (comsn == CompSlNo && ecdata[ig].CPlanSlNo == consn) {
        //            var row = $(this).closest('tr');
        //            row.find('#txtLen').val(len);
        //            row.find('#txtallowLen').val(alln);
        //            row.find('#txtWidth').val(wi);
        //            row.find('#txtalloeWidth').val(allw);
        //            row.find('#txtGsm').val(gs);
        //            row.find('#txtGram').val(gm);
        //            row.find('#txtWght').val(conweg);

        //            //}
        //        }
        //    });


        //}






        //Fabric
        //var color = [];
        //color = PlanCompFabricDetSave;

        //color = $.grep(color, function (v) {
        //    return (v.CompSlNo == Slno);
        //});

        //PlanCompFabricDet = color;
        //loadCompFabTable(PlanCompFabricDet);


        // totwght();

        //Yarysslno
        //var yarn = [];
        //yarn = PlanYarnSave;
        //if (yarn.length > 0) {
        //    yslno = PlanYarnSave[0].YSlno;
        //    cl = PlanYarnSave[0].SlNo;
        //    yarn = $.grep(yarn, function (v) {
        //        return (v.SlNo == Slno);
        //    });

        //    PlanYarn = yarn;
        //    loadYarndetTab(PlanYarn);

        //    if (PlanYarn.length > 0) {
        //        fabid = PlanYarn[0].FabricID;
        //        ysslno = yarn[0].YSlno;
        //    }
        //    if (PlanYarnDetSave.length > 0) {
        //        var ctry = [];
        //        ctry = PlanYarnDetSave;
        //        ctry = $.grep(ctry, function (e) {
        //            if (e.CompSno == Slno && e.YSlNo == ysslno) {
        //                return e;
        //            }
        //        });
        //        PlanYarnDet = ctry;
        //        Loadsepyarn(PlanYarnDet);
        //        if (PlanYarnDet.length > 0) {

        //            YarndetCompsn = PlanYarnDet[0].CompSno;
        //            YarndetSlno = PlanYarnDet[0].SlNo;
        //        }
        //    }


        //}
        //Fabric loss

        //if (PlanLossSave.length > 0) {
        //    var colorempty = [];
        //    colorempty = PlanLossSave;

        //    if (Mod == 0) {
        //        colorempty = $.grep(colorempty, function (v) {
        //            return (v.CompSNo == CompSlNo);
        //        });

        //        PlanLoss = colorempty;
        //        loadFabricLossTable(PlanLoss);

        //        var totalamnt = 0;
        //        for (var e = 0; e < PlanLossSave.length; e++) {
        //            if (PlanLossSave[e].CompSNo == CompSlNo) {
        //                var amount = PlanLossSave[e].Loss_Per;
        //                totalamnt = totalamnt + parseFloat(amount);
        //            }
        //        }
        //        $('#txttotfabloss').val(totalamnt);
        //    }
        //    else {
        //        Fplid = PlanCompFabricDet[0].FPlanId;
        //        csl = PlanCompFabricDet[0].CompSlNo;
        //        colorempty = $.grep(PlanLossSave, function (v) {
        //            return (v.CompSNo == csl);
        //        });
        //        PlanLoss = colorempty;
        //        loadFabricLossTable(PlanLoss);

        //        var totalamnt = 0;
        //        for (var e = 0; e < PlanLossSave.length; e++) {
        //            if (PlanLossSave[e].CompSNo == csl) {
        //                var amount = PlanLossSave[e].Loss_Per;
        //                totalamnt = totalamnt + parseFloat(amount);
        //            }
        //        }
        //        $('#txttotfabloss').val(totalamnt);
        //    }
        //}

        //Yarn loss

        //if (PlanYarnLossSave.length > 0) {
        //    PlanYarnLoss = PlanYarnLossSave;
        //    PlanYarnLoss = $.grep(PlanYarnLoss, function (e) {
        //        return e.CompSNo == YarndetCompsn && e.SNo == YarndetSlno;
        //    });
        //    loadyarnLossTable(PlanYarnLoss);
        //}

        ConsmtnHideCol(type);
        totconwght();


    });


    $("#ddlFabProcess").change(function () {
        //if (UserName.toUpperCase() != "SUPERUSER") {
         //   LoadProcessLoss();
        //}
    });
});


function ConsmtnHideCol(type) {
    var tbl = $('#tCPIbody');


    if (type == 'KNITS') {
        //tbl.DataTable().column(12).visible(false);
        //tbl.DataTable().column(13).visible(false);

        tbl.DataTable().column(15).visible(false);
        tbl.DataTable().column(16).visible(false);
        tbl.DataTable().column(17).visible(false);
        tbl.DataTable().column(18).visible(false);
        tbl.DataTable().column(19).visible(false);
        tbl.DataTable().column(20).visible(false);

        tbl.DataTable().column(3).visible(true);
        tbl.DataTable().column(4).visible(true);
        tbl.DataTable().column(6).visible(true);
        tbl.DataTable().column(8).visible(true);
        tbl.DataTable().column(9).visible(true);
        tbl.DataTable().column(10).visible(true);
        tbl.DataTable().column(11).visible(true);

        tbl.DataTable().column(12).visible(true);
        tbl.DataTable().column(13).visible(true);
        tbl.DataTable().column(14).visible(true);

        tbl.DataTable().column(21).visible(true);
        tbl.DataTable().column(22).visible(true);
        tbl.DataTable().column(23).visible(true);
    }
    else if (type == 'WOVEN') {
        tbl.DataTable().column(8).visible(false);
        tbl.DataTable().column(9).visible(false);
        tbl.DataTable().column(10).visible(false);
        tbl.DataTable().column(11).visible(false);
        tbl.DataTable().column(12).visible(false);
        tbl.DataTable().column(13).visible(false);
        tbl.DataTable().column(14).visible(false);

        tbl.DataTable().column(18).visible(false);
        tbl.DataTable().column(19).visible(false);
        tbl.DataTable().column(20).visible(false);


        tbl.DataTable().column(3).visible(true);
        tbl.DataTable().column(4).visible(true);
        tbl.DataTable().column(6).visible(true);

        tbl.DataTable().column(15).visible(true);
        tbl.DataTable().column(16).visible(true);
        tbl.DataTable().column(17).visible(true);

        tbl.DataTable().column(21).visible(true);
        tbl.DataTable().column(22).visible(true);
        tbl.DataTable().column(23).visible(true);
    }
    else if (type == 'PANELS') {
        tbl.DataTable().column(8).visible(false);
        tbl.DataTable().column(9).visible(false);
        tbl.DataTable().column(10).visible(false);
        tbl.DataTable().column(11).visible(false);
        tbl.DataTable().column(12).visible(false);
        tbl.DataTable().column(13).visible(false);
        tbl.DataTable().column(14).visible(false);
        tbl.DataTable().column(15).visible(false);
        tbl.DataTable().column(16).visible(false);
        tbl.DataTable().column(17).visible(false);


        tbl.DataTable().column(3).visible(true);
        tbl.DataTable().column(4).visible(true);
        tbl.DataTable().column(6).visible(true);



        tbl.DataTable().column(18).visible(true);
        tbl.DataTable().column(19).visible(true);
        tbl.DataTable().column(20).visible(true);
        tbl.DataTable().column(21).visible(true);
        tbl.DataTable().column(22).visible(true);
        tbl.DataTable().column(23).visible(true);
    }
}

function Chkgroup(grp) {
    debugger;
    if (grp == 'COLOR/SIZE') {
        $("input[name=ALType]").attr('disabled', false);
        $('#consumpfill').prop('disabled', false);

    }
    else {
        $("#optall").prop("checked", true);
        $("input[name=ALType]").attr('disabled', true);
        $('#consumpfill').prop('disabled', false);
    }

}

function fnClearCompControls() {

    $('#ddlComponent').val('0').trigger('change');
    $('#ddlType').val('0').trigger('change');
    $('#txtParts').val('');
    $('#txtDesc').val('');
    $('#txtGsm').val('');
    $('#ddlGroup').val('0').trigger('change');
    $('#ddlFabric').val('0').trigger('change');

}


function getbyID(MasID) {

    // alert("upd");

}
function ConDelete() {

    if (DispatchClosed == "N") {
        $('#ConDelete').show();
    }
    else if (DispatchClosed == "Y") {
        $('#ConDelete').hide();
    }

    if (DispatchClosed == 'Y') {
        //alert('Consumption Plan has been Locked,Please Contact Administrator..');
        var msg = "Despatch Closed.Please Check It...";
        var flg = 4;
        var mo = 1;
        AlartMessage(msg, flg, mo);
        return true;
    }

    if (Fplan == "E") {
        //alert("Fabric Entry Made,Please Delete Fabric and Proceed..");
        var msg = 'Fabric Entry Made,Please Delete Fabric and Proceed...';
        var flg = 4;
        var mo = 1;
        AlartMessage(msg, flg, mo);
        return true;
    }

    //CheckPoMade();
    var PId = PLID;
    var ans = confirm("Are you sure want to delete this Record?");
    if (ans) {
        $("#ConDelete").attr("disabled", true);
        $("#btnDelete").attr("disabled", true);
        LoadingSymb();
        $.ajax({
            url: "/PlanningAdd/Delete/" + PId,
            type: "POST",
            contentType: "application/json;charset=UTF-8",
            dataType: "json",
            success: function (result) {

                if (result.Value == true) {
                    AddUserEntryLog('Planning', 'Component Details', 'DELETE', $('#txtWorkOrderNo').val());
                    //alert("Consumption Deleted Sucessfully");
                    var msg = 'Consumption Deleted Sucessfully...';
                    var flg = 2;
                    var mo = 0;
                    var url = "/PlanningMain/PlanningMainIndex";
                    AlartMessage(msg, flg, mo,url);
                    StyRowId = StyleRId;
                    //window.location.href = "/PlanningMain/PlanningMainIndex";
                } else {

                    window.location.href = "/Error/Index";


                }

            },
            error: function (errormessage) {
                alert(errormessage.responseText);
            }
        });
    }
}

function FabDelete() {

    if (DispatchClosed == 'Y') {
        //alert('Consumption Plan has been Locked,Please Contact Administrator..');
        var msg = "Despatch Closed.Please Check It...";
        var flg = 4;
        var mo = 1;
        AlartMessage(msg, flg, mo);
        return true;
    }


    if (Yplan == "E") {
        //alert("Yarn Entry Made,Please Delete Yarn and Proceed..");
        var msg = 'Yarn Entry Made,Please Delete Yarn and Proceed...';
        var flg = 4;
        var mo = 1;
        AlartMessage(msg, flg, mo);
        return true;
    }
    if (PlanLock.length > 0) {
        if (PlanLock[0].LockYarn == 'Y') {
            //alert('Yarn Plan has been Locked,Please Contact Administrator..');
            var msg = 'Yarn Plan has been Locked,Please Contact Administrator...';
            var flg = 4;
            var mo = 1;
            AlartMessage(msg, flg, mo);
            return true;
        }
    }





    Fcheckdel();



}

function YarnDelete() {

    if (DispatchClosed == 'Y') {
        //alert('Consumption Plan has been Locked,Please Contact Administrator..');
        var msg = "Despatch Closed.Please Check It...";
        var flg = 4;
        var mo = 1;
        AlartMessage(msg, flg, mo);
        return true;
    }

    if (PlanLock.length > 0) {
        if (PlanLock[0].LockYarn == 'Y') {
            //alert('Yarn Plan has been Locked,Please Contact Administrator..');
            var msg = 'Yarn Plan has been Locked,Please Contact Administrator...';
            var flg = 4;
            var mo = 1;
            AlartMessage(msg, flg, mo);
            return true;
        }
    }
    var DelChk = 0;
    for (h = 0; PlanYarnDetSave.length > h; h++) {
        if (PlanYarnDetSave[h].OrdQty >0) {
            DelChk = 1;
        }
    }
    if (DelChk == 1) {
        var msg = 'Please Check Yarn Purchase Order Detail or Transfer Detail...';
        var flg = 4;
        var mo = 1;
        AlartMessage(msg, flg, mo);
        return true;
    } else {
        checkdel();
    }
    //CheckPoMade();

}

function CheckPoMade() {

    var OrdNo = $('#txtOrderNo').val();
    var Styid = $('#txtHStyleId').val();


    $.ajax({
        url: "/PlanningConsumption/LoadCheckPoMadeDetails",
        data: JSON.stringify({ Orderno: OrdNo, styleid: Styid }),
        type: "POST",
        contentType: "application/json;charset=utf-8",
        dataType: "json",
        success: function (result) {

            CPItemList = result;
            if (CPItemList.length > 0) {

                if (Mod == 1) {

                    for (var x = 0; x < CPItemList.length; x++) {

                        //alert("Po has been made for " + CPItemList[x].PoNo + ",Please Check it....")
                        var msg = "PO has been made for " + CPItemList[x].PoNo + ",Please Check it....";
                        var flg = 4;
                        var mo = 1;
                        AlartMessage(msg, flg, mo);
                        $("#btnUpdate").attr('disabled', true);
                        $('#btnAdd').hide();
                        return true;
                    }

                }
                if (Mod == 2) {
                    for (var x = 0; x < CPItemList.length; x++) {
                        //alert("Po has been made for " + CPItemList[x].PoNo + ",Please Check it....")
                        var msg = "PO has been made for " + CPItemList[x].PoNo + ",Please Check it....";
                        var flg = 4;
                        var mo = 1;
                        AlartMessage(msg, flg, mo);
                        $("#btnDelete").attr('disabled', true);
                        $('#btnAdd').hide();
                        $('#btnUpdate').hide();
                        return true;

                    }
                }

                if (OrdApp == "Y") {
                    $('#btnAdd').hide();
                    $('#btnUpdate').hide();
                    $('#btnDelete').hide();

                }
            }

        },

        failure: function (errMsg) {
            alert(errMsg);
        }
    });
}


function FCheckPoMade() {

    var OrdNo = $('#txtOrderNo').val();
    var Styid = $('#txtHStyleId').val();


    $.ajax({
        url: "/PlanningConsumption/LoadCheckPoMadeDetails",
        data: JSON.stringify({ Orderno: OrdNo, styleid: Styid }),
        type: "POST",
        contentType: "application/json;charset=utf-8",
        dataType: "json",
        success: function (result) {

            CPItemList = result;
            if (CPItemList.length > 0) {

                if (Mod == 1) {

                    for (var x = 0; x < CPItemList.length; x++) {

                        //alert("Po has been made for " + CPItemList[x].PoNo + ",Please Check it....")
                        var msg = "PO has been made for " + CPItemList[x].PoNo + ",Please Check it....";
                        var flg = 4;
                        var mo = 1;
                        AlartMessage(msg, flg, mo);
                        $("#btnUpdate").attr('disabled', true);
                        $('#btnAdd').hide();
                        return true;
                    }

                }
                if (Mod == 2) {
                    for (var x = 0; x < CPItemList.length; x++) {
                        //alert("Po has been made for " + CPItemList[x].PoNo + ",Please Check it....")
                        var msg = "PO has been made for " + CPItemList[x].PoNo + ",Please Check it....";
                        var flg = 4;
                        var mo = 1;
                        AlartMessage(msg, flg, mo);
                        $("#btnDelete").attr('disabled', true);
                        $('#btnAdd').hide();
                        $('#btnUpdate').hide();
                        return true;

                    }
                }

                if (OrdApp == "Y") {
                    $('#btnAdd').hide();
                    $('#btnUpdate').hide();
                    $('#btnDelete').hide();

                }
            }

        },

        failure: function (errMsg) {
            alert(errMsg);
        }
    });
}

function CheckPoMadeEntry(Itmid, Colorid, Sizeid) {
    debugger;
    var OrdNo = $('#txtOrderNo').val();
    var Styid = $('#txtHStyleId').val();


    $.ajax({
        url: "/PlanningConsumption/LoadCheckPoMadeEntryDetails",
        data: JSON.stringify({ Orderno: OrdNo, styleid: Styid, Itemid: Itmid, Colorid: Colorid, Sizeid: Sizeid }),
        type: "POST",
        async: false,
        contentType: "application/json;charset=utf-8",
        dataType: "json",
        success: function (result) {

            CEPItemList = result;
            if (CEPItemList.length > 0) {

                if (Mod == 1) {

                    for (var x = 0; x < CEPItemList.length; x++) {

                        //alert("Po has been made for " + CEPItemList[x].PoNo + ",Please Check it....")
                        var msg = "PO has been made for " + CPItemList[x].PoNo + ",Please Check it....";
                        var flg = 4;
                        var mo = 1;
                        AlartMessage(msg, flg, mo);
                        $("#ddlYarn").attr('disabled', true);
                        $("#ddlCount").attr('disabled', true);
                        $("#ddlColor").attr('disabled', true);
                        $("#txtPer").attr('disabled', true);
                        //$('#btnAdd').hide();
                        return true;
                    }

                }
                if (Mod == 2) {
                    for (var x = 0; x < CEPItemList.length; x++) {
                        //alert("Po has been made for " + CEPItemList[x].PoNo + ",Please Check it....")
                        var msg = "PO has been made for " + CPItemList[x].PoNo + ",Please Check it....";
                        var flg = 4;
                        var mo = 1;
                        AlartMessage(msg, flg, mo);
                        $("#ddlYarn").attr('disabled', true);
                        $("#ddlCount").attr('disabled', true);
                        $("#ddlColor").attr('disabled', true);
                        $("#txtPer").attr('disabled', true);

                        //$('#btnAdd').hide();
                        //$('#btnUpdate').hide();
                        return true;

                    }
                }

                //if (OrdApp == "Y") {
                //    $('#btnAdd').hide();
                //    $('#btnUpdate').hide();
                //    $('#btnDelete').hide();

                //}
            } else {
                $("#ddlYarn").attr('disabled', false);
                $("#ddlCount").attr('disabled', false);
                $("#ddlColor").attr('disabled', false);
                $("#txtPer").attr('disabled', false);
            }

        },

        failure: function (errMsg) {
            alert(errMsg);
        }
    });
}
function save() {



    if (compList.length == 0) {

        //alert("Please Check Component Details..");
        var msg = "Please Check Component Details...";
        var flg = 4;
        var mo = 1;
        AlartMessage(msg, flg, mo);
        return true;
    }



    if (ConItemList.length == 0) {

        //alert("Please Enter the Consumption Details..");
        var msg = "Please Enter the Consumption Details...";
        var flg = 4;
        var mo = 1;
        AlartMessage(msg, flg, mo);
        return true;
    }

    var tot = [];
    for (var d = 0; d < ConItemList.length; d++) {
        if (ConItemList[d].GreyWidthID == 0) {
            tot.push(ConItemList[d]);
        }
    }

    if (tot.length > 0) {
        //alert('Please choose greywidth...');
        var msg = "Please choose greywidth...";
        var flg = 4;
        var mo = 1;
        AlartMessage(msg, flg, mo);
        return true;
    }

    var det = [];
    if (PlanYarnSave.length > 0) {
        if (PlanYarnDetSave.length == 0) {
            //alert("Please Enter the Yarn Details..");
            var msg = "Please Enter the Yarn Details...";
            var flg = 4;
            var mo = 1;
            AlartMessage(msg, flg, mo);
            return true;
        }
        var c = 0;
        for (var e = 0; e < PlanYarnSave.length; e++) {
            c = PlanYarnSave[e].SlNo;
            var totalper = 0;
            for (var f = 0; f < PlanYarnDetSave.length; f++) {
                if (PlanYarnDetSave[f].CompSno == c) {
                    var per = PlanYarnDetSave[f].Knit_In_Per;
                    totalper = totalper + parseFloat(per);
                }

            }
            if (totalper < 100) {
                //alert('Separate weight should not be less than 100');
                var msg = "Separate weight should not be less than 100...";
                var flg = 4;
                var mo = 1;
                AlartMessage(msg, flg, mo);
                return true;
            }
        }

        var r = 0;
        for (var e = 0; e < PlanYarnSave.length; e++) {
            r = PlanYarnSave[e].SlNo;
            var data = $.grep(PlanYarnDetSave, function (e) {
                return e.CompSno == r;
            });

            if (data.length == 0) {
                //alert('Yarn must be filled for all fabric...');
                var msg = "Yarn must be filled for all fabric...";
                var flg = 4;
                var mo = 1;
                AlartMessage(msg, flg, mo);
                return true;
            }
        }

        //Total Fabric weight
        var totalpqt = 0;
        for (var e = 0; e < PlanYarnSave.length; e++) {
            var pcs = PlanYarnSave[e].Fabric_Weight;
            totalpqt = totalpqt + parseFloat(pcs);

        }
        var TFWeight = (totalpqt.toFixed(1));


        //Total Yarn weight
        var totalypqt = 0;
        for (var e = 0; e < PlanYarnDetSave.length; e++) {
            var ypcs = PlanYarnDetSave[e].Knit_In_ActQty;
            totalypqt = totalypqt + parseFloat(ypcs);

        }
        var TYWeight = (totalypqt.toFixed(1));


        if (parseFloat(TYWeight) != parseFloat(TFWeight)) {
            //alert("Please Check the Total Fabric Weight and Total Yarn Weight for all Panels..");
            var msg = "Please Check the Total Fabric Weight and Total Yarn Weight for all Panels...";
            var flg = 4;
            var mo = 1;
            AlartMessage(msg, flg, mo);
            return true;
        }


        //Total Yarn weight for yarn dyeing and yarn details check

        if (PlanYarnDyeingSave.length > 0) {

            var totalypdqt = 0;
            for (var e = 0; e < PlanYarnDetSave.length; e++) {

                if (PlanYarnDetSave[e].Dyeing_Req == true || PlanYarnDetSave[e].Dyeing_Req == 1) {
                    var ydpcs = PlanYarnDetSave[e].Knit_In_ActQty;
                    totalypdqt = totalypdqt + parseFloat(ydpcs);
                }
            }
            var TYDWeight = (totalypqt.toFixed(1));

            var totalypddqt = 0;
            for (var e = 0; e < PlanYarnDyeingSave.length; e++) {


                var yddpcs = PlanYarnDyeingSave[e].PerWeight;
                totalypddqt = totalypddqt + parseFloat(yddpcs);

            }
            var TYDDWeight = (totalypddqt.toFixed(1));


            if (parseFloat(TYDDWeight) != parseFloat(TYDWeight)) {
                //alert("Please Check the Total Yarn Weight and Total Yarn dyeing Weight for all Dyed Yarn..");
                var msg = "Please Check the Total Yarn Weight and Total Yarn dyeing Weight for all Dyed Yarn...";
                var flg = 4;
                var mo = 1;
                AlartMessage(msg, flg, mo);
                return true;
            }
        }
        //
    }
    else {
        for (var e = 0; e < compList.length; e++) {
            var cs = compList[e].CompSlNo;
            var totalamnt = 0;
            for (var v = 0; v < PlanCompFabricDetSave.length; v++) {
                if (PlanCompFabricDetSave[v].CompSlNo == cs) {

                    var amount = parseFloat(PlanCompFabricDetSave[v].BColorPQty) + parseFloat(PlanCompFabricDetSave[v].FColorPQty);
                    totalamnt = totalamnt + parseFloat(amount);

                }
            }
            totalamnt = totalamnt.toFixed(3);
            var totam = 0;
            for (var l = 0; l < PlanCompFabricDetSave.length; l++) {
                if (PlanCompFabricDetSave[l].CompSlNo == cs) {
                    var at = PlanCompFabricDetSave[l].Weight;
                    totam = totam + parseFloat(at);
                }

            }
            totam = totam.toFixed(3);
            var tot = $('#txttotwt').val();
            if (totalamnt == totam) {

            }
            else {
                det.push(cs);
            }
        }

        if (det != 0) {
            //alert('Yarn must be filled...');
            var msg = "Yarn must be filled...";
            var flg = 4;
            var mo = 1;
            AlartMessage(msg, flg, mo);
            return true;
        }
    }

    if (Mod == 0) {
        var FYmode = "A";
    }



    if (PlanYarnDyeingSave.length > 0) {
        //for (var u = 0; u < PlanYarnDetSave.length; u++) {
        //    var cl = PlanYarnDetSave[u].CompSno;
        //    var so = PlanYarnDetSave[u].SlNo;
        for (var h = 0; h < PlanYarnDyeingSave.length; h++) {
            var nm = 0;
            var gar = PlanYarnDyeingSave[h].Garment_ColorID;
            var yl = PlanYarnDyeingSave[h].YDSlNo;
            var cn = PlanYarnDyeingSave[h].CompSlNo;
            var totalamnt = 0;
            var Wght = 0;

            for (var g = 0; g < PlanYarnDyeingSave.length; g++) {
                nm = 1;
                if (PlanYarnDyeingSave[g].YDSlNo == yl && PlanYarnDyeingSave[g].CompSlNo == cn && PlanYarnDyeingSave[g].Garment_ColorID == gar) {
                    var amount = PlanYarnDyeingSave[g].Qty_Per;
                    Wght = PlanYarnDyeingSave[g].Weight;
                    totalamnt = totalamnt + parseFloat(amount);
                }
            }
            if (totalamnt == 100) {

            }
            else if (totalamnt == 0 && nm == 1 && Wght > 0) {
                //alert('Fill all the percentage');
                var msg = "Fill all the percentage...";
                var flg = 4;
                var mo = 1;
                AlartMessage(msg, flg, mo);
                return true;
            }
            else if (totalamnt < 100 && Wght > 0) {
                //alert('Percentage should not be less than 100...');
                var msg = "Percentage should not be less than 100...";
                var flg = 4;
                var mo = 1;
                AlartMessage(msg, flg, mo);
                return true;
            }
            else if (totalamnt > 100 && Wght > 0) {
                //alert('Percentage should not exceed 100..');
                var msg = "Percentage should not exceed 100...";
                var flg = 4;
                var mo = 1;
                AlartMessage(msg, flg, mo);
                return true;
            }
        }
        // }
    }

    var ptype = $('input[name="PAType"]:checked').attr('value');
    var objConSubmit = {

        //
        CompanyID: $('#txtHCompanyId').val(),
        Order_No: $('#txtOrderNo').val(),
        ItemID: $('#txtHItemId').val(),
        Styleid: $('#txtHStyleId').val(),
        BMasID: $('#txtBuyOrdMasId').val(),
        EDate: $('#txtEntryDate').val(),//new Date($('#txtEntryDate').val()),
        PrgThr: "W",
        PA: ptype,
        Mode: FYmode,
        CreatedBy: Guserid,
        CompoItemMas: compList,
        CompoItemDetails: ConItemListSave,
        PlanFabricDet: PlanCompFabricDetSave,
        PlanLoss: PlanLossSave,
        PlanYarnN: PlanYarnSave,
        PlanYarnDet: PlanYarnDetSave,
        PlanYarnLoss: PlanYarnLossSave,
        PlanYarnDyeing: PlanYarnDyeingSave
    };
    $("#btnAdd").attr("disabled", true);
    LoadingSymb();
    $.ajax({
        url: "/PlanningConsumption/Add",
        data: JSON.stringify(objConSubmit),
        type: "POST",
        contentType: "application/json;charset=utf-8",
        dataType: "json",
        success: function (result) {

            if (result.Value == true) {

                //alert("Data Saved Sucessfully");
                var msg = "Data Saved Sucessfully...";
                var flg = 1;
                var mo = 0;
                var url = "/PlanningAdd/PlanningAddIndex?StyleRowId=" + StyRowId + "&Mode=" + 1;
                AlartMessage(msg, flg, mo,url);
                Entrystatus($('#txtOrderNo').val(), $('#txtHStyleId').val(), $('#txtHItemId').val());
                StyRowId = StyleRId;
                //window.location.href = "/PlanningAdd/PlanningAddIndex?StyleRowId=" + StyRowId + "=&Mode=" + 1;
            } else {

                window.location.href = "/Error/Index";


            }

        },
        error: function (errormessage) {

            alert(errormessage.responseText);
        }
    });
}


function ConSave() {

    var conflag = 0;

    if (compList.length == 0) {

        //alert("Please Check Component Details..");
        var msg = "Please Check Component Details...";
        var flg = 4;
        var mo = 1;
        AlartMessage(msg, flg, mo);
        return true;
    }



    if (ConItemList.length == 0) {

        //alert("Please Enter the Consumption Details..");
        var msg = "Please Enter the Consumption Details...";
        var flg = 4;
        var mo = 1;
        AlartMessage(msg, flg, mo);
        return true;
    }

    var tot = [];
    for (var d = 0; d < ConItemList.length; d++) {
        if (ConItemList[d].GreyWidthID == 0) {
            tot.push(ConItemList[d]);
        }
    }

    if (tot.length > 0) {
        //alert('Please choose greywidth...');
        var msg = "Please choose greywidth...";
        var flg = 4;
        var mo = 1;
        AlartMessage(msg, flg, mo);
        return true;
    }

    if (Mod == 0) {
        var FYmode = "A";
    }

    var ptype = $('input[name="PAType"]:checked').attr('value');
    var objConSubmit = {

        //
        CompanyID: $('#txtHCompanyId').val(),
        Order_No: $('#txtOrderNo').val(),
        ItemID: $('#txtHItemId').val(),
        Styleid: $('#txtHStyleId').val(),
        BMasID: $('#txtBuyOrdMasId').val(),
        EDate: $('#txtEntryDate').val(),//new Date($('#txtEntryDate').val()),
        PrgThr: "W",
        PA: ptype,
        Mode: FYmode,
        CreatedBy: Guserid,
        CompoItemMas: compList,
        CompoItemDetails: ConItemListSave,
        //PlanFabricDet: PlanCompFabricDetSave,
        //PlanLoss: PlanLossSave,
        //PlanYarnN: PlanYarnSave,
        //PlanYarnDet: PlanYarnDetSave,
        //PlanYarnLoss: PlanYarnLossSave,
        //PlanYarnDyeing: PlanYarnDyeingSave
    };
    $("#ConAdd").attr("disabled", true);
    LoadingSymb();
    $.ajax({
        url: "/PlanningConsumption/ConAdd",
        data: JSON.stringify(objConSubmit),
        type: "POST",
        contentType: "application/json;charset=utf-8",
        dataType: "json",
        success: function (result) {

            if (result.Value == true) {
                AddUserEntryLog('Planning', 'Component Details', 'ADD', $('#txtWorkOrderNo').val());
                //alert("Consumption Saved Sucessfully");
                var msg = "Consumption Saved Sucessfully...";
                var flg = 1;
                var mo = 1;
                AlartMessage(msg, flg, mo);
                Cplan = 'E';
                Entrystatus($('#txtOrderNo').val(), $('#txtHStyleId').val(), $('#txtHItemId').val());
                //conflag = 1

                Mod = 1;
                $('#Div1 a[href="#tab_content2"]').tab('show');
                //if (conflag == 1) {
                //    $('#ConAdd').hide();
                //    $('#ConUpdate').show();
                //    //$('#btnCpyList').attr("disabled", false);

                //}
                //StyRowId = StyleRId;
                //window.location.href = "/PlanningAdd/PlanningAddIndex?StyleRowId=" + StyRowId + "=&Mode=" + 1;
            } else {

                window.location.href = "/Error/Index";


            }

        },
        error: function (errormessage) {

            alert(errormessage.responseText);
        }
    });
}



function FabSave() {

    var Fabflag = 0;

    if (PlanLock.length > 0) {      
        if (PlanLock[0].LockFabric == 'Y') {
            //alert('Fabric Plan has been Locked,Please Contact Administrator..');
            var msg = "Fabric Plan has been Locked,Please Contact Administrator...";
            var flg = 1;
            var mo = 1;
            AlartMessage(msg, flg, mo);
            return true;
        }
    }

    //if (compList.length == 0) {

    //    alert("Please Check Component Details..");
    //    return true;
    //}

    //if (ConItemList.length == 0) {

    //    alert("Please Enter the Consumption Details..");
    //    return true;
    //}

    //var tot = [];
    //for (var d = 0; d < ConItemList.length; d++) {
    //    if (ConItemList[d].GreyWidthID == 0) {
    //        tot.push(ConItemList[d]);
    //    }
    //}

    //if (tot.length > 0) {
    //    alert('Please choose greywidth...');
    //    return true;
    //}

    //if (Mod == 0) {
    //    var FYmode = "A";
    //}

    // var ptype = $('input[name="PAType"]:checked').attr('value');
    var objFabConSubmit = {

        //
        CompanyID: $('#txtHCompanyId').val(),
        Order_No: $('#txtOrderNo').val(),
        ItemID: $('#txtHItemId').val(),
        Styleid: $('#txtHStyleId').val(),
        BMasID: $('#txtBuyOrdMasId').val(),
        EDate: $('#txtEntryDate').val(),//new Date($('#txtEntryDate').val()),
        //PrgThr: "W",
        //PA: ptype,
        //Mode: FYmode,
        //CreatedBy: Guserid,
        //CompoItemMas: compList,
        //CompoItemDetails: ConItemListSave,
        PlanFabricDet: PlanCompFabricDetSave,
        PlanLoss: PlanLossSave,
        //PlanYarnN: PlanYarnSave,
        //PlanYarnDet: PlanYarnDetSave,
        //PlanYarnLoss: PlanYarnLossSave,
        //PlanYarnDyeing: PlanYarnDyeingSave
    };
    $("#FabAdd").attr("disabled", true);
    //LoadingSymb();
    $.ajax({
        url: "/PlanningConsumption/FabSave",
        data: JSON.stringify(objFabConSubmit),
        type: "POST",
        contentType: "application/json;charset=utf-8",
        dataType: "json",
        success: function (result) {

            if (result.Value == true) {
                AddUserEntryLog('Planning', 'Fabric Details', 'ADD', $('#txtWorkOrderNo').val());
                //alert("Fabric Saved Sucessfully");
                TransType = 'F';

                if (FabricStockcheck.length > 0) {
                    TransStage = 'FABSAVE';

                    var msg = "Fabric Saved Sucessfully. Planned Fabric is available in Stock, Do you want to see the details?";
                    var flg = 6;
                    AlartMessage(msg, flg);

                }
                else {
                    var msg = "Fabric Saved Sucessfully...";
                    var flg = 1;
                    var mo = 1;
                    AlartMessage(msg, flg, mo);
                    debugger;
                    Yplan = 'N';
                    Mod = 1;


                    Entrystatus($('#txtOrderNo').val(), $('#txtHStyleId').val(), $('#txtHItemId').val());
                    $('#Div1 a[href="#tab_content3"]').tab('show');
                }




                if (Fabflag == 1) {
                    $('#FabAdd').hide();
                    $('#FabUpdate').show();
                    //$('#btnCpyList').attr("disabled", false);

                }
                //StyRowId = StyleRId;
                //window.location.href = "/PlanningAdd/PlanningAddIndex?StyleRowId=" + StyRowId + "=&Mode=" + 1;
            } else {

                window.location.href = "/Error/Index";


            }

        },
        error: function (errormessage) {

            alert(errormessage.responseText);
        }
    });
}
function YarnSave() {


    if (PlanLock.length > 0) {
        if (PlanLock[0].LockYarn == 'Y') {
            //alert('Yarn Plan has been Locked,Please Contact Administrator..');
            var msg = "Yarn Plan has been Locked,Please Contact Administrator...";
            var flg = 4;
            var mo = 1;
            AlartMessage(msg, flg, mo);
            return true;
        }
    }


    var yarnflag = 0;

    if (PlanYarn.length == 0) {

        //alert("Please Check Fabric Details..");
        var msg = "Please Check Fabric Details...";
        var flg = 4;
        var mo = 1;
        AlartMessage(msg, flg, mo);
        return true;
    }



    if (PlanYarnDetSave.length == 0) {

        //alert("Please Enter the Yarn Details..");
        var msg = "Please Enter the Yarn Details...";
        var flg = 4;
        var mo = 1;
        AlartMessage(msg, flg, mo);
        return true;
    }

    ////Total Fabric weight
    //var totalpqt = 0;
    //for (var e = 0; e < PlanYarnSave.length; e++) {
    //    var pcs = PlanYarnSave[e].Fabric_Weight;
    //    totalpqt = totalpqt + parseFloat(pcs);

    //}
    //var TFWeight = (totalpqt.toFixed(1));


    ////Total Yarn weight
    //var totalypqt = 0;
    //for (var e = 0; e < PlanYarnDetSave.length; e++) {
    //    var ypcs = PlanYarnDetSave[e].Knit_In_ActQty;
    //    totalypqt = totalypqt + parseFloat(ypcs);

    //}
    //var TYWeight = (totalypqt.toFixed(1));


    //if (parseFloat(TYWeight) != parseFloat(TFWeight)) {
    //    //alert("Please Check the Total Fabric Weight and Total Yarn Weight for all Panels..");
    //    var msg = "Please Check the Total Fabric Weight and Total Yarn Weight for all Panels...";
    //    var flg = 4;
    //    var mo = 1;
    //    AlartMessage(msg, flg, mo);
    //    return true;
    //}


    var totalfabqty = 0;

    for (var e = 0; e < PlanYarnSave.length; e++) {
        var pcs = PlanYarnSave[e].Fabric_Weight;
        totalfabqty = totalfabqty + parseFloat(pcs);

    }
    $('#txtfabqty').val(totalfabqty.toFixed(3));

    var totalyarn = 0;
    for (var e = 0; e < PlanYarnDetSave.length; e++) {
        var ypcs = PlanYarnDetSave[e].Knit_In_ActQty;
        totalyarn = totalyarn + parseFloat(ypcs);

    }
    $('#txtyarnqty').val(totalyarn.toFixed(3));


    var TFWeight =$('#txtfabqty').val()
    var TYWeight = $('#txtyarnqty').val()
    if (TYWeight != TFWeight) {
        //alert("Please Check the Total Fabric Weight and Total Yarn Weight for all Panels..");
        var msg = "Please Check the Total Fabric Weight and Total Yarn Weight for all Panels...";
        var flg = 4;
        var mo = 1;
        AlartMessage(msg, flg, mo);
        return true;
    }



    if (Mod == 0) {
        var FYmode = "A";
    }
    debugger;
    PlanYarnDetSaveStkChk = PlanYarnDetSave;
    var ptype = $('input[name="PAType"]:checked').attr('value');
    var objYarnSubmit = {

        //
        CompanyID: $('#txtHCompanyId').val(),
        Order_No: $('#txtOrderNo').val(),
        ItemID: $('#txtHItemId').val(),
        Styleid: $('#txtHStyleId').val(),
        BMasID: $('#txtBuyOrdMasId').val(),
        EDate: $('#txtEntryDate').val(),//new Date($('#txtEntryDate').val()),
        PrgThr: "W",
        PA: ptype,
        Mode: FYmode,
        CreatedBy: Guserid,
        //CompoItemMas: compList,
        //CompoItemDetails: ConItemListSave,
        //PlanFabricDet: PlanCompFabricDetSave,
        //PlanLoss: PlanLossSave,
        PlanYarnN: PlanYarnSave,
        PlanYarnDet: PlanYarnDetSave,
        PlanYarnLoss: PlanYarnLossSave,
        PlanYarnDyeing: PlanYarnDyeingSave
    };
    $("#YarnAdd").attr("disabled", true);
    LoadingSymb();
    $.ajax({
        url: "/PlanningConsumption/YarnAdd",
        data: JSON.stringify(objYarnSubmit),
        type: "POST",
        contentType: "application/json;charset=utf-8",
        dataType: "json",
        success: function (result) {

            if (result.Value == true) {
                AddUserEntryLog('Planning', 'Yarn Details', 'ADD', $('#txtWorkOrderNo').val());

                TransStage = '';
                TransType = 'Y';
                LoadTransStock();

                //alert("Yarn Saved Sucessfully");
                var StkChk = 0;
                for (var t = 0; t < PlanYarnDetSave.length; t++) {
                    if (PlanYarnDetSave[t].stockTrans == 1) {
                        StkChk = 1;
                    }
                }
                if (StkChk == 1) {

                    var msg = "Yarn Saved Sucessfully. Planned Yarn is available in Stock, Do you want to see the details?";
                    var flg = 6;
                    AlartMessage(msg, flg);

                    var tbl = $('#tblyarnDetails');
                    tbl.DataTable().column(19).visible(false);
                } else { 
                    var msg = "Yarn Saved Sucessfully...";
                    var flg = 1;
                    var mo = 1;
                    AlartMessage(msg, flg, mo);
                    var tbl = $('#tblyarnDetails');
                    tbl.DataTable().column(19).visible(false);
                }
                

                Yplan = 'E';

                $('#profile-tab2').attr('style', 'background-color : #F5F7FA');

                Entrystatus($('#txtOrderNo').val(), $('#txtHStyleId').val(), $('#txtHItemId').val());
                //conflag = 1
              

                Mod = 1;
                LoadAmendstatus();
               
                //if (conflag == 1) {
                //    $('#ConAdd').hide();
                //    $('#ConUpdate').show();
                //    //$('#btnCpyList').attr("disabled", false);

                //}
                //StyRowId = StyleRId;
                //window.location.href = "/PlanningAdd/PlanningAddIndex?StyleRowId=" + StyRowId + "=&Mode=" + 1;
               
            } else {

                window.location.href = "/Error/Index";


            }

        },
        error: function (errormessage) {

            alert(errormessage.responseText);
        }
    });
   
}
function EditDetCompPlanList(PItemId, StyleRowId, PLID) {
    debugger;

    $.ajax({
        url: "/PlanningConsumption/ListCompDetDetails",
        data: JSON.stringify({ PItemId: PItemId, StyleRowId: StyleRowId, PlanID: PLID }),
        type: "POST",
        contentType: "application/json;charset=utf-8",
        dataType: "json",
        success: function (result) {
            debugger;
            compList = result;
            loadcomponentTable(compList);

            CompSlNo = compList[0].CompSlNo;
            var Slno = compList[0].CompSlNo;
            var Grouping = compList[0].Grouping;
            var gsm = compList[0].GSM;
            var tp = compList[0].Fabric_Type;
            if (tp == 'P') {
                type = 'PANELS'
            }
            else if (tp == 'W') {
                type = 'WOVEN'
            }
            else if (tp == 'K') {
                type = 'KNITS'
            }
            Chkgroup(Grouping);
            //var PId = curentro1[0]['procordid'];

            if (compList.length > 0) {

                EditDetConPlanTotList(ItemId, StyleRId, PLID, gsm);

            }

        },
        failure: function (errMsg) {
            alert(errMsg);
        }
    });
}

function EditDetConPlanList(PItemId, StyleRowId, CompSNo, PLID) {


    $.ajax({
        url: "/PlanningConsumption/ListConDetDetails",
        data: JSON.stringify({ PItemId: PItemId, StyleRowId: StyleRowId, CompSNo: CompSNo, PlanID: PLID }),
        type: "POST",
        contentType: "application/json;charset=utf-8",
        dataType: "json",
        success: function (result) {

            ConItemListSave = result;
            //ConItemList = result;

            //loadAdConTable (CompItemList);
            loadconSaveTable(ConItemListSave);
        },
        failure: function (errMsg) {
            alert(errMsg);
        }
    });


}


function EditDetConPlanTotList(PItemId, StyleRowId, PLID, gsm) {

    $.ajax({
        url: "/PlanningConsumption/TotListConDetDetails",
        data: JSON.stringify({ PItemId: PItemId, StyleRowId: StyleRowId, PlanID: PLID }),
        type: "POST",
        contentType: "application/json;charset=utf-8",
        dataType: "json",
        success: function (result) {

            debugger;
            ConItemListSave = result;
            loadconSaveTable(ConItemListSave);

            $.each(ConItemListSave, function () {
                if (this.CompSlNo == CompSlNo) {
                    this.GSM = gsm;

                }
            });



            loadconSaveTable(ConItemListSave);
            var colorempty = [];
            colorempty = ConItemListSave;

            colorempty = $.grep(colorempty, function (v) {
                return (v.CompSlNo == CompSlNo);
            });

            ConItemList = colorempty;
            loadAdConTable(ConItemList);
            ConsmtnHideCol(type);
            if (ConItemListSave.length > 0) {
                //Loadtotfabriceditdet(PLID);
            }

        },
        failure: function (errMsg) {
            alert(errMsg);
        }
    });

}



function ListConsump(ItemId, StyleRowId, GroupId, CompSlNo) {
    debugger;
    // $('#tCPIbody').DataTable().destroy();

    $.ajax({
        url: "/PlanningConsumption/ListPlanningComp",
        data: JSON.stringify({ ItemId: ItemId, StyleRowId: StyleRowId, GroupId: GroupId, CompSlNo: CompSlNo }),
        type: "POST",
        contentType: "application/json;charset=utf-8",
        dataType: "json",
        success: function (result) {
            debugger;
            obj = result;
            var dup = [];

            for (var t = 0; t < obj.length; t++) {
                obj[t].GSM = gsm;
                obj[t].Requirement = 0;
                obj[t].TotMetres = 0;
                obj[t].WtMetre = 0;
                obj[t].GmsPieces = 0;
                obj[t].No_Of_Parts = parts;
                obj[t].TotPieces = (obj[t].Prdn_Qty * parts);
                obj[t].type = type;
                obj[t].AlloLen = 0;
                obj[t].AllowWid = 0;
                obj[t].Pattern = 0;
            }
            //if (type == 'KNITS') {
            //    for (var t = 0; t < obj.length; t++) {
            //        obj[t].GSM = gsm;
            //      
            //    }
            //}
            //else if (type == 'WOVEN') {
            //    for (var t = 0; t < obj.length; t++) {
            //        obj[t].Requirement = 0;
            //        obj[t].TotMetres = 0;
            //        obj[t].WtMetre = 0;

            //      
            //    }
            //}
            //else if (type == 'PANELS') {
            //    for (var t = 0; t < obj.length; t++) {                   
            //        obj[t].GmsPieces = 0;
            //        obj[t].No_Of_Parts = parts;

            //       
            //    }
            //}

            if (ConItemListSave.length == 0) {
                ConItemListSave = obj;
                //loadconSaveTable(ConItemListSave);
                ConItemList = obj;
                loadAdConTable(ConItemList);

            }
            else {
                for (var t = 0; t < obj.length; t++) {
                    for (var d = 0; d < ConItemListSave.length; d++) {
                        if (ConItemListSave[d].CompSlNo == obj[t].CompSlNo) {
                            ConItemListSave[d].GSM = obj[t].GSM;

                            /////////////////////

                            var pat = ConItemListSave[d].Pattern;
                            if (pat > 0) {

                                //var totlen = ConItemListSave[d].Length + ConItemListSave[d].AlloLen;
                                //var totwid = ConItemListSave[d].Width + ConItemListSave[d].AllowWid;
                                //var res1 = parseFloat(parseFloat(totlen * totwid) / pat);


                                //var res1 = res1.toFixed(3);
                                //var res = (res1 * (ConItemListSave[d].GSM)) / 10000;
                                //var Wght = (ConItemListSave[d].Prdn_Qty) * res / 1000;

                                //var finalresult = res.toFixed(3);
                                //var finalwgt = (Wght * (ConItemListSave[d].No_Of_Parts)).toFixed(3);

                                //ConItemListSave[d].Grammage = finalresult;
                                //ConItemListSave[d].Weight = Wght;

                                //checkautogsm(ConItemListSave[d].Prdn_Qty, ConItemListSave[d].CPlanSlNo, ConItemListSave[d].CompSlNo, ConItemListSave[d].Length, ConItemListSave[d].AlloLen, ConItemListSave[d].Width, ConItemListSave[d].Pattern, ConItemListSave[d].AllowWid, ConItemListSave[d].ColorID, ConItemListSave[d].SizeId, ConItemListSave[d].GSM);


                                //checkautogsm(Gquantity, GCPlan, Gsno, Glen, Galwlen, Gwid, Gpat, Galwwid, GColorid, GSizeid);
                            }
                            /////////////////////
                            dup.push(ConItemListSave[d]);
                        }
                    }
                }

                if (dup.length > 0) {
                    loadconSaveTable(ConItemListSave);

                    //ConItemList = $.grep(ConItemListSave, function (r) {
                    //    return r.CompSlNo == CompSlNo;
                    //});
                    //loadAdConTable(ConItemList);

                    //return true;
                }
                else {
                    //for (var s = 0; s < StklistSave.length; s++) {
                    //    if (obj[s].Itemid != Iid && obj[s].Colorid != Cid && obj[s].Sizeid != Sid) {
                    for (var d = 0; d < obj.length; d++) {
                        ConItemListSave.push(obj[d]);
                    }
                    loadconSaveTable(ConItemListSave);

                    //    }

                    //}
                }

                ConItemList = $.grep(ConItemListSave, function (r) {
                    return r.CompSlNo == CompSlNo;
                });
                loadAdConTable(ConItemList);
            }
            totconwght();
            ConsmtnHideCol(type);

        },
        failure: function (errMsg) {
            alert(errMsg);
        }
    });
}

function getfabric() {

    $.ajax({
        url: "/PlanningConsumption/FabricList",
        data: JSON.stringify({}),
        type: "POST",
        contentType: "application/json;charset=utf-8",
        dataType: "json",
        success: function (result) {

            //DiaSize = true;
            Fabriclist = result;
            GreyList = result;
            //$.each(result, function () {
            //    $("#sbTwo").append($("<option></option>").val(this.Itemgroupid).html(this.Itemgroup));

            //});
            //check(); 
            if (type == '') {
                type = 'Knits';
            }
            LoadPlanItemDetails(ItemId, StyleRId);
            loadAdConTable(ConItemList);
            ConsmtnHideCol(type);

        },
        failure: function (errMsg) {
            alert(errMsg);
        }
    });
}
function loadAdConTable(list) {
    debugger;
    var inputcount = 0;
    $('#tCPIbody tr').each(function () {
        inputcount++;
    });

    if (inputcount > 0) {
        $('#tCPIbody').DataTable().destroy();
    }
    $('#tCPIbody').empty();
    //$('#tCPIbody').DataTable().destroy();
    //list.sort(function (a, b) {
    //    return a.CPlanSlNo - b.CPlanSlNo;
    //})

    //Fabriclist;
    $('#tCPIbody').DataTable({
        data: list,
        scrollY: 150,
        scrollCollapse: true,
        paging: false,
        fixedColumns: false,
        select: false,
        scrollX: "100%",
        scrollXInner: "100%",
        scroller: false,
        "bSort": false,
        "rowCallback": function (row, data, index) {
            if (data.CheckDcMade > "0") {
                $('td', row).css('background-color', '#FCF3CF');

            }

        },
        columns: [

              { title: "Cp SNo", data: "CPlanSlNo", "visible": false },
            { title: "Con_PlanID", data: "Con_PlanID", "visible": false },
            { title: "CID", data: "ColorID", "visible": false },
            { title: "Color", data: "Color" },
            { title: "Size", data: "Size" },
            { title: "SzId", data: "SizeId", "visible": false },
            { title: "Prd Qty", data: "Prdn_Qty" },

            { title: "CmSNo", data: "CompSlNo", "visible": false },
            //{ title: "Length", data: "Length" },

            {
                title: "Length", data: "Length",
                render: function (data) {

                    return '<input type="text" id="txtLen" class="calclength form-control"  style="width: 50px;text-align: center;" value=' + data + '  >';

                },
            },
             {
                 title: "A.Length", data: "AlloLen",
                 render: function (data) {

                     return '<input type="text" id="txtallowLen" class="calcallowlength form-control"  style="width: 50px;text-align: center;" value=' + data + '  >';

                 },
             },
            //{ title: "Width", data: "Width" },
             {
                 title: "Width", data: "Width",
                 render: function (data) {

                     return '<input type="text" id="txtWidth" class="calcwidth form-control"  style="width: 50px;text-align: center;" value=' + data + ' >';

                 },
             },
              {
                  title: "A.Width", data: "AllowWid",
                  render: function (data) {

                      return '<input type="text" id="txtalloeWidth" class="calcallowwidth form-control"  style="width: 50px;text-align: center;" value=' + data + ' >';

                  },
              },
              {
                  title: "Pattern", data: "Pattern",
                  render: function (data) {
                      if (checkpattern == 1) {
                          return '<input type="text" id="txtPattern" class="calcpattern form-control"  style="width: 50px;text-align: center;" value=' + data + ' disabled >';
                      } else {
                          return '<input type="text" id="txtPattern" class="calcpattern form-control" disabled style="width: 50px;text-align: center;" value=' + data + ' >';

                      }
                  },
              },
            //{ title: "Gsm", data: "GSM" },
            {
                title: "Gsm", data: "GSM",
                render: function (data) {

                    return '<input type="text" id="txtGsm" class="calcgsm form-control"  style="width: 50px;text-align: center;" value=' + data + ' >';

                },
            },
           // { title: "Gram", data: "Grammage" },
           {
               title: "Gram", data: "Grammage",
              // render: function (data) {

                   render: function (data, type, row) {

                       if (row.CheckDcMade > "0") {
                           return '<input type="text" id="txtGram" class="calcgramm form-control"  style="width: 50px;text-align: center;"  value=' + data + ' disabled>';
                       }
                       else {
                           return '<input type="text" id="txtGram" class="calcgramm form-control"  style="width: 50px;text-align: center;"  value=' + data + ' >';
                       }
                   }

               //    return '<input type="text" id="txtGram" class="calcgramm form-control"  style="width: 50px;text-align: center;"  value=' + data + ' >';

               //},
           },
            {
                title: "Requirement", data: "Requirement", "visible": false,
                render: function (data) {

                    return '<input type="text" id="txtReqmnt" class="calcreqmnt form-control"  style="width: 50px;text-align: center;"  value=' + data + ' >';

                },
            },
            {
                title: "Tot Metres", data: "TotMetres", "visible": false,
                render: function (data) {

                    return '<input type="text" id="txtTotMetWov" class="calcwovtotmet form-control"  style="width: 50px;text-align: center;"  value=' + data + ' disabled>';

                },
            },
              {
                  title: "Wt.Metre(Gms)", data: "WtMetre", "visible": false,
                  render: function (data) {

                      return '<input type="text" id="txtWtmtWov" class="calcwovwtmt form-control"  style="width: 50px;text-align: center;"  value=' + data + ' >';

                  },
              },
               { title: "Parts", data: "No_Of_Parts", "visible": false },
               {
                   title: "Tot Peices", data: "TotPieces", "visible": false,
                   render: function (data) {

                       return '<input type="text" id="txtTotpcspan" class="calcpantotpcs form-control"  style="width: 50px;text-align: center;"  value=' + data + ' disabled >';

                   },
               },
               //{
               //    title: "Grams/Pieces", data: "GmsPieces", "visible": false,
               //    render: function (data) {

               //        return '<input type="text" id="txtGmspcspan" class="calcpanpcs form-control"  style="width: 50px;text-align: center;"  value=' + data + ' >';

               //    },
               //},


                {
                    title: "Grams/Pieces", data: "GmsPieces", "visible": false,
                    // render: function (data) {

                    render: function (data, type, row) {

                        if (row.CheckDcMade > "0") {
                            return '<input type="text" id="txtGmspcspan" class="calcpanpcs form-control"  style="width: 50px;text-align: center;"  value=' + data + ' disabled>';
                        }
                        else {
                            return '<input type="text" id="txtGmspcspan" class="calcpanpcs form-control"  style="width: 50px;text-align: center;"  value=' + data + ' >';
                        }
                    }

                    //    return '<input type="text" id="txtGram" class="calcgramm form-control"  style="width: 50px;text-align: center;"  value=' + data + ' >';

                    //},
                },




            {
                title: "Tab Weight", data: "Weight",
                render: function (data) {

                    return '<input type="text" id="txtWght" class="form-control"  style="width: 50px;text-align: center;" value=' + data + ' disabled >';

                },
            },

            //{
            //    title: "FWidth", data: "FinishWidthID",
            //    render: function (data, type, row) {
            //        return ' <select id="ddlFSize" class="form-control" style="width: 100px;" onchange="loadFWidth(this.value);"></select>';

            //    }
            //},

            {
                title: "Fab Width", data: "FinishWidth",
                render: function (data, type, row) {

                    if (row.CheckDcMade > 0) {
                        if (data == null) {
                            data = '--Select--'
                        }
                        var $select = $("<select></select>", {
                            "id": "ddlFSize",
                            "value": data,
                            "class": "form-control ddlFSize",
                            "disabled": true
                            //onchange: "loadFWidth(this.value);"
                        });
                        $.each(Fabriclist, function (k, v) {
                            var $option = $("<option></option>", {
                                "text": v.Size,
                                "value": v.SizeId
                            });
                            if (data === v.Size) {
                                $option.attr("selected", "selected")
                            }
                            $select.append($option);
                        });
                        return $select.prop("outerHTML");
                    } else {


                        if (data == null) {
                            data = '--Select--'
                        }
                        var $select = $("<select></select>", {
                            "id": "ddlFSize",
                            "value": data,
                            "class": "form-control ddlFSize",
                            //onchange: "loadFWidth(this.value);"
                        });
                        $.each(Fabriclist, function (k, v) {
                            var $option = $("<option></option>", {
                                "text": v.Size,
                                "value": v.SizeId
                            });
                            if (data === v.Size) {
                                $option.attr("selected", "selected")
                            }
                            $select.append($option);
                        });
                        return $select.prop("outerHTML");
                    }
                    //return '<select id="ddlGSize" selected="selected" class="form-control" style="width: 100px;"> </select>';
                }
            },


                                                       {
                                                           title: "Grey", data: "GreyWidth",
                                                           render: function (data, type, row) {
                                                               if (row.CheckDcMade > 0) {
                                                                   if (data == null) {
                                                                       data = '--Select--'
                                                                   }
                                                                   var $select = $("<select></select>", {
                                                                       "id": "ddlGSize",
                                                                       "value": data,
                                                                       "class": "form-control ddlGSize",
                                                                       "disabled": true
                                                                       //onchange: "loadlist(this.value);"
                                                                   });
                                                                   $.each(GreyList, function (k, v) {
                                                                       var $option = $("<option></option>", {
                                                                           "text": v.Size,
                                                                           "value": v.SizeId
                                                                       });

                                                                       if (data === v.Size) {
                                                                           $option.attr("selected", "selected")
                                                                       }
                                                                       $select.append($option);
                                                                   });
                                                                   return $select.prop("outerHTML");
                                                               }
                                                               else {
                                                                   if (data == null) {
                                                                       data = '--Select--'
                                                                   }
                                                                   var $select = $("<select></select>", {
                                                                       "id": "ddlGSize",
                                                                       "value": data,
                                                                       "class": "form-control ddlGSize",
                                                                       //onchange: "loadlist(this.value);"
                                                                   });
                                                                   $.each(GreyList, function (k, v) {
                                                                       var $option = $("<option></option>", {
                                                                           "text": v.Size,
                                                                           "value": v.SizeId
                                                                       });

                                                                       if (data === v.Size) {
                                                                           $option.attr("selected", "selected")
                                                                       }
                                                                       $select.append($option);
                                                                   });
                                                                   return $select.prop("outerHTML");
                                                               }
                                                           }
                                                       },

        {
            title: "Update", "mDataProp": null, "visible": false,


            "sDefaultContent": '<button type="button"  style="width: 20px;padding: 0px;height: 20px;border-radius:10px;" data-toggle="tooltip" data-placement="top" title="Submit" class="btnUpdate btn btn-success"> <i class="fa fa-check"></i> </button>'
        }

        ]
    });
    totconwght();

}

function loadconSaveTable(list) {
    // $('#tblcompdetails1').DataTable().destroy();
    var inputcount = 0;
    $('#tblcompdetails1 tr').each(function () {
        inputcount++;
    });

    if (inputcount > 0) {
        $('#tblcompdetails1').DataTable().destroy();
    }
    $('#tblcompdetails1').empty();



    var data = [];
    for (var i = 0 ; i < list.length ; i++) {
        data.push(list[i]);
    }




    $('#tblcompdetails1').DataTable({
        data: data,
        scrollY: 300,
        scrollCollapse: true,
        paging: false,
        fixedColumns: false,
        select: false,
        scrollX: "100%",
        scrollXInner: "100%",
        scroller: false,
        select: {
            style: 'single'
        },
        columns: [
            { title: "Con_PlanID", data: "Con_PlanID" },
            { title: "CID", data: "ColorID" },
            { title: "Color", data: "Color" },
            { title: "Size", data: "Size" },
            { title: "SzId", data: "SizeId" },
            { title: "Prd Qty", data: "Prdn_Qty" },
            { title: "Cp SNo", data: "CPlanSlNo" },
            { title: "Cm SNo", data: "CompSlNo" },
            { title: "Length", data: "Length" },
            { title: "Width", data: "Width" },
            { title: "Gsm", data: "GSM" },
            { title: "Gram", data: "Grammage" },

            { title: "Requirement", data: "Requirement" },
            { title: "Tot Metres", data: "TotMetres" },
            { title: "Wt.Metre(Gms)", data: "WtMetre" },
             { title: "Parts", data: "No_Of_Parts" },
            { title: "Tot Peices", data: "TotPieces" },
            { title: "Grams/Pieces", data: "GmsPieces" },

            { title: "Tab Weight", data: "Weight" },
            { title: "Fab Width", data: "FinishWidthID" },
            { title: "Grey Width", data: "GreyWidthID" }


        ]
    });
}

//function loadlist(val) {
//    debugger;
//    CompItemList;
//    ConItemList;

//    index;
//    var gs = "";//$("#ddlGSize option:selected").text();
//    var oldind = -1;
//    for (var x = 0; x < GreyList.length; x++) {
//        if (GreyList[x].SizeId == val) {
//            gs = GreyList[x].Size;
//            oldind = x;
//        }
//    }
//    var currentrow = ConItemList.slice(index);
//    var s = currentrow[0].CPlanSlNo;
//    var sno = currentrow[0].CompSlNo;
//    var Colorid = currentrow[0].ColorID;
//    var Sizeid = currentrow[0].SizeId;
//    $.each(ConItemList, function () {
//        if (this.CPlanSlNo == s && this.CompSlNo == sno) {
//            this.GreyWidthID = val;
//            this.GreyWidth = gs;

//        }
//    });


//    $.each(ConItemListSave, function () {
//        if (this.CPlanSlNo == s && this.CompSlNo == sno) {
//            this.GreyWidthID = val;
//            this.GreyWidth = gs;

//        }
//    });

//    loadAdConTable(ConItemList);
//    loadconSaveTable(ConItemListSave);


//    if (Colorid == 0 && Sizeid == 0) {
//        $.each(PlanCompFabricDet, function () {
//            if (this.CompSlNo == sno) {
//                this.GreyWidthID = val;
//                this.GreyWidth = gs;
//            }
//        });

//        loadCompFabTable(PlanCompFabricDet);

//        var bclrid = 0;
//        var bclr = '';
//        $.each(PlanCompFabricDetSave, function () {
//            if (this.CompSlNo == sno) {
//                this.GreyWidthID = val;
//                this.GreyWidth = gs;
//            }
//        });
//        loadCompFabSaveTable(PlanCompFabricDetSave);
//        return true;
//    }


//    $.each(PlanCompFabricDet, function () {
//        if (this.ColorID == Colorid && this.SizeId == Sizeid && this.CompSlNo == sno) {
//            this.GreyWidthID = val;
//            this.GreyWidth = gs;
//        }
//    });

//    loadCompFabTable(PlanCompFabricDet);

//    var bclrid = 0;
//    var bclr = '';
//    $.each(PlanCompFabricDetSave, function () {
//        if (this.ColorID == Colorid && this.SizeId == Sizeid && this.CompSlNo == sno) {
//            this.GreyWidthID = val;
//            this.GreyWidth = gs;
//        }
//    });
//    loadCompFabSaveTable(PlanCompFabricDetSave);

//}

//function loadFWidth(val) {
//    debugger;
//    index;
//    var fs = "";// = $("#ddlFSize option:selected").text();


//    var oldind = -1;
//    for (var x = 0; x < Fabriclist.length; x++) {
//        if (Fabriclist[x].SizeId == val) {
//            fs = Fabriclist[x].Size;
//            oldind = x;
//        }
//    }
//    var currentrow = ConItemList.slice(index);
//    var s = currentrow[0].CPlanSlNo;
//    var u = currentrow[0].CompSlNo;

//    var Colorid = currentrow[0].ColorID;
//    var Sizeid = currentrow[0].SizeId;
//    $.each(ConItemList, function () {
//        if (this.CPlanSlNo == s && this.CompSlNo == u) {
//            this.FinishWidth = fs;
//            this.FinishWidthID = val;

//        }
//    });
//    array_move(Fabriclist, oldind, 0)
//    loadAdConTable(ConItemList);
//    $.each(ConItemListSave, function () {
//        if (this.CPlanSlNo == s && this.CompSlNo == u) {
//            this.FinishWidth = fs;
//            this.FinishWidthID = val;

//        }
//    });
//    loadconSaveTable(ConItemListSave);

//    if (Colorid == 0 && Sizeid == 0) {
//        $.each(PlanCompFabricDet, function () {
//            if (this.CompSlNo == u) {
//                this.FinishWidth = fs;
//                this.FinishWidthID = val;
//            }
//        });

//        loadCompFabTable(PlanCompFabricDet);

//        var bclrid = 0;
//        var bclr = '';
//        $.each(PlanCompFabricDetSave, function () {
//            if (this.CompSlNo == u) {
//                this.FinishWidth = fs;
//                this.FinishWidthID = val;
//            }
//        });
//        loadCompFabSaveTable(PlanCompFabricDetSave);
//        return true;
//    }


//    $.each(PlanCompFabricDet, function () {
//        if (this.ColorID == Colorid && this.SizeId == Sizeid && this.CompSlNo == u) {
//            this.FinishWidth = fs;
//            this.FinishWidthID = val;
//        }
//    });

//    loadCompFabTable(PlanCompFabricDet);

//    var bclrid = 0;
//    var bclr = '';
//    $.each(PlanCompFabricDetSave, function () {
//        if (this.ColorID == Colorid && this.SizeId == Sizeid && this.CompSlNo == u) {
//            this.FinishWidth = fs;
//            this.FinishWidthID = val;
//        }
//    });
//    loadCompFabSaveTable(PlanCompFabricDetSave);
//}



function array_move(arr, old_index, new_index) {

    if (new_index >= arr.length) {
        var k = new_index - arr.length + 1;
        while (k--) {
            arr.push(undefined);
        }
    }
    arr.splice(new_index, 0, arr.splice(old_index, 1)[0]);
    return arr; // for testing
};

function loadfabricfill() {
    debugger;
    //LoadingSymb();
    indexforfabfill;
    var currentrow = PlanCompFabricDet.slice(indexforfabfill);
    var compsno = currentrow[0].CompSlNo;
    var sno = currentrow[0].snumb;
    var bclrid = currentrow[0].BColorID;
    var bclr = currentrow[0].Bcolor;
    var bcqty = currentrow[0].BColorPQty;
    var fclrid = currentrow[0].FColorID;
    var fcl = currentrow[0].Fcolor;
    var fclqty = currentrow[0].FColorPQty;
    var prclid = currentrow[0].PColorID;
    var prcl = currentrow[0].PColor;
    var fgsm = currentrow[0].FGsm;
    var size = currentrow[0].Size;
    var color = currentrow[0].Color;


    var kgsm = currentrow[0].KGsm;
    var guage = currentrow[0].guage;
    var textur = currentrow[0].texture;
    var contnt = currentrow[0].content;
    var looplen = currentrow[0].LoopLen;



    var table = $('#tCPIbody').DataTable();
    var data = table.rows().data();

    var fabtable = $('#tCDbody').DataTable();
    var fabdata = fabtable.rows().data();


    var protype = $('input[name="FabType"]:checked').attr('value');
    if (protype == 'A') {
        if (fabfillvar == 'BC') {
            $.each(PlanCompFabricDet, function () {
                this.BColorID = bclrid;
                this.Bcolor = bclr;
            });
            $.each(PlanCompFabricDetSave, function () {
                if (this.CompSlNo == compsno) {
                    this.BColorID = bclrid;
                    this.Bcolor = bclr;
                }
            });
            /// loadCompFabTable(PlanCompFabricDet);
            fillfabrictbl(PlanCompFabricDet);
            loadCompFabSaveTable(PlanCompFabricDetSave);
        }
        if (fabfillvar == 'BCQT') {

            $.each(PlanCompFabricDet, function () {
                var sn = this.snumb;
                var gj = this.Weight - this.FColorPQty;
                this.BColorPQty = gj;
                //$('input[id=txtPurQty]').each(function (ig) {
                //    if (fabdata[ig].snumb == sn && fabdata[ig].CompSlNo == compsno) {
                //        var row = $(this).closest('tr');
                //        row.find('#txtPurQty').val(gj);
                //    }
                //});
            });
            $.each(PlanCompFabricDetSave, function () {
                if (this.CompSlNo == compsno) {
                    var gj = this.Weight - this.FColorPQty;
                    this.BColorPQty = gj;
                }
            });

            fillfabrictbl(PlanCompFabricDet);

            //var table = $('#tCDbody').DataTable();
            //var ecdata = table.rows().data();
            //$('input[id=txtPurQty]').each(function (ig) {
            //    debugger;
            //    // if (ecdata[ig].snumb == (ig + 1)) {
            //    var row = $(this).closest('tr');
            //    for (var h = 0; h < PlanCompFabricDet.length; h++) {
            //        if (ig == h) {
            //            var BColorPQty = PlanCompFabricDet[h].BColorPQty;
            //            row.find('#txtPurQty').val(BColorPQty);
            //        }
            //    }
            //});

            //loadCompFabTable(PlanCompFabricDet);
            loadCompFabSaveTable(PlanCompFabricDetSave);

            //loadCompFabTable(PlanCompFabricDet);
            loadCompFabSaveTable(PlanCompFabricDetSave);

        }
        if (fabfillvar == 'FIC') {
            $.each(PlanCompFabricDet, function () {
                this.FColorID = fclrid;
                this.Fcolor = fcl;
            });
            $.each(PlanCompFabricDetSave, function () {
                if (this.CompSlNo == compsno) {
                    this.FColorID = fclrid;
                    this.Fcolor = fcl;
                }
            });
            /// loadCompFabTable(PlanCompFabricDet);
            fillfabrictbl(PlanCompFabricDet);
            loadCompFabSaveTable(PlanCompFabricDetSave);
        }
        if (fabfillvar == 'FIQT') {
            $.each(PlanCompFabricDet, function () {
                var sn = this.snumb;
                var gj = this.Weight - this.BColorPQty;
                this.FColorPQty = gj;
                //$('input[id=txtPurQty]').each(function (ig) {
                //    if (fabdata[ig].snumb == sn && fabdata[ig].CompSlNo == compsno) {
                //        var row = $(this).closest('tr');
                //        row.find('#txtFPurQty').val(gj);
                //    }
                //});
            });
            $.each(PlanCompFabricDetSave, function () {
                if (this.CompSlNo == compsno) {
                    var gj = this.Weight - this.BColorPQty;
                    this.FColorPQty = gj;
                }
            });
            //var table = $('#tCDbody').DataTable();
            //var ecdata = table.rows().data();
            //$('input[id=txtPurQty]').each(function (ig) {
            //    debugger;
            //    // if (ecdata[ig].snumb == (ig + 1)) {
            //    var row = $(this).closest('tr');
            //    for (var h = 0; h < PlanCompFabricDet.length; h++) {
            //        if (ig == h) {
            //            var FColorPQty = PlanCompFabricDet[h].FColorPQty;
            //            row.find('#txtFPurQty').val(FColorPQty);
            //        }
            //    }
            //});
            fillfabrictbl(PlanCompFabricDet);
            //loadCompFabTable(PlanCompFabricDet);
            loadCompFabSaveTable(PlanCompFabricDetSave);
        }
        if (fabfillvar == 'PRC') {
            $.each(PlanCompFabricDet, function () {
                this.PColorID = prclid;
                this.PColor = prcl;
            });
            $.each(PlanCompFabricDetSave, function () {
                if (this.CompSlNo == compsno) {
                    this.PColorID = prclid;
                    this.PColor = prcl;
                }
            });
            ///loadCompFabTable(PlanCompFabricDet);
            fillfabrictbl(PlanCompFabricDet);
            loadCompFabSaveTable(PlanCompFabricDetSave);
        }
        if (fabfillvar == 'FGSM') {
            $.each(PlanCompFabricDet, function () {
                var sn = this.snumb;
                this.FGsm = fgsm;
                //$('input[id=txtPurQty]').each(function (ig) {
                //    if (fabdata[ig].snumb == sn && fabdata[ig].CompSlNo == compsno) {
                //        var row = $(this).closest('tr');
                //        row.find('#txtFGsm').val(fgsm);
                //    }
                //});
            });
            $.each(PlanCompFabricDetSave, function () {
                if (this.CompSlNo == compsno) {
                    this.FGsm = fgsm;
                }
            });
            fillfabrictbl(PlanCompFabricDet);
            //var table = $('#tCDbody').DataTable();
            //var ecdata = table.rows().data();
            //$('input[id=txtPurQty]').each(function (ig) {
            //    debugger;
            //    // if (ecdata[ig].snumb == (ig + 1)) {
            //    var row = $(this).closest('tr');
            //    for (var h = 0; h < PlanCompFabricDet.length; h++) {
            //        if (ig == h) {
            //            var FGsm = PlanCompFabricDet[h].FGsm;
            //            row.find('#txtFGsm').val(FGsm);
            //        }
            //    }
            //});
            //loadCompFabTable(PlanCompFabricDet);
            loadCompFabSaveTable(PlanCompFabricDetSave);
        }
        if (fabfillvar == 'KGSM') {
            //var sn = this.snumb;
            //this.KGsm = kgsm;
            //$('input[id=txtPurQty]').each(function (ig) {
            //    if (fabdata[ig].snumb == sn && fabdata[ig].CompSlNo == compsno) {
            //        var row = $(this).closest('tr');
            //        row.find('#txtKnitgsm').val(kgsm);
            //    }
            //});

            //$.each(PlanCompFabricDetSave, function () {
            //    if (this.CompSlNo == compsno) {
            //        this.KGsm = kgsm;
            //    }
            //});

            $.each(PlanCompFabricDet, function () {
                var sn = this.snumb;
                this.KGsm = kgsm;
            });
            $.each(PlanCompFabricDetSave, function () {
                if (this.CompSlNo == compsno) {
                    this.KGsm = kgsm;
                }
            });
           
            fillfabrictbl(PlanCompFabricDet);
            //var table = $('#tCDbody').DataTable();
            //var ecdata = table.rows().data();
            //$('input[id=txtPurQty]').each(function (ig) {
            //    debugger;
            //    // if (ecdata[ig].snumb == (ig + 1)) {
            //    var row = $(this).closest('tr');
            //    for (var h = 0; h < PlanCompFabricDet.length; h++) {
            //        if (ig == h) {
            //            var KGsm = PlanCompFabricDet[h].KGsm;
            //            row.find('#txtKnitgsm').val(KGsm);
            //        }
            //    }
            //});
            //loadCompFabTable(PlanCompFabricDet);
            loadCompFabSaveTable(PlanCompFabricDetSave);
        }
        if (fabfillvar == 'LOOPLEN') {

            $.each(PlanCompFabricDet, function () {
                var sn = this.snumb;
                this.LoopLen = looplen;
            });
            $.each(PlanCompFabricDetSave, function () {
                if (this.CompSlNo == compsno) {
                    this.LoopLen = looplen;
                }
            });

            fillfabrictbl(PlanCompFabricDet);

            //var sn = this.snumb;
            //this.LoopLen = looplen;
            //$('input[id=txtPurQty]').each(function (ig) {
            //    if (fabdata[ig].snumb == sn && fabdata[ig].CompSlNo == compsno) {
            //        var row = $(this).closest('tr');
            //        row.find('#txtlooplen').val(looplen);
            //    }
            //});

            //$.each(PlanCompFabricDetSave, function () {
            //    if (this.CompSlNo == compsno) {
            //        this.LoopLen = kgsm;
            //    }
            //});
            //fillfabrictbl(PlanCompFabricDet);

            //var table = $('#tCDbody').DataTable();
            //var ecdata = table.rows().data();
            //$('input[id=txtPurQty]').each(function (ig) {
            //    debugger;
            //    // if (ecdata[ig].snumb == (ig + 1)) {
            //    var row = $(this).closest('tr');
            //    for (var h = 0; h < PlanCompFabricDet.length; h++) {
            //        if (ig == h) {
            //            var LoopLen = PlanCompFabricDet[h].LoopLen;
            //            row.find('#txtlooplen').val(LoopLen);
            //        }
            //    }
            //});
            //loadCompFabTable(PlanCompFabricDet);
            loadCompFabSaveTable(PlanCompFabricDetSave);
        }
        if (fabfillvar == 'TEXT') {

            $.each(PlanCompFabricDet, function () {
                var sn = this.snumb;
                this.texture = textur;
            });
            $.each(PlanCompFabricDetSave, function () {
                if (this.CompSlNo == compsno) {
                    this.texture = textur;
                }
            });

            fillfabrictbl(PlanCompFabricDet);

            //var sn = this.snumb;
            //this.texture = textur;
            //$('input[id=txtPurQty]').each(function (ig) {
            //    if (fabdata[ig].snumb == sn && fabdata[ig].CompSlNo == compsno) {
            //        var row = $(this).closest('tr');
            //        row.find('#txtTexture').val(textur);
            //    }
            //});

            //$.each(PlanCompFabricDetSave, function () {
            //    if (this.CompSlNo == compsno) {
            //        this.texture = textur;
            //    }
            //});
            //fillfabrictbl(PlanCompFabricDet);
            //loadCompFabTable(PlanCompFabricDet);
            loadCompFabSaveTable(PlanCompFabricDetSave);
        }
        if (fabfillvar == 'CONT') {

            $.each(PlanCompFabricDet, function () {
                var sn = this.snumb;
                this.content = contnt;
            });
            $.each(PlanCompFabricDetSave, function () {
                if (this.CompSlNo == compsno) {
                    this.content = contnt;
                }
            });

            fillfabrictbl(PlanCompFabricDet);
            //var sn = this.snumb;
            //this.content = contnt;
            //$('input[id=txtPurQty]').each(function (ig) {
            //    if (fabdata[ig].snumb == sn && fabdata[ig].CompSlNo == compsno) {
            //        var row = $(this).closest('tr');
            //        row.find('#txtContent').val(contnt);
            //    }
            //});

            //$.each(PlanCompFabricDetSave, function () {
            //    if (this.CompSlNo == compsno) {
            //        this.content = contnt;
            //    }
            //});
            //fillfabrictbl(PlanCompFabricDet);
            //loadCompFabTable(PlanCompFabricDet);
            loadCompFabSaveTable(PlanCompFabricDetSave);
        }
        if (fabfillvar == 'GUAGE') {

            $.each(PlanCompFabricDet, function () {
                var sn = this.snumb;
                this.guage = guage;
            });
            $.each(PlanCompFabricDetSave, function () {
                if (this.CompSlNo == compsno) {
                    this.guage = guage;
                }
            });

            fillfabrictbl(PlanCompFabricDet);

            //var sn = this.snumb;
            //this.guage = guage;
            //$('input[id=txtPurQty]').each(function (ig) {
            //    if (fabdata[ig].snumb == sn && fabdata[ig].CompSlNo == compsno) {
            //        var row = $(this).closest('tr');
            //        row.find('#txtGauge').val(guage);
            //    }
            //});

            //$.each(PlanCompFabricDetSave, function () {
            //    if (this.CompSlNo == compsno) {
            //        this.guage = guage;
            //    }
            //});
            //var table = $('#tCDbody').DataTable();
            //var ecdata = table.rows().data();
            //$('input[id=txtPurQty]').each(function (ig) {
            //    debugger;
            //    // if (ecdata[ig].snumb == (ig + 1)) {
            //    var row = $(this).closest('tr');
            //    for (var h = 0; h < PlanCompFabricDet.length; h++) {
            //        if (ig == h) {
            //            var guage = PlanCompFabricDet[h].guage;
            //            row.find('#txtGauge').val(guage);
            //        }
            //    }
            //});
            //loadCompFabTable(PlanCompFabricDet);
            loadCompFabSaveTable(PlanCompFabricDetSave);
        }
    }
    if (protype == 'S') {
        if (fabfillvar == 'BC') {
            $.each(PlanCompFabricDet, function () {
                if (this.Size == size) {
                    this.BColorID = bclrid;
                    this.Bcolor = bclr;
                }
            });
            $.each(PlanCompFabricDetSave, function () {
                if (this.CompSlNo == compsno && this.Size == size) {
                    this.BColorID = bclrid;
                    this.Bcolor = bclr;
                }
            });
            /// loadCompFabTable(PlanCompFabricDet);
            fillfabrictbl(PlanCompFabricDet);
            loadCompFabSaveTable(PlanCompFabricDetSave);
        }
        if (fabfillvar == 'BCQT') {
            $.each(PlanCompFabricDet, function () {
                if (this.Size == size) {

                    var sn = this.snumb;
                    var gj = this.Weight - this.FColorPQty;
                    gj.toFixed(3);
                    this.BColorPQty = gj;
                    //$('input[id=txtPurQty]').each(function (ig) {
                    //    if (fabdata[ig].snumb == sn && fabdata[ig].CompSlNo == compsno) {
                    //        var row = $(this).closest('tr');
                    //        row.find('#txtPurQty').val(gj);
                    //    }
                    //});
                }
            });
            $.each(PlanCompFabricDetSave, function () {
                if (this.CompSlNo == compsno && this.Size == size) {
                    var gj = this.Weight - this.FColorPQty;
                    this.BColorPQty = gj;
                }
            });
            fillfabrictbl(PlanCompFabricDet);
            //loadCompFabTable(PlanCompFabricDet);
            loadCompFabSaveTable(PlanCompFabricDetSave);
        }
        if (fabfillvar == 'FIC') {
            $.each(PlanCompFabricDet, function () {
                if (this.Size == size) {
                    this.FColorID = fclrid;
                    this.Fcolor = fcl;
                }
            });
            $.each(PlanCompFabricDetSave, function () {
                if (this.CompSlNo == compsno && this.Size == size) {
                    this.FColorID = fclrid;
                    this.Fcolor = fcl;
                }
            });
            ///loadCompFabTable(PlanCompFabricDet);
            fillfabrictbl(PlanCompFabricDet);
            loadCompFabSaveTable(PlanCompFabricDetSave);
        }
        if (fabfillvar == 'FIQT') {
            $.each(PlanCompFabricDet, function () {
                if (this.Size == size) {

                    var sn = this.snumb;
                    var gj = this.Weight - this.BColorPQty;
                    gj.toFixed(3);
                    this.FColorPQty = gj;

                    //$('input[id=txtPurQty]').each(function (ig) {
                    //    if (fabdata[ig].snumb == sn && fabdata[ig].CompSlNo == compsno) {
                    //        var row = $(this).closest('tr');
                    //        row.find('#txtFPurQty').val(gj);
                    //    }
                    //});
                }
            });
            $.each(PlanCompFabricDetSave, function () {
                if (this.CompSlNo == compsno && this.Size == size) {
                    var gj = this.Weight - this.BColorPQty;
                    this.FColorPQty = gj;
                }
            });
            ///loadCompFabTable(PlanCompFabricDet);
            fillfabrictbl(PlanCompFabricDet);
            loadCompFabSaveTable(PlanCompFabricDetSave);
        }
        if (fabfillvar == 'PRC') {
            $.each(PlanCompFabricDet, function () {
                if (this.Size == size) {
                    this.PColorID = prclid;
                    this.PColor = prcl;
                }
            });
            $.each(PlanCompFabricDetSave, function () {
                if (this.CompSlNo == compsno && this.Size == size) {
                    this.PColorID = prclid;
                    this.PColor = prcl;
                }
            });
            ///loadCompFabTable(PlanCompFabricDet);
            fillfabrictbl(PlanCompFabricDet);
            loadCompFabSaveTable(PlanCompFabricDetSave);
        }
        if (fabfillvar == 'FGSM') {
            $.each(PlanCompFabricDet, function () {
                if (this.Size == size) {
                    var sn = this.snumb;
                    this.FGsm = fgsm;

                    //$('input[id=txtPurQty]').each(function (ig) {
                    //    if (fabdata[ig].snumb == sn && fabdata[ig].CompSlNo == compsno) {
                    //        var row = $(this).closest('tr');
                    //        row.find('#txtFGsm').val(fgsm);
                    //    }
                    //});
                }
            });
            $.each(PlanCompFabricDetSave, function () {
                if (this.CompSlNo == compsno && this.Size == size) {
                    this.FGsm = fgsm;
                }
            });
            fillfabrictbl(PlanCompFabricDet);
            //var table = $('#tCDbody').DataTable();
            //var ecdata = table.rows().data();
            //$('input[id=txtPurQty]').each(function (ig) {
            //    debugger;
            //    // if (ecdata[ig].snumb == (ig + 1)) {
            //    var row = $(this).closest('tr');
            //    for (var h = 0; h < PlanCompFabricDet.length; h++) {
            //        if (ig == h) {
            //            var FGsm = PlanCompFabricDet[h].FGsm;
            //            row.find('#txtFGsm').val(FGsm);
            //        }
            //    }
            //});
            //loadCompFabTable(PlanCompFabricDet);
            loadCompFabSaveTable(PlanCompFabricDetSave);
        }
        if (fabfillvar == 'KGSM') {
            $.each(PlanCompFabricDet, function () {
                if (this.Size == size) {
                    var sn = this.snumb;
                    this.KGsm = kgsm;

                    //$('input[id=txtPurQty]').each(function (ig) {
                    //    if (fabdata[ig].snumb == sn && fabdata[ig].CompSlNo == compsno) {
                    //        var row = $(this).closest('tr');
                    //        row.find('#txtKnitgsm').val(kgsm);
                    //    }
                    //});
                }
            });
            $.each(PlanCompFabricDetSave, function () {
                if (this.CompSlNo == compsno && this.Size == size) {
                    this.KGsm = kgsm;
                }
            });
            fillfabrictbl(PlanCompFabricDet);
            //var table = $('#tCDbody').DataTable();
            //var ecdata = table.rows().data();
            //$('input[id=txtPurQty]').each(function (ig) {
            //    debugger;
            //    // if (ecdata[ig].snumb == (ig + 1)) {
            //    var row = $(this).closest('tr');
            //    for (var h = 0; h < PlanCompFabricDet.length; h++) {
            //        if (ig == h) {
            //            var KGsm = PlanCompFabricDet[h].KGsm;
            //            row.find('#txtKnitgsm').val(KGsm);
            //        }
            //    }
            //});
            //loadCompFabTable(PlanCompFabricDet);
            loadCompFabSaveTable(PlanCompFabricDetSave);
        }
        if (fabfillvar == 'LOOPLEN') {
            $.each(PlanCompFabricDet, function () {
                if (this.Size == size) {
                    var sn = this.snumb;
                    this.LoopLen = looplen;

                    //$('input[id=txtPurQty]').each(function (ig) {
                    //    if (fabdata[ig].snumb == sn && fabdata[ig].CompSlNo == compsno) {
                    //        var row = $(this).closest('tr');
                    //        row.find('#txtlooplen').val(looplen);
                    //    }
                    //});
                }
            });
            $.each(PlanCompFabricDetSave, function () {
                if (this.CompSlNo == compsno && this.Size == size) {
                    this.LoopLen = looplen;
                }
            });
            fillfabrictbl(PlanCompFabricDet);
            //var table = $('#tCDbody').DataTable();
            //var ecdata = table.rows().data();
            //$('input[id=txtPurQty]').each(function (ig) {
            //    debugger;
            //    // if (ecdata[ig].snumb == (ig + 1)) {
            //    var row = $(this).closest('tr');
            //    for (var h = 0; h < PlanCompFabricDet.length; h++) {
            //        if (ig == h) {
            //            var LoopLen = PlanCompFabricDet[h].LoopLen;
            //            row.find('#txtlooplen').val(LoopLen);
            //        }
            //    }
            //});
            //loadCompFabTable(PlanCompFabricDet);
            loadCompFabSaveTable(PlanCompFabricDetSave);
        }
        if (fabfillvar == 'TEXT') {
            $.each(PlanCompFabricDet, function () {
                if (this.Size == size) {
                    var sn = this.snumb;
                    this.texture = textur;

                    //$('input[id=txtPurQty]').each(function (ig) {
                    //    if (fabdata[ig].snumb == sn && fabdata[ig].CompSlNo == compsno) {
                    //        var row = $(this).closest('tr');
                    //        row.find('#txtTexture').val(textur);
                    //    }
                    //});
                }
            });
            $.each(PlanCompFabricDetSave, function () {
                if (this.CompSlNo == compsno && this.Size == size) {
                    this.texture = textur;
                }
            });
            fillfabrictbl(PlanCompFabricDet);
            //loadCompFabTable(PlanCompFabricDet);
            loadCompFabSaveTable(PlanCompFabricDetSave);
        }
        if (fabfillvar == 'CONT') {
            $.each(PlanCompFabricDet, function () {
                if (this.Size == size) {
                    var sn = this.snumb;
                    this.content = contnt;

                    //$('input[id=txtPurQty]').each(function (ig) {
                    //    if (fabdata[ig].snumb == sn && fabdata[ig].CompSlNo == compsno) {
                    //        var row = $(this).closest('tr');
                    //        row.find('#txtContent').val(contnt);
                    //    }
                    //});
                }
            });
            $.each(PlanCompFabricDetSave, function () {
                if (this.CompSlNo == compsno && this.Size == size) {
                    this.content = contnt;
                }
            });
            fillfabrictbl(PlanCompFabricDet);
            //loadCompFabTable(PlanCompFabricDet);
            loadCompFabSaveTable(PlanCompFabricDetSave);
        }
        if (fabfillvar == 'GUAGE') {
            $.each(PlanCompFabricDet, function () {
                if (this.Size == size) {
                    var sn = this.snumb;
                    this.guage = guage;

                    //$('input[id=txtPurQty]').each(function (ig) {
                    //    if (fabdata[ig].snumb == sn && fabdata[ig].CompSlNo == compsno) {
                    //        var row = $(this).closest('tr');
                    //        row.find('#txtGauge').val(guage);
                    //    }
                    //});
                }
            });
            $.each(PlanCompFabricDetSave, function () {
                if (this.CompSlNo == compsno && this.Size == size) {
                    this.guage = guage;
                }
            });
            fillfabrictbl(PlanCompFabricDet);
            //var table = $('#tCDbody').DataTable();
            //var ecdata = table.rows().data();
            //$('input[id=txtPurQty]').each(function (ig) {
            //    debugger;
            //    // if (ecdata[ig].snumb == (ig + 1)) {
            //    var row = $(this).closest('tr');
            //    for (var h = 0; h < PlanCompFabricDet.length; h++) {
            //        if (ig == h) {
            //            var guage = PlanCompFabricDet[h].guage;
            //            row.find('#txtGauge').val(guage);
            //        }
            //    }
            //});
            //loadCompFabTable(PlanCompFabricDet);
            loadCompFabSaveTable(PlanCompFabricDetSave);
        }

    }
    if (protype == 'C') {
        if (fabfillvar == 'BC') {
            $.each(PlanCompFabricDet, function () {
                if (this.Color == color) {
                    this.BColorID = bclrid;
                    this.Bcolor = bclr;
                }
            });
            $.each(PlanCompFabricDetSave, function () {
                if (this.CompSlNo == compsno && this.Color == color) {
                    this.BColorID = bclrid;
                    this.Bcolor = bclr;
                }
            });
            /// loadCompFabTable(PlanCompFabricDet);
            fillfabrictbl(PlanCompFabricDet);
            loadCompFabSaveTable(PlanCompFabricDetSave);
        }
        if (fabfillvar == 'BCQT') {
            $.each(PlanCompFabricDet, function () {
                if (this.Color == color) {

                    var sn = this.snumb;
                    var gj = this.Weight - this.FColorPQty;
                    gj.toFixed(3);
                    this.BColorPQty = gj;
                    //$('input[id=txtPurQty]').each(function (ig) {
                    //    if (fabdata[ig].snumb == sn && fabdata[ig].CompSlNo == compsno) {
                    //        var row = $(this).closest('tr');
                    //        row.find('#txtPurQty').val(gj);
                    //    }
                    //});
                }
            });
            $.each(PlanCompFabricDetSave, function () {
                if (this.CompSlNo == compsno && this.Color == color) {
                    var gj = this.Weight - this.FColorPQty;
                    this.BColorPQty = gj;
                }
            });
            fillfabrictbl(PlanCompFabricDet);
            //loadCompFabTable(PlanCompFabricDet);
            loadCompFabSaveTable(PlanCompFabricDetSave);
        }
        if (fabfillvar == 'FIC') {
            $.each(PlanCompFabricDet, function () {
                if (this.Color == color) {
                    this.FColorID = fclrid;
                    this.Fcolor = fcl;
                }
            });
            $.each(PlanCompFabricDetSave, function () {
                if (this.CompSlNo == compsno && this.Color == color) {
                    this.FColorID = fclrid;
                    this.Fcolor = fcl;
                }
            });
            ///loadCompFabTable(PlanCompFabricDet);
            fillfabrictbl(PlanCompFabricDet);
            loadCompFabSaveTable(PlanCompFabricDetSave);
        }
        if (fabfillvar == 'FIQT') {
            $.each(PlanCompFabricDet, function () {
                if (this.Color == color) {

                    var sn = this.snumb;
                    var gj = this.Weight - this.BColorPQty;
                    gj.toFixed(3);
                    this.FColorPQty = gj;

                    //$('input[id=txtPurQty]').each(function (ig) {
                    //    if (fabdata[ig].snumb == sn && fabdata[ig].CompSlNo == compsno) {
                    //        var row = $(this).closest('tr');
                    //        row.find('#txtFPurQty').val(gj);
                    //    }
                    //});
                }
            });
            $.each(PlanCompFabricDetSave, function () {
                if (this.CompSlNo == compsno && this.Color == color) {
                    var gj = this.Weight - this.BColorPQty;
                    this.FColorPQty = gj;
                }
            });
            ///loadCompFabTable(PlanCompFabricDet);
            fillfabrictbl(PlanCompFabricDet);
            loadCompFabSaveTable(PlanCompFabricDetSave);
        }
        if (fabfillvar == 'PRC') {
            $.each(PlanCompFabricDet, function () {
                if (this.Color == color) {
                    this.PColorID = prclid;
                    this.PColor = prcl;
                }
            });
            $.each(PlanCompFabricDetSave, function () {
                if (this.CompSlNo == compsno && this.Color == color) {
                    this.PColorID = prclid;
                    this.PColor = prcl;
                }
            });
            ///loadCompFabTable(PlanCompFabricDet);
            fillfabrictbl(PlanCompFabricDet);
            loadCompFabSaveTable(PlanCompFabricDetSave);
        }
        if (fabfillvar == 'FGSM') {
            $.each(PlanCompFabricDet, function () {
                if (this.Color == color) {
                    var sn = this.snumb;
                    this.FGsm = fgsm;

                    //$('input[id=txtPurQty]').each(function (ig) {
                    //    if (fabdata[ig].snumb == sn && fabdata[ig].CompSlNo == compsno) {
                    //        var row = $(this).closest('tr');
                    //        row.find('#txtFGsm').val(fgsm);
                    //    }
                    //});
                }
            });
            $.each(PlanCompFabricDetSave, function () {
                if (this.CompSlNo == compsno && this.Color == color) {
                    this.FGsm = fgsm;
                }
            });
            fillfabrictbl(PlanCompFabricDet);
            //var table = $('#tCDbody').DataTable();
            //var ecdata = table.rows().data();
            //$('input[id=txtPurQty]').each(function (ig) {
            //    debugger;
            //    // if (ecdata[ig].snumb == (ig + 1)) {
            //    var row = $(this).closest('tr');
            //    for (var h = 0; h < PlanCompFabricDet.length; h++) {
            //        if (ig == h) {
            //            var FGsm = PlanCompFabricDet[h].FGsm;
            //            row.find('#txtFGsm').val(FGsm);
            //        }
            //    }
            //});
            //loadCompFabTable(PlanCompFabricDet);
            loadCompFabSaveTable(PlanCompFabricDetSave);
        }
        if (fabfillvar == 'KGSM') {
            $.each(PlanCompFabricDet, function () {
                if (this.Color == color) {
                    var sn = this.snumb;
                    this.KGsm = kgsm;

                    //$('input[id=txtPurQty]').each(function (ig) {
                    //    if (fabdata[ig].snumb == sn && fabdata[ig].CompSlNo == compsno) {
                    //        var row = $(this).closest('tr');
                    //        row.find('#txtKnitgsm').val(kgsm);
                    //    }
                    //});
                }
            });
            $.each(PlanCompFabricDetSave, function () {
                if (this.CompSlNo == compsno && this.Color == color) {
                    this.KGsm = kgsm;
                }
            });
            fillfabrictbl(PlanCompFabricDet);
            //var table = $('#tCDbody').DataTable();
            //var ecdata = table.rows().data();
            //$('input[id=txtPurQty]').each(function (ig) {
            //    debugger;
            //    // if (ecdata[ig].snumb == (ig + 1)) {
            //    var row = $(this).closest('tr');
            //    for (var h = 0; h < PlanCompFabricDet.length; h++) {
            //        if (ig == h) {
            //            var KGsm = PlanCompFabricDet[h].KGsm;
            //            row.find('#txtKnitgsm').val(KGsm);
            //        }
            //    }
            //});
            //loadCompFabTable(PlanCompFabricDet);
            loadCompFabSaveTable(PlanCompFabricDetSave);
        }
        if (fabfillvar == 'LOOPLEN') {
            $.each(PlanCompFabricDet, function () {
                if (this.Color == color) {
                    var sn = this.snumb;
                    this.LoopLen = looplen;

                    //$('input[id=txtPurQty]').each(function (ig) {
                    //    if (fabdata[ig].snumb == sn && fabdata[ig].CompSlNo == compsno) {
                    //        var row = $(this).closest('tr');
                    //        row.find('#txtlooplen').val(looplen);
                    //    }
                    //});
                }
            });
            $.each(PlanCompFabricDetSave, function () {
                if (this.CompSlNo == compsno && this.Color == color) {
                    this.LoopLen = looplen;
                }
            });
            fillfabrictbl(PlanCompFabricDet);
            //var table = $('#tCDbody').DataTable();
            //var ecdata = table.rows().data();
            //$('input[id=txtPurQty]').each(function (ig) {
            //    debugger;
            //    // if (ecdata[ig].snumb == (ig + 1)) {
            //    var row = $(this).closest('tr');
            //    for (var h = 0; h < PlanCompFabricDet.length; h++) {
            //        if (ig == h) {
            //            var LoopLen = PlanCompFabricDet[h].LoopLen;
            //            row.find('#txtlooplen').val(LoopLen);
            //        }
            //    }
            //});
            //loadCompFabTable(PlanCompFabricDet);
            loadCompFabSaveTable(PlanCompFabricDetSave);
        }
        if (fabfillvar == 'TEXT') {
            $.each(PlanCompFabricDet, function () {
                if (this.Color == color) {
                    var sn = this.snumb;
                    this.texture = textur;

                    //$('input[id=txtPurQty]').each(function (ig) {
                    //    if (fabdata[ig].snumb == sn && fabdata[ig].CompSlNo == compsno) {
                    //        var row = $(this).closest('tr');
                    //        row.find('#txtTexture').val(textur);
                    //    }
                    //});
                }
            });
            $.each(PlanCompFabricDetSave, function () {
                if (this.CompSlNo == compsno && this.Color == color) {
                    this.texture = textur;
                }
            });
            fillfabrictbl(PlanCompFabricDet);
            //loadCompFabTable(PlanCompFabricDet);
            loadCompFabSaveTable(PlanCompFabricDetSave);
        }
        if (fabfillvar == 'CONT') {
            $.each(PlanCompFabricDet, function () {
                if (this.Color == color) {
                    var sn = this.snumb;
                    this.content = contnt;

                    //$('input[id=txtPurQty]').each(function (ig) {
                    //    if (fabdata[ig].snumb == sn && fabdata[ig].CompSlNo == compsno) {
                    //        var row = $(this).closest('tr');
                    //        row.find('#txtContent').val(contnt);
                    //    }
                    //});
                }
            });
            $.each(PlanCompFabricDetSave, function () {
                if (this.CompSlNo == compsno && this.Color == color) {
                    this.content = contnt;
                }
            });
            fillfabrictbl(PlanCompFabricDet);
            //loadCompFabTable(PlanCompFabricDet);
            loadCompFabSaveTable(PlanCompFabricDetSave);
        }
        if (fabfillvar == 'GUAGE') {
            $.each(PlanCompFabricDet, function () {
                if (this.Color == color) {
                    var sn = this.snumb;
                    this.guage = guage;

                    //$('input[id=txtPurQty]').each(function (ig) {
                    //    if (fabdata[ig].snumb == sn && fabdata[ig].CompSlNo == compsno) {
                    //        var row = $(this).closest('tr');
                    //        row.find('#txtGauge').val(guage);
                    //    }
                    //});
                }
            });
            $.each(PlanCompFabricDetSave, function () {
                if (this.CompSlNo == compsno && this.Color == color) {
                    this.guage = guage;
                }
            });
            //var table = $('#tCDbody').DataTable();
            //var ecdata = table.rows().data();
            //$('input[id=txtPurQty]').each(function (ig) {
            //    debugger;
            //    // if (ecdata[ig].snumb == (ig + 1)) {
            //    var row = $(this).closest('tr');
            //    for (var h = 0; h < PlanCompFabricDet.length; h++) {
            //        if (ig == h) {
            //            var guage = PlanCompFabricDet[h].guage;
            //            row.find('#txtGauge').val(guage);
            //        }
            //    }
            //});
            //loadCompFabTable(PlanCompFabricDet);
            fillfabrictbl(PlanCompFabricDet);
            loadCompFabSaveTable(PlanCompFabricDetSave);
        }
    }

    //PlanYarn
    var totalqty = 0;
    for (var w = 0; w < PlanCompFabricDetSave.length; w++) {
        if (PlanCompFabricDetSave[w].CompSlNo == compsno) {

            var qty = PlanCompFabricDetSave[w].Weight;
            totalqty = totalqty + parseFloat(qty);
        }
    }

    var bcqty = 0;
    for (var w = 0; w < PlanCompFabricDetSave.length; w++) {
        if (PlanCompFabricDetSave[w].CompSlNo == compsno) {

            var qty = PlanCompFabricDetSave[w].BColorPQty;
            bcqty = bcqty + parseFloat(qty);
        }
    }


    var finqty = 0;
    for (var w = 0; w < PlanCompFabricDetSave.length; w++) {
        if (PlanCompFabricDetSave[w].CompSlNo == compsno) {

            var qty = PlanCompFabricDetSave[w].FColorPQty;
            finqty = finqty + parseFloat(qty);
        }
    }


    var totclrqty = parseFloat(bcqty) + parseFloat(finqty);
    //if (totclrqty == totalqty) {

    //    PlanYarnSave = $.grep(PlanYarnSave, function (r) {
    //        return r.SlNo != compsno;

    //    });
    //    PlanYarn = [];
    //    loadYarndetTab(PlanYarn);
    //    loadYarnSavedetTab(PlanYarnSave);


    //}
    //else if (totalqty > totclrqty) {


    //    var result = [];
    //    $.each(PlanCompFabricDet, function (i, e) {
    //        var matchingItems = $.grep(result, function (item) {
    //            return item.BColorID === e.BColorID;
    //        });
    //        if (matchingItems.length === 0) {
    //            result.push(e);
    //        }
    //    });


    //    if (result.length > 0) {
    //        for (var d = 0; d < result.length; d++) {
    //            var bid = result[d].BColorID;
    //            var bclr = result[d].Bcolor;
    //            if (type == 'KNITS') {
    //                var totqty = 0;

    //                for (var w = 0; w < PlanCompFabricDetSave.length; w++) {
    //                    if (PlanCompFabricDetSave[w].BColorID == bid && PlanCompFabricDetSave[w].CompSlNo == compsno) {

    //                        var qty = PlanCompFabricDetSave[w].Weight;
    //                        totqty = totqty + parseFloat(qty);
    //                    }
    //                }


    //                var bcqty = 0;
    //                for (var w = 0; w < PlanCompFabricDetSave.length; w++) {
    //                    if (PlanCompFabricDetSave[w].BColorID == bid && PlanCompFabricDetSave[w].CompSlNo == compsno) {

    //                        var qty = PlanCompFabricDetSave[w].BColorPQty;
    //                        bcqty = bcqty + parseFloat(qty);
    //                    }
    //                }


    //                var finqty = 0;
    //                for (var w = 0; w < PlanCompFabricDetSave.length; w++) {
    //                    if (PlanCompFabricDetSave[w].BColorID == bid && PlanCompFabricDetSave[w].CompSlNo == compsno) {

    //                        var qty = PlanCompFabricDetSave[w].FColorPQty;
    //                        finqty = finqty + parseFloat(qty);
    //                    }
    //                }


    //                var tqty = (parseFloat(bcqty) + parseFloat(finqty)).toFixed(3);

    //                //for (var w = 0; w < PlanCompFabricDet.length; w++) {
    //                //    var sno = PlanCompFabricDet[w].snumb;
    //                //    if (PlanCompFabricDet[w].BColorID == bid && PlanCompFabricDetSave[w].CompSlNo == compsno && PlanCompFabricDet[w].snumb == sno) {

    //                totqty = totqty - tqty;
    //                //    }
    //                //}
    //            }
    //            else {
    //                var respan = [];
    //                for (var w = 0; w < PlanCompFabricDetSave.length; w++) {
    //                    if (PlanCompFabricDetSave[w].BColorID == bid && PlanCompFabricDetSave[w].CompSlNo == compsno) {
    //                        var bqty = PlanCompFabricDetSave[w].BColorPQty;
    //                        var fqty = PlanCompFabricDetSave[w].FColorPQty;
    //                        var twt = PlanCompFabricDetSave[w].Weight;
    //                        var tot = parseFloat(bqty) + parseFloat(fqty);
    //                        var ww = (parseFloat(twt) - parseFloat(tot)).toFixed(3);
    //                        var gr = PlanCompFabricDetSave[w].Grammage;
    //                        var res = ((ww * gr) / 1000).toFixed(3);
    //                        respan.push(res);
    //                    }
    //                }
    //                if (respan.length > 0) {
    //                    var totqty = 0;
    //                    for (var w = 0; w < respan.length; w++) {
    //                        var qty = respan[w];
    //                        totqty = totqty + parseFloat(qty);
    //                    }
    //                }
    //            }
    //            totqty = (totqty).toFixed(3);
    //            if (protype == 'A') {
    //                if (fabfillvar == 'BC') {
    //                    for (var p = 0; p < PlanYarnSave.length; p++) {
    //                        if (PlanYarnSave[p].BColor == bclr && PlanYarnSave[p].SlNo == compsno) {
    //                            PlanYarnSave[p].Fabric_Weight = totqty;//PlanYarnSave[p].Fabric_Weight - tqty;

    //                        }
    //                        else if (PlanYarnSave[p].BColor != bclr && PlanYarnSave[p].SlNo == compsno) {
    //                            PlanYarnSave[p].Fabric_Weight = 0;
    //                        }
    //                    }
    //                }
    //            }
    //            else if (protype == 'C' || protype == 'S') {
    //                if (fabfillvar == 'BC') {
    //                    for (var p = 0; p < PlanYarnSave.length; p++) {
    //                        if (PlanYarnSave[p].BColor == bclr && PlanYarnSave[p].SlNo == compsno) {
    //                            PlanYarnSave[p].Fabric_Weight = totqty;//PlanYarnSave[p].Fabric_Weight - tqty;

    //                        }
    //                        //else if (PlanYarnSave[p].BColor != bclr && PlanYarnSave[p].SlNo == compsno) {
    //                        //    PlanYarnSave[p].Fabric_Weight = 0;
    //                        //}
    //                    }
    //                }
    //            }
    //        }
    //    }
    //    var vb = [];
    //    if (PlanYarnSave.length > result.length) {

    //        for (var g = 0; g < PlanYarnSave.length; g++) {
    //            if (PlanYarnSave[g].SlNo == compsno) {
    //                var bcl = PlanYarnSave[g].BColor;
    //                for (var d = 0; d < result.length; d++) {
    //                    if (result[d].Bcolor == bcl) {
    //                        vb.push(PlanYarnSave[g]);
    //                    }
    //                }
    //            }
    //        }
    //        if (vb.length > 0) {
    //            PlanYarnSave = jQuery.grep(PlanYarnSave, function (value) {
    //                return (value.SlNo != compsno);
    //            });
    //            for (var g = 0; g < vb.length; g++) {
    //                PlanYarnSave.push(vb[g]);
    //            }
    //        }
    //    }
    //    else {

    //        if (respan.length > 0) {
    //            var totqty = 0;
    //            for (var w = 0; w < respan.length; w++) {
    //                var qty = respan[w];
    //                totqty = totqty + parseFloat(qty);
    //            }
    //        }
    //        totqty = totqty.toFixed(3);
    //        for (var d = 0; d < PlanYarnSave.length; d++) {
    //            if (PlanYarnSave[d].SlNo == compsno) {
    //                PlanYarnSave[d].Fabric_Weight = totqty;
    //            }
    //        }
    //    }
    //    //loadYarndetTab
    //    PlanYarnSave = jQuery.grep(PlanYarnSave, function (value) {
    //        return (value.Fabric_Weight != 0);
    //    });
    //    PlanYarnSave = jQuery.grep(PlanYarnSave, function (value) {
    //        return (value.Fabric_Weight > 0);
    //    });
    //    loadYarnSavedetTab(PlanYarnSave);

    //    var ctry = [];
    //    ctry = PlanYarnSave;
    //    ctry = $.grep(ctry, function (e) {
    //        if (e.SlNo == compsno) {
    //            return e;
    //        }
    //    });
    //    PlanYarn = ctry;

    //    loadYarndetTab(PlanYarn);

    //    //yarndet

    //    if (PlanYarnDetSave.length > 0) {

    //        var ys = PlanYarn[0].YSlno;

    //        for (var b = 0; b < PlanYarnSave.length; b++) {
    //            if (PlanYarnSave[b].SlNo == CompSlNo) {
    //                var pysl = PlanYarnSave[b].YSlno;
    //                var cmpsl = PlanYarnSave[b].SlNo;
    //                var wgt = PlanYarnSave[b].Fabric_Weight;
    //                var bcid = PlanYarnSave[b].Fabric_ColorId;

    //                for (var m = 0; m < PlanYarnDetSave.length; m++) {
    //                    if (PlanYarnDetSave[m].CompSno == cmpsl) {
    //                        var s = PlanYarnDetSave[m].SlNo;
    //                        if (PlanYarnDetSave[m].BaseColorID == bcid) {
    //                            YsBp = 1;
    //                            var pr = PlanYarnDetSave[m].Knit_In_Per;
    //                            var re = parseFloat((pr * wgt) / 100);
    //                            re = re.toFixed(3);
    //                            PlanYarnDetSave[m].Knit_In_Qty = re;
    //                            PlanYarnDetSave[m].Knit_In_ActQty = re;
    //                            PlanYarnDetSave[m].YSlNo = pysl;
    //                            PlanYarnDetSave[m].SlNo = s;
    //                            //PlanYarnDetSave[m].FabricID = FabricId;
    //                        }

    //                    }
    //                }
    //            }
    //        }
    //        PlanYarnDet = $.grep(PlanYarnDetSave, function (e) {
    //            return e.CompSno == CompSlNo && e.YSlNo == ys;
    //        });
    //        Loadsepyarn(PlanYarnDet);
    //        LoadsepSaveyarn(PlanYarnDetSave);
    //    }
    //}

}

function fillfabrictbl(PlanCompFabricDet) {

    debugger;

    var table = $('#tCDbody').DataTable();
    var ecdata = table.rows().data();
    debugger;
    $('input[id=txtPurQty]').each(function (ig) {
        debugger;
        // if (ecdata[ig].snumb == (ig + 1)) {
        var row = $(this).closest('tr');

        for (var h = 0; h < PlanCompFabricDet.length; h++) {
            if (ig == h) {
                var snumb = PlanCompFabricDet[h].snumb;
                var FPlanId = PlanCompFabricDet[h].FPlanId;
                var ColorID = PlanCompFabricDet[h].ColorID;
                var Color = PlanCompFabricDet[h].Color;
                var SizeId = PlanCompFabricDet[h].SizeId;
                var Size = PlanCompFabricDet[h].Size;
                var Prdn_Qty = PlanCompFabricDet[h].Prdn_Qty;
                var ActWeight = PlanCompFabricDet[h].ActWeight;
                var Weight = PlanCompFabricDet[h].Weight;
                var Grammage = PlanCompFabricDet[h].Grammage;
                var FabricID = PlanCompFabricDet[h].FabricID;

                var GreyWidthID = PlanCompFabricDet[h].GreyWidthID;
                var FinishWidthID = PlanCompFabricDet[h].FinishWidthID;
                var FabricType = PlanCompFabricDet[h].FabricType;
                var PlanID = PlanCompFabricDet[h].PlanID;
                var CompSlNo = PlanCompFabricDet[h].CompSlNo;
                var Bcolor = PlanCompFabricDet[h].Bcolor;
                var BColorPQty = PlanCompFabricDet[h].BColorPQty;
                var Fcolor = PlanCompFabricDet[h].Fcolor;
                var FColorPQty = PlanCompFabricDet[h].FColorPQty;
                var PColor = PlanCompFabricDet[h].PColor;
                var FGsm = PlanCompFabricDet[h].FGsm;

                var KGsm = PlanCompFabricDet[h].KGsm;
                var LoopLen = PlanCompFabricDet[h].LoopLen;
                var texture = PlanCompFabricDet[h].texture;
                var content = PlanCompFabricDet[h].content;
                var guage = PlanCompFabricDet[h].guage;
                var CheckDcMade = PlanCompFabricDet[h].CheckDcMade;
                var Woven_Req_InMtrs = PlanCompFabricDet[h].Woven_Req_InMtrs;

                //if (comsn == CompSlNo) {


                //row.find('#txtsnumb').val(snumb);
                row.find('#txtColor').val(Color);
                row.find('#txtSize').val(Size);
                row.find('#txtfabPrdQty').val(Prdn_Qty);
                row.find('#txtfabActwt').val(ActWeight);
                row.find('#txtfabwt').val(Weight);
                row.find('#txtPurQty').val(BColorPQty);
                row.find('#txtFPurQty').val(FColorPQty);
                row.find('#txtFGsm').val(FGsm);
                row.find('#txtKnitgsm').val(KGsm);
                row.find('#txtlooplen').val(LoopLen);
                row.find('#txtTexture').val(texture);
                row.find('#txtContent').val(content);
                row.find('#txtGauge').val(guage);
                // row.find('#txtNos').val('(' + Woven_Req_InMtrs * Grammage + ')' + Woven_Req_InMtrs);
                row.find('#txtNos').val(Woven_Req_InMtrs);

                if (PColor == null) {
                    PColor = '--Select--';
                }
                // row.find('#ddlBColor option:selected').text(Bcolor);
                $.each(BaseColorlist, function (k, v) {
                    var id = 0;
                    if (Bcolor === v.Color) {
                        id = v.ColorID
                        row.find('#ddlBColor').val(id);
                    }

                });
                // row.find('#ddlFColor option:selected').text(Fcolor);
                $.each(FinishColorlist, function (k, v) {
                    var id = 0;
                    if (Fcolor === v.Color) {
                        id = v.ColorID
                        row.find('#ddlFColor').val(id);
                    }

                });
                // row.find('#ddlPColor option:selected').text(PColor);
                $.each(PrintColorlist, function (k, v) {
                    var id = 0;
                    if (PColor === v.Color) {
                        id = v.ColorID
                        row.find('#ddlPColor').val(id);
                    }

                });


                if (CheckDcMade > "0") {
                    $('td', row).css('background-color', '#FCF3CF');

                    row.find('#ddlBColor').attr('disabled', true);
                    row.find('#ddlFColor').attr('disabled', true);
                    row.find('#txtPurQty').attr('disabled', true);
                    row.find('#txtFPurQty').attr('disabled', true);

                }
                else {
                    $('td', row).css('background-color', '#ffffff');

                    row.find('#ddlBColor').attr('disabled', false);
                    row.find('#ddlFColor').attr('disabled', false);
                    row.find('#txtPurQty').attr('disabled', false);
                    row.find('#txtFPurQty').attr('disabled', false);

                }

                if (FabricType == 'P') {

                    var tbl = $('#tCDbody');
                    tbl.DataTable().column(9).visible(true);
                } else {
                    var tbl = $('#tCDbody');
                    tbl.DataTable().column(9).visible(false);
                }


            }
        }
        // }
    });



}

function loadtable() {
    debugger;
    LoadingSymb();
    indexforfill;
    var currentrow = ConItemList.slice(indexforfill);

    var sno = currentrow[0].CompSlNo;
    var pno = currentrow[0].CPlanSlNo;
    var PQty = currentrow[0].Prdn_Qty;
    var totpcs = currentrow[0].TotPieces;
    var l = currentrow[0].Length;
    var allen = currentrow[0].AlloLen;
    var w = currentrow[0].Width;
    var allwid = currentrow[0].AllowWid;
    var g = currentrow[0].GSM;
    var gram = currentrow[0].Grammage;
    var color = currentrow[0].Color;
    var size = currentrow[0].Size;
    var Colorid = currentrow[0].ColorID;
    var Sizeid = currentrow[0].SizeId;
    var Wtgh = currentrow[0].Weight;
    var fid = currentrow[0].FinishWidthID;
    var fin = currentrow[0].FinishWidth;
    var gid = currentrow[0].GreyWidthID;
    var gry = currentrow[0].GreyWidth;
    var grmpcs = currentrow[0].GmsPieces;
    var req = currentrow[0].Requirement;
    var tomt = currentrow[0].TotMetres;
    var wtmet = currentrow[0].WtMetre;
    var pat = currentrow[0].Pattern;
    var noofparts = currentrow[0].No_Of_Parts;

    //var twt = PQty * gram / 1000;  

    for (var t = 0; t < compList.length; t++) {
        if (compList[t].CompSlNo == sno) {
            var parts = compList[t].No_Of_Parts;
        }
    }

    var table = $('#tCPIbody').DataTable();
    var data = table.rows().data();


    var fabtable = $('#tCDbody').DataTable();
    var fabdata = fabtable.rows().data();

    if (type == 'KNITS') {

        var protype = $('input[name="ALType"]:checked').attr('value');
        if (protype == 'A') {
            if (fillvar == 'L' || fillvar == 'W' || fillvar == 'GS' || fillvar == 'AL' || fillvar == 'AW' || fillvar == 'P') {

                //Dia
                var dd = parseFloat(w) + parseFloat(allwid);
                dd = parseFloat(dd / 2.54).toFixed(0);
                var r = dd + "DIA";

                var fab = $.grep(Fabriclist, function (e) {

                    return e.Size == r;

                });
                var fid = 0;
                var fn = '';
                if (fab.length == 0 && dd != 0) {

                    DiaSize = r;
                    //SizeAdd(r);

                    $.when($.ajax(SizeAdd(r))).done(function getfabric() {

                        var fabres = $.grep(Fabriclist, function (e) {

                            return e.Size == DiaSize;

                        });
                        fid = fabres[0].SizeId;
                        fn = fabres[0].Size;

                    });
                }
                else {
                    if (dd == 0) {
                        fid = 0;
                        fn = '--Select--';
                    }
                    else {
                        var fabres = $.grep(Fabriclist, function (e) {

                            return e.Size == DiaSize;

                        });
                        fid = fabres[0].SizeId;
                        fn = fabres[0].Size;
                    }

                }
                $.each(ConItemList, function () {
                    this.Length = l;
                    this.AlloLen = allen;
                    this.Width = w;
                    this.AllowWid = allwid;
                    this.Pattern = pat;
                    this.GSM = g;

                    if (pat == 0) {
                        res1 = 0;
                    }
                    else {
                        var totlen = parseFloat(l) + parseFloat(allen);
                        var totwid = parseFloat(w) + parseFloat(allwid);
                        var res1 = parseFloat(parseFloat(totlen * totwid) / pat);
                    }

                    res1 = res1.toFixed(3);
                    var res = (res1 * g) / 10000;

                    this.Grammage = res;
                    this.FinishWidthID = fid;
                    this.FinishWidth = fn;
                    this.GreyWidthID = fid;
                    this.GreyWidth = fn;

                });
                $.each(ConItemListSave, function () {
                    if (this.CompSlNo == sno) {
                        this.Length = l;
                        this.AlloLen = allen;
                        this.Width = w;
                        this.AllowWid = allwid;
                        this.Pattern = pat;
                        this.GSM = g;

                        if (pat == 0) {
                            res1 = 0;
                        }
                        else {
                            var totlen = parseFloat(l) + parseFloat(allen);
                            var totwid = parseFloat(w) + parseFloat(allwid);
                            var res1 = parseFloat(parseFloat(totlen * totwid) / pat);
                        }

                        res1 = res1.toFixed(3);
                        var res = (res1 * g) / 10000;

                        this.Grammage = res;
                        this.FinishWidthID = fid;
                        this.FinishWidth = fn;
                        this.GreyWidthID = fid;
                        this.GreyWidth = fn;

                    }
                });

                //for (var s = 0; s < ConItemList.length; s++) {


                //    var sn = ConItemList[s].CPlanSlNo;
                //    p = ConItemList[s].Prdn_Qty;
                //    rm = ConItemList[s].Grammage;
                //    ConItemList[s].Weight = (((p * rm) / 1000) * parts).toFixed(3);


                //    $('input[id=txtGram]').each(function (ig) {
                //        if (data[ig].CPlanSlNo == sn) {
                //            var row = $(this).closest('tr');
                //            row.find('#txtLen').val(l);
                //            row.find('#txtallowLen').val(allen);
                //            row.find('#txtWidth').val(w);
                //            row.find('#txtalloeWidth').val(allwid);
                //            row.find('#txtGsm').val(g);
                //            if (pat == 0) {
                //                res1 = 0;
                //            }
                //            else {
                //                var totlen = parseFloat(l) + parseFloat(allen);
                //                var totwid = parseFloat(w) + parseFloat(allwid);
                //                var res1 = parseFloat(parseFloat(totlen * totwid) / pat);
                //            }

                //            res1 = res1.toFixed(3);
                //            var res = (res1 * g) / 10000;
                //            row.find('#txtPattern').val(pat);
                //            row.find('#txtGram').val(res);
                //            row.find('#txtWght').val((((p * rm) / 1000) * parts).toFixed(3));

                //        }
                //    });
                //}


                loadAdConTable(ConItemList);

                //if (Colorid > 0 && Sizeid > 0) {
                //    for (var s = 0; s < ConItemListSave.length; s++) {
                //        if (ConItemListSave[s].CompSlNo == sno) {
                //            var sn = ConItemListSave[s].CPlanSlNo;
                //            p = ConItemListSave[s].Prdn_Qty;
                //            rm = ConItemListSave[s].Grammage;
                //            ConItemListSave[s].Weight = (((p * rm) / 1000) * parts).toFixed(3);

                //            for (var n = 0; n < PlanCompFabricDetSave.length; n++) {
                //                if (PlanCompFabricDetSave[n].CompSlNo == sno && PlanCompFabricDetSave[n].snumb == sn) {
                //                    PlanCompFabricDetSave[n].ActWeight = ConItemListSave[s].Weight;
                //                    PlanCompFabricDetSave[n].Weight = ConItemListSave[s].Weight;
                //                    PlanCompFabricDetSave[n].Grammage = ConItemListSave[s].Grammage;
                //                    PlanCompFabricDetSave[n].FinishWidthID = fid;
                //                    PlanCompFabricDetSave[n].FinishWidth = fn;
                //                    PlanCompFabricDetSave[n].GreyWidthID = fid;
                //                    PlanCompFabricDetSave[n].GreyWidth = fn;
                //                    //continue;
                //                    $('input[id=txtPurQty]').each(function (ig) {
                //                        if (fabdata[ig].snumb == sn && fabdata[ig].CompSlNo == sno) {
                //                            var row = $(this).closest('tr');
                //                            row.find('#txtfabActwt').val(ConItemListSave[s].Weight);
                //                            row.find('#txtfabwt').val(ConItemListSave[s].Weight);
                //                            row.find('#txtfabgram').val(ConItemListSave[s].Grammage);
                //                        }
                //                    });
                //                }
                //            }
                //        }
                //    }
                //    loadconSaveTable(ConItemListSave);
                //    loadCompFabSaveTable(PlanCompFabricDetSave);
                //}

                //if (Colorid > 0 && Sizeid == 0) {
                //    for (var s = 0; s < ConItemListSave.length; s++) {
                //        if (ConItemListSave[s].CompSlNo == sno) {
                //            var sn = ConItemListSave[s].CPlanSlNo;
                //            var cl = ConItemListSave[s].ColorID;
                //            p = ConItemListSave[s].Prdn_Qty;
                //            rm = ConItemListSave[s].Grammage;
                //            ConItemListSave[s].Weight = (((p * rm) / 1000) * parts).toFixed(3);
                //            var tet = (((p * rm) / 1000) * parts).toFixed(3);

                //            for (var n = 0; n < PlanCompFabricDetSave.length; n++) {
                //                var snum = PlanCompFabricDetSave[n].snumb;
                //                if (PlanCompFabricDetSave[n].CompSlNo == sno && PlanCompFabricDetSave[n].ColorID == cl && PlanCompFabricDetSave[n].snumb == snum) {
                //                    var aw = tet / p;

                //                    PlanCompFabricDetSave[n].ActWeight = (aw * PlanCompFabricDetSave[n].Prdn_Qty).toFixed(3);
                //                    PlanCompFabricDetSave[n].Weight = (aw * PlanCompFabricDetSave[n].Prdn_Qty).toFixed(3);
                //                    PlanCompFabricDetSave[n].Grammage = ConItemListSave[s].Grammage;
                //                    PlanCompFabricDetSave[n].FinishWidthID = fid;
                //                    PlanCompFabricDetSave[n].FinishWidth = fn;
                //                    PlanCompFabricDetSave[n].GreyWidthID = fid;
                //                    PlanCompFabricDetSave[n].GreyWidth = fn;
                //                    $('input[id=txtPurQty]').each(function (ig) {
                //                        if (fabdata[ig].snumb == snum && fabdata[ig].CompSlNo == sno && fabdata[ig].ColorID == cl) {
                //                            var row = $(this).closest('tr');
                //                            row.find('#txtfabActwt').val((aw * PlanCompFabricDetSave[n].Prdn_Qty).toFixed(3));
                //                            row.find('#txtfabwt').val((aw * PlanCompFabricDetSave[n].Prdn_Qty).toFixed(3));
                //                            row.find('#txtfabgram').val(ConItemListSave[s].Grammage);
                //                        }
                //                    });
                //                }
                //            }
                //        }
                //    }

                //    loadconSaveTable(ConItemListSave);
                //    loadCompFabSaveTable(PlanCompFabricDetSave);
                //}
                //if (Colorid == 0 && Sizeid > 0) {
                //    for (var s = 0; s < ConItemListSave.length; s++) {
                //        if (ConItemListSave[s].CompSlNo == sno) {
                //            var sn = ConItemListSave[s].CPlanSlNo;
                //            var sz = ConItemListSave[s].SizeId;
                //            p = ConItemListSave[s].Prdn_Qty;
                //            rm = ConItemListSave[s].Grammage;
                //            ConItemListSave[s].Weight = (((p * rm) / 1000) * parts).toFixed(3);
                //            var tet = (((p * rm) / 1000) * parts).toFixed(3);

                //            for (var n = 0; n < PlanCompFabricDetSave.length; n++) {
                //                var snum = PlanCompFabricDetSave[n].snumb;
                //                if (PlanCompFabricDetSave[n].CompSlNo == sno && PlanCompFabricDetSave[n].SizeId == sz && PlanCompFabricDetSave[n].snumb == snum) {
                //                    var aw = tet / p;

                //                    PlanCompFabricDetSave[n].ActWeight = (aw * PlanCompFabricDetSave[n].Prdn_Qty).toFixed(3);
                //                    PlanCompFabricDetSave[n].Weight = (aw * PlanCompFabricDetSave[n].Prdn_Qty).toFixed(3);
                //                    PlanCompFabricDetSave[n].Grammage = ConItemListSave[s].Grammage;
                //                    PlanCompFabricDetSave[n].FinishWidthID = fid;
                //                    PlanCompFabricDetSave[n].FinishWidth = fn;
                //                    PlanCompFabricDetSave[n].GreyWidthID = fid;
                //                    PlanCompFabricDetSave[n].GreyWidth = fn;
                //                    $('input[id=txtPurQty]').each(function (ig) {
                //                        if (fabdata[ig].snumb == snum && fabdata[ig].CompSlNo == sno && fabdata[ig].SizeId == sz) {
                //                            var row = $(this).closest('tr');
                //                            row.find('#txtfabActwt').val((aw * PlanCompFabricDetSave[n].Prdn_Qty).toFixed(3));
                //                            row.find('#txtfabwt').val((aw * PlanCompFabricDetSave[n].Prdn_Qty).toFixed(3));
                //                            row.find('#txtfabgram').val(ConItemListSave[s].Grammage);
                //                        }
                //                    });
                //                }
                //            }
                //        }
                //    }

                //    loadconSaveTable(ConItemListSave);
                //    loadCompFabSaveTable(PlanCompFabricDetSave);
                //}
                //var ctry = [];
                //ctry = PlanCompFabricDetSave;
                //ctry = $.grep(ctry, function (e) {
                //    if (e.CompSlNo == sno) {
                //        return e;
                //    }
                //});
                //PlanCompFabricDet = ctry;
                // loadCompFabTable(PlanCompFabricDet);



            }

            if (fillvar == 'GRM') {
                $.each(ConItemList, function () {
                    this.Length = l;
                    this.Width = w;
                    this.GSM = g;
                    this.Grammage = gram;

                });
                $.each(ConItemListSave, function () {
                    if (this.CompSlNo == sno) {
                        this.Length = l;
                        this.Width = w;
                        this.GSM = g;
                        this.Grammage = gram;

                    }
                });

                for (var s = 0; s < ConItemList.length; s++) {
                    //if (ConItemList[s].CompSlNo == sno && ConItemList[s].CPlanSlNo == pno) {
                    var sn = ConItemList[s].CPlanSlNo;
                    p = ConItemList[s].Prdn_Qty;
                    rm = ConItemList[s].Grammage;
                    ConItemList[s].Weight = (((p * rm) / 1000) * parts).toFixed(3);
                    //}
                    $('input[id=txtGram]').each(function (ig) {
                        if (data[ig].CPlanSlNo == sn) {
                            var row = $(this).closest('tr');
                            row.find('#txtLen').val(l);
                            row.find('#txtWidth').val(w);
                            row.find('#txtGsm').val(g);
                            row.find('#txtGram').val(gram);
                            row.find('#txtWght').val((((p * rm) / 1000) * parts).toFixed(3));



                        }
                    });
                }

                //loadAdConTable(ConItemList);

                //if (Colorid > 0 && Sizeid > 0) {
                //    for (var s = 0; s < ConItemListSave.length; s++) {
                //        if (ConItemListSave[s].CompSlNo == sno) {
                //            var sn = ConItemListSave[s].CPlanSlNo;
                //            p = ConItemListSave[s].Prdn_Qty;
                //            rm = ConItemListSave[s].Grammage;
                //            ConItemListSave[s].Weight = (((p * rm) / 1000) * parts).toFixed(3);

                //            for (var n = 0; n < PlanCompFabricDetSave.length; n++) {
                //                if (PlanCompFabricDetSave[n].CompSlNo == sno && PlanCompFabricDetSave[n].snumb == sn) {
                //                    PlanCompFabricDetSave[n].ActWeight = ConItemListSave[s].Weight;
                //                    PlanCompFabricDetSave[n].Weight = ConItemListSave[s].Weight;
                //                    PlanCompFabricDetSave[n].Grammage = ConItemListSave[s].Grammage;

                //                    $('input[id=txtPurQty]').each(function (ig) {
                //                        if (fabdata[ig].snumb == sn && fabdata[ig].CompSlNo == sno) {
                //                            var row = $(this).closest('tr');
                //                            row.find('#txtfabActwt').val(ConItemListSave[s].Weight);
                //                            row.find('#txtfabwt').val(ConItemListSave[s].Weight);
                //                            row.find('#txtfabgram').val(ConItemListSave[s].Grammage);
                //                        }
                //                    });
                //                }
                //            }
                //        }
                //    }
                //    loadconSaveTable(ConItemListSave);
                //    loadCompFabSaveTable(PlanCompFabricDetSave);
                //}
                //if (Colorid > 0 && Sizeid == 0) {
                //    for (var s = 0; s < ConItemListSave.length; s++) {
                //        if (ConItemListSave[s].CompSlNo == sno) {
                //            var sn = ConItemListSave[s].CPlanSlNo;
                //            var cl = ConItemListSave[s].ColorID;
                //            p = ConItemListSave[s].Prdn_Qty;
                //            rm = ConItemListSave[s].Grammage;
                //            ConItemListSave[s].Weight = (((p * rm) / 1000) * parts).toFixed(3);
                //            var tet = (((p * rm) / 1000) * parts).toFixed(3);

                //            for (var n = 0; n < PlanCompFabricDetSave.length; n++) {
                //                var snum = PlanCompFabricDetSave[n].snumb;
                //                if (PlanCompFabricDetSave[n].CompSlNo == sno && PlanCompFabricDetSave[n].ColorID == cl && PlanCompFabricDetSave[n].snumb == snum) {
                //                    var aw = tet / p;

                //                    PlanCompFabricDetSave[n].ActWeight = (aw * PlanCompFabricDetSave[n].Prdn_Qty).toFixed(3);
                //                    PlanCompFabricDetSave[n].Weight = (aw * PlanCompFabricDetSave[n].Prdn_Qty).toFixed(3);
                //                    PlanCompFabricDetSave[n].Grammage = ConItemListSave[s].Grammage;

                //                    $('input[id=txtPurQty]').each(function (ig) {
                //                        if (fabdata[ig].snumb == snum && fabdata[ig].CompSlNo == sno && fabdata[ig].ColorID == cl) {
                //                            var row = $(this).closest('tr');
                //                            row.find('#txtfabActwt').val((aw * PlanCompFabricDetSave[n].Prdn_Qty).toFixed(3));
                //                            row.find('#txtfabwt').val((aw * PlanCompFabricDetSave[n].Prdn_Qty).toFixed(3));
                //                            row.find('#txtfabgram').val(ConItemListSave[s].Grammage);
                //                        }
                //                    });
                //                }
                //            }
                //        }
                //    }

                //    loadconSaveTable(ConItemListSave);
                //    loadCompFabSaveTable(PlanCompFabricDetSave);
                //}
                //if (Colorid == 0 && Sizeid > 0) {
                //    for (var s = 0; s < ConItemListSave.length; s++) {
                //        if (ConItemListSave[s].CompSlNo == sno) {
                //            var sn = ConItemListSave[s].CPlanSlNo;
                //            var sz = ConItemListSave[s].SizeId;
                //            p = ConItemListSave[s].Prdn_Qty;
                //            rm = ConItemListSave[s].Grammage;
                //            ConItemListSave[s].Weight = (((p * rm) / 1000) * parts).toFixed(3);
                //            var tet = (((p * rm) / 1000) * parts).toFixed(3);

                //            for (var n = 0; n < PlanCompFabricDetSave.length; n++) {
                //                var snum = PlanCompFabricDetSave[n].snumb;
                //                if (PlanCompFabricDetSave[n].CompSlNo == sno && PlanCompFabricDetSave[n].SizeId == sz && PlanCompFabricDetSave[n].snumb == snum) {
                //                    var aw = tet / p;

                //                    PlanCompFabricDetSave[n].ActWeight = (aw * PlanCompFabricDetSave[n].Prdn_Qty).toFixed(3);
                //                    PlanCompFabricDetSave[n].Weight = (aw * PlanCompFabricDetSave[n].Prdn_Qty).toFixed(3);
                //                    PlanCompFabricDetSave[n].Grammage = ConItemListSave[s].Grammage;

                //                    $('input[id=txtPurQty]').each(function (ig) {
                //                        if (fabdata[ig].snumb == snum && fabdata[ig].CompSlNo == sno && fabdata[ig].SizeId == sz) {
                //                            var row = $(this).closest('tr');
                //                            row.find('#txtfabActwt').val((aw * PlanCompFabricDetSave[n].Prdn_Qty).toFixed(3));
                //                            row.find('#txtfabwt').val((aw * PlanCompFabricDetSave[n].Prdn_Qty).toFixed(3));
                //                            row.find('#txtfabgram').val(ConItemListSave[s].Grammage);
                //                        }
                //                    });
                //                }
                //            }
                //        }
                //    }

                //    loadconSaveTable(ConItemListSave);
                //    loadCompFabSaveTable(PlanCompFabricDetSave);
                //}
                //var ctry = [];
                //ctry = PlanCompFabricDetSave;
                //ctry = $.grep(ctry, function (e) {
                //    if (e.CompSlNo == sno) {
                //        return e;
                //    }
                //});
                //PlanCompFabricDet = ctry;
                //loadCompFabTable(PlanCompFabricDet);
            }

            if (fillvar == 'FW') {
                $.each(ConItemList, function () {
                    this.FinishWidthID = fid;
                    this.FinishWidth = fin;
                });
                $.each(ConItemListSave, function () {
                    if (this.CompSlNo == sno) {
                        this.FinishWidthID = fid;
                        this.FinishWidth = fin;
                    }
                });
                loadAdConTable(ConItemList);
                loadconSaveTable(ConItemListSave);
                //$.each(PlanCompFabricDet, function () {
                //    this.FinishWidthID = fid;
                //    this.FinishWidth = fin;
                //});
                //$.each(PlanCompFabricDetSave, function () {
                //    if (this.CompSlNo == sno) {
                //        this.FinishWidthID = fid;
                //        this.FinishWidth = fin;
                //    }
                //});
                //loadCompFabTable(PlanCompFabricDet);
                //loadCompFabSaveTable(PlanCompFabricDetSave);
                ConsmtnHideCol(type);
                return true;
            }
            if (fillvar == 'GYW') {
                $.each(ConItemList, function () {
                    this.GreyWidthID = gid;
                    this.GreyWidth = gry;
                });
                $.each(ConItemListSave, function () {
                    if (this.CompSlNo == sno) {
                        this.GreyWidthID = gid;
                        this.GreyWidth = gry;
                    }
                });
                loadAdConTable(ConItemList);
                //var table = $('#tCPIbody').DataTable();
                //var data = table.rows().data();

                //$('input[id=txtGram]').each(function (ig) {
                //    if (data[ig].CompSlNo == sno) {
                //        var row = $(this).closest('tr');
                //        row.find('#ddlGSize').text(gry);


                //    }
                //});
                loadconSaveTable(ConItemListSave);

                //$.each(PlanCompFabricDet, function () {
                //    this.GreyWidthID = gid;
                //    this.GreyWidth = gry;
                //});

                //$.each(PlanCompFabricDetSave, function () {
                //    if (this.CompSlNo == sno) {
                //        this.GreyWidthID = gid;
                //        this.GreyWidth = gry;
                //    }
                //});
                //loadCompFabTable(PlanCompFabricDet);
                //loadCompFabSaveTable(PlanCompFabricDetSave);
                ConsmtnHideCol(type);
                return true;
            }



        }
        if (protype == 'S') {
            if (fillvar == 'L' || fillvar == 'W' || fillvar == 'GS' || fillvar == 'AL' || fillvar == 'AW' || fillvar == 'P') {
                //Dia
                var dd = parseFloat(w) + parseFloat(allwid);
                dd = parseFloat(dd / 2.54).toFixed(0);
                var r = dd + "DIA";
                var fab = $.grep(Fabriclist, function (e) {

                    return e.Size == r;

                });
                var fid = 0;
                var fn = '';
                if (fab.length == 0 && dd != 0) {
                    DiaSize = r;
                    //SizeAdd(r);

                    $.when($.ajax(SizeAdd(r))).done(function getfabric() {

                        var fabres = $.grep(Fabriclist, function (e) {

                            return e.Size == DiaSize;

                        });
                        fid = fabres[0].SizeId;
                        fn = fabres[0].Size;

                    });
                }
                else {
                    if (dd == 0) {
                        fid = 0;
                        fn = '--Select--';
                    }
                    else {
                        var fabres = $.grep(Fabriclist, function (e) {

                            return e.Size == DiaSize;

                        });
                        fid = fabres[0].SizeId;
                        fn = fabres[0].Size;
                    }

                }
                $.each(ConItemList, function () {
                    if (this.Size == size) {

                        this.Length = l;
                        this.AlloLen = allen;
                        this.Width = w;
                        this.AllowWid = allwid;
                        this.GSM = g;
                        var totlen = parseFloat(l) + parseFloat(allen);
                        this.Pattern = pat;
                        if (pat == 0) {
                            res1 = 0;
                        }
                        else {
                            var totlen = parseFloat(l) + parseFloat(allen);
                            var totwid = parseFloat(w) + parseFloat(allwid);
                            var res1 = parseFloat(parseFloat(totlen * totwid) / pat);
                        }

                        res1 = res1.toFixed(3);
                        var res = (res1 * g) / 10000;

                        this.Grammage = res;

                        this.FinishWidthID = fid;
                        this.FinishWidth = fn;
                        this.GreyWidthID = fid;
                        this.GreyWidth = fn;


                    }
                });
                $.each(ConItemListSave, function () {
                    if (this.CompSlNo == sno && this.Size == size) {
                        this.Length = l;
                        this.AlloLen = allen;
                        this.Width = w;
                        this.AllowWid = allwid;
                        this.GSM = g;
                        this.Pattern = pat;
                        if (pat == 0) {
                            res1 = 0;
                        }
                        else {
                            var totlen = parseFloat(l) + parseFloat(allen);
                            var totwid = parseFloat(w) + parseFloat(allwid);
                            var res1 = parseFloat(parseFloat(totlen * totwid) / pat);
                        }

                        res1 = res1.toFixed(3);
                        var res = (res1 * g) / 10000;

                        this.Grammage = res;

                        this.FinishWidthID = fid;
                        this.FinishWidth = fn;
                        this.GreyWidthID = fid;
                        this.GreyWidth = fn;
                    }
                });
                //for (var s = 0; s < ConItemList.length; s++) {
                //    if (ConItemList[s].Size == size) {
                //        var sn = ConItemList[s].CPlanSlNo;
                //        p = ConItemList[s].Prdn_Qty;
                //        rm = ConItemList[s].Grammage;
                //        ConItemList[s].Weight = ((p * rm) / 1000) * parts;

                //        $('input[id=txtGram]').each(function (ig) {
                //            if (data[ig].CPlanSlNo == sn) {
                //                var row = $(this).closest('tr');
                //                row.find('#txtLen').val(l);
                //                row.find('#txtallowLen').val(allen);
                //                row.find('#txtWidth').val(w);
                //                row.find('#txtalloeWidth').val(allwid);
                //                row.find('#txtGsm').val(g);

                //                if (pat == 0) {
                //                    res1 = 0;
                //                }
                //                else {
                //                    var totlen = parseFloat(l) + parseFloat(allen);
                //                    var totwid = parseFloat(w) + parseFloat(allwid);
                //                    var res1 = parseFloat(parseFloat(totlen * totwid) / pat);
                //                }

                //                res1 = res1.toFixed(3);
                //                var res = (res1 * g) / 10000;
                //                row.find('#txtPattern').val(pat);
                //                row.find('#txtGram').val(res);
                //                row.find('#txtWght').val((((p * rm) / 1000) * parts).toFixed(3));

                //            }
                //        });
                //    }
                //}
                loadAdConTable(ConItemList);

                if (Colorid > 0 && Sizeid > 0) {
                    for (var s = 0; s < ConItemListSave.length; s++) {

                        if (ConItemListSave[s].Size == size && ConItemListSave[s].CompSlNo == sno) {
                            var sn = ConItemListSave[s].CPlanSlNo;
                            p = ConItemListSave[s].Prdn_Qty;
                            rm = ConItemListSave[s].Grammage;
                            ConItemListSave[s].Weight = (((p * rm) / 1000) * parts).toFixed(3);

                            for (var n = 0; n < PlanCompFabricDetSave.length; n++) {
                                if (PlanCompFabricDetSave[n].Size == size && PlanCompFabricDetSave[n].CompSlNo == sno) {
                                    PlanCompFabricDetSave[n].ActWeight = ConItemListSave[s].Weight;
                                    PlanCompFabricDetSave[n].Weight = ConItemListSave[s].Weight;
                                    PlanCompFabricDetSave[n].Grammage = ConItemListSave[s].Grammage;

                                    PlanCompFabricDetSave[n].FinishWidthID = fid;
                                    PlanCompFabricDetSave[n].FinishWidth = fn;
                                    PlanCompFabricDetSave[n].GreyWidthID = fid;
                                    PlanCompFabricDetSave[n].GreyWidth = fn;
                                    //s++;
                                    //continue;

                                    $('input[id=txtPurQty]').each(function (ig) {
                                        if (fabdata[ig].snumb == sn && fabdata[ig].CompSlNo == sno) {
                                            var row = $(this).closest('tr');
                                            row.find('#txtfabActwt').val(ConItemListSave[s].Weight);
                                            row.find('#txtfabwt').val(ConItemListSave[s].Weight);
                                            row.find('#txtfabgram').val(ConItemListSave[s].Grammage);
                                        }
                                    });
                                }
                                //else {

                                //    s++;
                                //}
                            }
                        }

                    }
                    loadconSaveTable(ConItemListSave);

                    loadCompFabSaveTable(PlanCompFabricDetSave);
                }
                var ctry = [];
                ctry = PlanCompFabricDetSave;
                ctry = $.grep(ctry, function (e) {
                    if (e.CompSlNo == sno && e.ColorID == FGarcolorid) {
                        return e;
                    }
                });
                PlanCompFabricDet = ctry;
                //loadCompFabTable(PlanCompFabricDet);
            }


            if (fillvar == 'GRM') {
                $.each(ConItemList, function () {
                    if (this.Size == size) {
                        this.Grammage = gram;
                    }
                });
                $.each(ConItemListSave, function () {
                    if (this.CompSlNo == sno && this.Size == size) {
                        this.Grammage = gram;
                    }
                });
                loadAdConTable(ConItemList);
                loadconSaveTable(ConItemListSave);

                for (var s = 0; s < ConItemList.length; s++) {
                    if (ConItemList[s].Size == size) {
                        var sn = ConItemList[s].CPlanSlNo;
                        p = ConItemList[s].Prdn_Qty;
                        rm = ConItemList[s].Grammage;
                        ConItemList[s].Weight = (((p * rm) / 1000) * parts).toFixed(3);
                        $('input[id=txtGram]').each(function (ig) {
                            if (data[ig].CPlanSlNo == sn) {
                                var row = $(this).closest('tr');
                                row.find('#txtLen').val(l);
                                row.find('#txtWidth').val(w);
                                row.find('#txtGsm').val(g);
                                row.find('#txtGram').val(gram);
                                row.find('#txtWght').val((((p * rm) / 1000) * parts).toFixed(3));

                            }
                        });
                    }
                }
                //loadAdConTable(ConItemList);

                if (Colorid > 0 && Sizeid > 0) {
                    for (var s = 0; s < ConItemListSave.length; s++) {
                        if (ConItemListSave[s].Size == size && ConItemListSave[s].CompSlNo == sno) {
                            var sn = ConItemListSave[s].CPlanSlNo;
                            var sn = ConItemListSave[s].CPlanSlNo;
                            var col = ConItemListSave[s].Color;
                            p = ConItemListSave[s].Prdn_Qty;
                            rm = ConItemListSave[s].Grammage;
                            ConItemListSave[s].Weight = (((p * rm) / 1000) * parts).toFixed(3);

                            for (var n = 0; n < PlanCompFabricDetSave.length; n++) {
                                var snb = PlanCompFabricDetSave[n].snumb;
                                if (PlanCompFabricDetSave[n].Size == size && PlanCompFabricDetSave[n].CompSlNo == sno && PlanCompFabricDetSave[n].Color == col) {
                                    PlanCompFabricDetSave[n].ActWeight = ConItemListSave[s].Weight;
                                    PlanCompFabricDetSave[n].Weight = ConItemListSave[s].Weight;
                                    PlanCompFabricDetSave[n].Grammage = ConItemListSave[s].Grammage;
                                    //continue;

                                    $('input[id=txtPurQty]').each(function (ig) {
                                        if (fabdata[ig].Size == size && fabdata[ig].CompSlNo == sno && fabdata[ig].Color == col) {
                                            var row = $(this).closest('tr');
                                            row.find('#txtfabActwt').val(ConItemListSave[s].Weight);
                                            row.find('#txtfabwt').val(ConItemListSave[s].Weight);
                                            row.find('#txtfabgram').val(ConItemListSave[s].Grammage);
                                        }
                                    });
                                    //continue;
                                }
                            }
                        }
                    }
                    loadconSaveTable(ConItemListSave);

                    loadCompFabSaveTable(PlanCompFabricDetSave);
                }
                var ctry = [];
                ctry = PlanCompFabricDetSave;
                ctry = $.grep(ctry, function (e) {
                    if (e.CompSlNo == sno && e.ColorID == FGarcolorid) {
                        return e;
                    }
                });
                PlanCompFabricDet = ctry;
                //loadCompFabTable(PlanCompFabricDet)

            }
            if (fillvar == 'FW') {
                $.each(ConItemList, function () {
                    if (this.Size == size) {
                        this.FinishWidthID = fid;
                        this.FinishWidth = fin;
                    }
                });
                $.each(ConItemListSave, function () {
                    if (this.CompSlNo == sno && this.Size == size) {
                        this.FinishWidthID = fid;
                        this.FinishWidth = fin;
                    }
                });
                loadAdConTable(ConItemList);
                loadconSaveTable(ConItemListSave);

                $.each(PlanCompFabricDet, function () {
                    if (this.Size == size) {
                        this.FinishWidthID = fid;
                        this.FinishWidth = fin;
                    }
                });
                $.each(PlanCompFabricDetSave, function () {
                    if (this.CompSlNo == sno && this.Size == size) {
                        this.FinishWidthID = fid;
                        this.FinishWidth = fin;
                    }
                });
                //loadCompFabTable(PlanCompFabricDet);
                //loadCompFabSaveTable(PlanCompFabricDetSave);
                ConsmtnHideCol(type);
                return true;
            }

            if (fillvar == 'GYW') {
                $.each(ConItemList, function () {
                    if (this.Size == size) {
                        this.GreyWidthID = gid;
                        this.GreyWidth = gry;
                    }
                });
                $.each(ConItemListSave, function () {
                    if (this.CompSlNo == sno && this.Size == size) {
                        this.GreyWidthID = gid;
                        this.GreyWidth = gry;
                    }
                });
                loadAdConTable(ConItemList);
                loadconSaveTable(ConItemListSave);

                $.each(PlanCompFabricDet, function () {
                    if (this.Size == size) {
                        this.GreyWidthID = gid;
                        this.GreyWidth = gry;
                    }
                });
                $.each(PlanCompFabricDetSave, function () {
                    if (this.CompSlNo == sno && this.Size == size) {
                        this.GreyWidthID = gid;
                        this.GreyWidth = gry;
                    }
                });
                //loadCompFabTable(PlanCompFabricDet);
                //loadCompFabSaveTable(PlanCompFabricDetSave);
                ConsmtnHideCol(type);
                return true;
            }


        }
        if (protype == 'C') {
            if (fillvar == 'L' || fillvar == 'W' || fillvar == 'GS' || fillvar == 'AL' || fillvar == 'AW') {

                //Dia
                var dd = parseFloat(w) + parseFloat(allwid);
                dd = parseFloat(dd / 2.54).toFixed(0);
                var r = dd + "DIA";
                var fab = $.grep(Fabriclist, function (e) {

                    return e.Size == r;

                });
                var fid = 0;
                var fn = '';
                if (fab.length == 0 && dd != 0) {
                    DiaSize = r;
                    //SizeAdd(r);

                    $.when($.ajax(SizeAdd(r))).done(function getfabric() {

                        var fabres = $.grep(Fabriclist, function (e) {

                            return e.Size == DiaSize;

                        });
                        fid = fabres[0].SizeId;
                        fn = fabres[0].Size;

                    });
                }
                else {
                    if (dd == 0) {
                        fid = 0;
                        fn = '--Select--';
                    }
                    else {
                        var fabres = $.grep(Fabriclist, function (e) {

                            return e.Size == DiaSize;

                        });
                        fid = fabres[0].SizeId;
                        fn = fabres[0].Size;
                    }

                }
                $.each(ConItemList, function () {
                    if (this.Color == color) {
                        this.Length = l;
                        this.AlloLen = allen;
                        this.Width = w;
                        this.AllowWid = allwid;
                        this.GSM = g;
                        this.Pattern = pat;
                        if (pat == 0) {
                            res1 = 0;
                        }
                        else {
                            var totlen = parseFloat(l) + parseFloat(allen);
                            var totwid = parseFloat(w) + parseFloat(allwid);
                            var res1 = parseFloat(parseFloat(totlen * totwid) / pat);
                        }

                        res1 = res1.toFixed(3);
                        var res = (res1 * g) / 10000;
                        this.Grammage = res;
                        this.FinishWidthID = fid;
                        this.FinishWidth = fn;
                        this.GreyWidthID = fid;
                        this.GreyWidth = fn;
                    }
                });
                $.each(ConItemListSave, function () {
                    if (this.CompSlNo == sno && this.Color == color) {
                        this.Length = l;
                        this.AlloLen = allen;
                        this.Width = w;
                        this.AllowWid = allwid;
                        this.GSM = g;
                        this.Pattern = pat;

                        if (pat == 0) {
                            res1 = 0;
                        }
                        else {
                            var totlen = parseFloat(l) + parseFloat(allen);
                            var totwid = parseFloat(w) + parseFloat(allwid);
                            var res1 = parseFloat(parseFloat(totlen * totwid) / pat);
                        }

                        res1 = res1.toFixed(3);
                        var res = (res1 * g) / 10000;
                        this.Grammage = res;
                        this.FinishWidthID = fid;
                        this.FinishWidth = fn;
                        this.GreyWidthID = fid;
                        this.GreyWidth = fn;
                    }
                });

                //for (var s = 0; s < ConItemList.length; s++) {
                //    if (ConItemList[s].Color == color) {
                //        var sn = ConItemList[s].CPlanSlNo;

                //        p = ConItemList[s].Prdn_Qty;
                //        rm = ConItemList[s].Grammage;
                //        ConItemList[s].Weight = (((p * rm) / 1000) * parts).toFixed(3);

                //        $('input[id=txtGram]').each(function (ig) {
                //            if (data[ig].CPlanSlNo == sn) {
                //                var row = $(this).closest('tr');
                //                row.find('#txtLen').val(l);
                //                row.find('#txtallowLen').val(allen);
                //                row.find('#txtWidth').val(w);
                //                row.find('#txtalloeWidth').val(allwid);
                //                row.find('#txtGsm').val(g);
                //                if (pat == 0) {
                //                    res1 = 0;
                //                }
                //                else {
                //                    var totlen = parseFloat(l) + parseFloat(allen);
                //                    var totwid = parseFloat(w) + parseFloat(allwid);
                //                    var res1 = parseFloat(parseFloat(totlen * totwid) / pat);
                //                }

                //                res1 = res1.toFixed(3);
                //                var res = (res1 * g) / 10000;
                //                row.find('#txtPattern').val(pat);
                //                row.find('#txtGram').val(res);
                //                row.find('#txtWght').val((((p * rm) / 1000) * parts).toFixed(3));

                //            }
                //        });
                //    }
                //}
                loadAdConTable(ConItemList);
                if (Colorid > 0 && Sizeid > 0) {
                    for (var s = 0; s < ConItemListSave.length; s++) {
                        if (ConItemListSave[s].Color == color && ConItemListSave[s].CompSlNo == sno) {

                            var sn = ConItemListSave[s].CPlanSlNo;
                            p = ConItemListSave[s].Prdn_Qty;
                            rm = ConItemListSave[s].Grammage;
                            ConItemListSave[s].Weight = (((p * rm) / 1000) * parts).toFixed(3);

                            for (var n = 0; n < PlanCompFabricDetSave.length; n++) {
                                if (PlanCompFabricDetSave[n].Color == color && PlanCompFabricDetSave[n].CompSlNo == sno && PlanCompFabricDetSave[n].snumb == sn) {
                                    PlanCompFabricDetSave[n].ActWeight = ConItemListSave[s].Weight;
                                    PlanCompFabricDetSave[n].Weight = ConItemListSave[s].Weight;
                                    PlanCompFabricDetSave[n].Grammage = ConItemListSave[s].Grammage;

                                    PlanCompFabricDetSave[n].FinishWidthID = fid;
                                    PlanCompFabricDetSave[n].FinishWidth = fn;
                                    PlanCompFabricDetSave[n].GreyWidthID = fid;
                                    PlanCompFabricDetSave[n].GreyWidth = fn;

                                    //continue;

                                    $('input[id=txtPurQty]').each(function (ig) {
                                        if (fabdata[ig].snumb == sn && fabdata[ig].CompSlNo == sno) {
                                            var row = $(this).closest('tr');
                                            row.find('#txtfabActwt').val(ConItemListSave[s].Weight);
                                            row.find('#txtfabwt').val(ConItemListSave[s].Weight);
                                            row.find('#txtfabgram').val(ConItemListSave[s].Grammage);
                                        }
                                    });
                                }
                            }
                        }
                    }
                    loadconSaveTable(ConItemListSave);
                    loadCompFabSaveTable(PlanCompFabricDetSave);
                }
                var ctry = [];
                ctry = PlanCompFabricDetSave;
                ctry = $.grep(ctry, function (e) {
                    if (e.CompSlNo == sno && e.ColorID == FGarcolorid) {
                        return e;
                    }
                });
                PlanCompFabricDet = ctry;
                //loadCompFabTable(PlanCompFabricDet)
            }


            if (fillvar == 'GRM') {
                $.each(ConItemList, function () {
                    if (this.Color == color) {
                        this.Grammage = gram;
                    }
                });
                $.each(ConItemListSave, function () {
                    if (this.CompSlNo == sno && this.Color == color) {
                        this.Grammage = gram;
                    }
                });
                //loadAdConTable(ConItemList);
                loadconSaveTable(ConItemListSave);

                for (var s = 0; s < ConItemList.length; s++) {
                    if (ConItemList[s].Color == color) {
                        var sn = ConItemList[s].CPlanSlNo;
                        p = ConItemList[s].Prdn_Qty;
                        rm = ConItemList[s].Grammage;
                        ConItemList[s].Weight = (((p * rm) / 1000) * parts).toFixed(3);

                        $('input[id=txtGram]').each(function (ig) {
                            if (data[ig].CPlanSlNo == sn) {
                                var row = $(this).closest('tr');

                                row.find('#txtGram').val(gram);
                                row.find('#txtWght').val((((p * rm) / 1000) * parts).toFixed(3));

                            }
                        });

                    }
                }
                //loadAdConTable(ConItemList);
                if (Colorid > 0 && Sizeid > 0) {
                    for (var s = 0; s < ConItemListSave.length; s++) {
                        if (ConItemListSave[s].Color == color && ConItemListSave[s].CompSlNo == sno) {
                            var sn = ConItemListSave[s].CPlanSlNo;
                            var Sz = ConItemListSave[s].Size;
                            p = ConItemListSave[s].Prdn_Qty;
                            rm = ConItemListSave[s].Grammage;
                            ConItemListSave[s].Weight = (((p * rm) / 1000) * parts).toFixed(3);

                            for (var n = 0; n < PlanCompFabricDetSave.length; n++) {
                                if (PlanCompFabricDetSave[n].Color == color && PlanCompFabricDetSave[n].CompSlNo == sno && PlanCompFabricDetSave[n].Size == Sz) {
                                    PlanCompFabricDetSave[n].ActWeight = ConItemListSave[s].Weight;
                                    PlanCompFabricDetSave[n].Weight = ConItemListSave[s].Weight;
                                    PlanCompFabricDetSave[n].Grammage = ConItemListSave[s].Grammage;
                                    //continue;

                                    $('input[id=txtPurQty]').each(function (ig) {
                                        if (fabdata[ig].Color == color && fabdata[ig].CompSlNo == sno && fabdata[ig].Size == Sz) {
                                            var row = $(this).closest('tr');
                                            row.find('#txtfabActwt').val(ConItemListSave[s].Weight);
                                            row.find('#txtfabwt').val(ConItemListSave[s].Weight);
                                            row.find('#txtfabgram').val(ConItemListSave[s].Grammage);
                                        }
                                    });
                                }

                            }
                        }
                    }
                    loadconSaveTable(ConItemListSave);
                    loadCompFabSaveTable(PlanCompFabricDetSave);
                }
                var ctry = [];
                ctry = PlanCompFabricDetSave;
                ctry = $.grep(ctry, function (e) {
                    if (e.CompSlNo == sno && e.ColorID == FGarcolorid) {
                        return e;
                    }
                });
                PlanCompFabricDet = ctry;
                //loadCompFabTable(PlanCompFabricDet)

            }

            if (fillvar == 'FW') {
                $.each(ConItemList, function () {
                    if (this.Color == color) {
                        this.FinishWidthID = fid;
                        this.FinishWidth = fin;
                    }
                });
                $.each(ConItemListSave, function () {
                    if (this.CompSlNo == sno && this.Color == color) {
                        this.FinishWidthID = fid;
                        this.FinishWidth = fin;
                    }
                });
                loadAdConTable(ConItemList);
                loadconSaveTable(ConItemListSave);


                $.each(PlanCompFabricDet, function () {
                    if (this.Color == color) {
                        this.FinishWidthID = fid;
                        this.FinishWidth = fin;
                    }
                });
                $.each(PlanCompFabricDetSave, function () {
                    if (this.CompSlNo == sno && this.Color == color) {
                        this.FinishWidthID = fid;
                        this.FinishWidth = fin;
                    }
                });
                //loadCompFabTable(PlanCompFabricDet);
                //loadCompFabSaveTable(PlanCompFabricDetSave);
                ConsmtnHideCol(type);
                return true;
            }

            if (fillvar == 'GYW') {
                $.each(ConItemList, function () {
                    if (this.Color == color) {
                        this.GreyWidthID = gid;
                        this.GreyWidth = gry;
                    }
                });
                $.each(ConItemListSave, function () {
                    if (this.CompSlNo == sno && this.Color == color) {
                        this.GreyWidthID = gid;
                        this.GreyWidth = gry;
                    }
                });
                loadAdConTable(ConItemList);
                loadconSaveTable(ConItemListSave);

                $.each(PlanCompFabricDet, function () {
                    if (this.Color == color) {
                        this.GreyWidthID = gid;
                        this.GreyWidth = gry;
                    }
                });
                $.each(PlanCompFabricDetSave, function () {
                    if (this.CompSlNo == sno && this.Color == color) {
                        this.GreyWidthID = gid;
                        this.GreyWidth = gry;
                    }
                });
                //loadCompFabTable(PlanCompFabricDet);
                //loadCompFabSaveTable(PlanCompFabricDetSave);
                ConsmtnHideCol(type);
                return true;
            }
        }
    }
    else if (type == 'WOVEN') {
        var protype = $('input[name="ALType"]:checked').attr('value');
        if (protype == 'A') {
            if (fillvar == 'REQMNT') {
                var modtype = $('input[name="Opttype"]:checked').attr('value');
                var conval = 0;
                if (modtype == 'C') {
                    conval = 1;
                }
                else {
                    conval = 2.54;
                }


                $.each(ConItemList, function () {
                    var res = (req * conval) / 100;
                    var totmet = res * this.Prdn_Qty * parts;
                    totmet = totmet.toFixed(3);

                    this.Requirement = req;
                    this.TotMetres = totmet;
                    this.Weight = parseFloat((totmet * this.WtMetre) / 1000).toFixed(3);

                });
                $.each(ConItemListSave, function () {
                    if (this.CompSlNo == sno) {
                        var res = (req * conval) / 100;
                        var totmet = res * this.Prdn_Qty * parts;
                        totmet = totmet.toFixed(3);

                        this.Requirement = req;
                        this.TotMetres = totmet;
                        this.Weight = parseFloat((totmet * this.WtMetre) / 1000).toFixed(3);
                    }
                });

                for (var s = 0; s < ConItemList.length; s++) {

                    var sn = ConItemList[s].CPlanSlNo;
                    p = ConItemList[s].Requirement;
                    var res = (p * conval) / 100;
                    var totmet = res * ConItemList[s].Prdn_Qty * parts;
                    totmet = totmet.toFixed(3);
                    //ConItemList[s].TotMetres = totmet;
                    //ConItemList[s].Requirement = req;
                    var wgh = parseFloat((totmet * ConItemList[s].WtMetre) / 1000).toFixed(3);
                    $('input[id=txtReqmnt]').each(function (ig) {
                        if (data[ig].CPlanSlNo == sn) {
                            var row = $(this).closest('tr');
                            row.find('#txtTotMetWov').val(totmet);
                            row.find('#txtReqmnt').val(p);
                            row.find('#txtWght').val(wgh);
                        }
                    });
                }

                loadconSaveTable(ConItemListSave);
                ////
                if (Colorid > 0 && Sizeid > 0) {
                    for (var s = 0; s < ConItemListSave.length; s++) {
                        if (ConItemListSave[s].CompSlNo == sno) {
                            var sn = ConItemListSave[s].CPlanSlNo;
                            p = ConItemListSave[s].Requirement;
                            var res = (p * conval) / 100;
                            var totmet = res * ConItemListSave[s].Prdn_Qty * parts;
                            totmet = totmet.toFixed(3);
                            ConItemListSave[s].Weight = parseFloat((totmet * ConItemListSave[s].WtMetre) / 1000).toFixed(3);
                            for (var n = 0; n < PlanCompFabricDetSave.length; n++) {
                                if (PlanCompFabricDetSave[n].CompSlNo == sno && PlanCompFabricDetSave[n].snumb == sn) {
                                    PlanCompFabricDetSave[n].ActWeight = ConItemListSave[s].TotMetres;
                                    PlanCompFabricDetSave[n].Weight = ConItemListSave[s].TotMetres;
                                    PlanCompFabricDetSave[n].Woven_Req_InMtrs = ConItemListSave[s].Weight;
                                    PlanCompFabricDetSave[n].Grammage = wtmet;
                                    //continue;

                                    $('input[id=txtPurQty]').each(function (ig) {
                                        if (fabdata[ig].CompSlNo == sno && fabdata[ig].snumb == sn) {
                                            var row = $(this).closest('tr');
                                            row.find('#txtfabActwt').val(ConItemListSave[s].TotMetres);
                                            row.find('#txtfabwt').val(ConItemListSave[s].TotMetres);
                                            //row.find('#txtfabgram').val(ConItemListSave[s].TotPieces);
                                        }
                                    });
                                }

                            }
                        }
                    }
                    loadconSaveTable(ConItemListSave);
                    loadCompFabSaveTable(PlanCompFabricDetSave);

                }
                if (Colorid > 0 && Sizeid == 0) {
                    for (var s = 0; s < ConItemListSave.length; s++) {
                        if (ConItemListSave[s].CompSlNo == sno) {
                            var sn = ConItemListSave[s].CPlanSlNo;
                            var cl = ConItemListSave[s].ColorID;
                            p = ConItemListSave[s].Requirement;
                            var res = (p * conval) / 100;
                            var totmet = res * ConItemListSave[s].Prdn_Qty * parts;
                            totmet = totmet.toFixed(3);
                            ConItemListSave[s].Weight = parseFloat((totmet * ConItemListSave[s].WtMetre) / 1000).toFixed(3);
                            for (var n = 0; n < PlanCompFabricDetSave.length; n++) {
                                var snum = PlanCompFabricDetSave[n].snumb;
                                if (PlanCompFabricDetSave[n].CompSlNo == sno && PlanCompFabricDetSave[n].snumb == snum && PlanCompFabricDetSave[n].ColorID == cl) {
                                    PlanCompFabricDetSave[n].ActWeight = (PlanCompFabricDetSave[n].Prdn_Qty * parts * p) / 100;
                                    PlanCompFabricDetSave[n].Weight = (PlanCompFabricDetSave[n].Prdn_Qty * parts * p) / 100;
                                    PlanCompFabricDetSave[n].Grammage = wtmet;
                                    var pq = PlanCompFabricDetSave[n].Prdn_Qty;
                                    var gr = PlanCompFabricDetSave[n].Grammage;
                                    PlanCompFabricDetSave[n].Woven_Req_InMtrs = (((pq * gr) / 1000)).toFixed(3);

                                    //continue;

                                    $('input[id=txtPurQty]').each(function (ig) {
                                        if (fabdata[ig].CompSlNo == sno && fabdata[ig].snumb == snum && fabdata[ig].ColorID == cl) {
                                            var row = $(this).closest('tr');
                                            var tt = row.find('#txtfabPrdQty').val();
                                            var res = (tt * parts * p) / 100;
                                            row.find('#txtfabActwt').val(res);
                                            row.find('#txtfabwt').val(res);
                                            //row.find('#txtfabgram').val(ConItemListSave[s].TotPieces);
                                        }
                                    });
                                }

                            }
                        }
                    }
                    loadconSaveTable(ConItemListSave);
                    loadCompFabSaveTable(PlanCompFabricDetSave);

                }

                if (Colorid == 0 && Sizeid > 0) {
                    for (var s = 0; s < ConItemListSave.length; s++) {
                        if (ConItemListSave[s].CompSlNo == sno) {
                            var sn = ConItemListSave[s].CPlanSlNo;
                            var sz = ConItemListSave[s].SizeId;
                            p = ConItemListSave[s].Requirement;
                            var res = (p * conval) / 100;
                            var totmet = res * ConItemListSave[s].Prdn_Qty * parts;
                            totmet = totmet.toFixed(3);
                            ConItemListSave[s].Weight = parseFloat((totmet * ConItemListSave[s].WtMetre) / 1000).toFixed(3);
                            for (var n = 0; n < PlanCompFabricDetSave.length; n++) {
                                var snum = PlanCompFabricDetSave[n].snumb;
                                if (PlanCompFabricDetSave[n].CompSlNo == sno && PlanCompFabricDetSave[n].snumb == snum && PlanCompFabricDetSave[n].SizeId == sz) {
                                    PlanCompFabricDetSave[n].ActWeight = (PlanCompFabricDetSave[n].Prdn_Qty * parts * p) / 100;
                                    PlanCompFabricDetSave[n].Weight = (PlanCompFabricDetSave[n].Prdn_Qty * parts * p) / 100;
                                    PlanCompFabricDetSave[n].Grammage = wtmet;
                                    var pq = PlanCompFabricDetSave[n].Prdn_Qty;
                                    var gr = PlanCompFabricDetSave[n].Grammage;
                                    PlanCompFabricDetSave[n].Woven_Req_InMtrs = (((pq * gr) / 1000)).toFixed(3);

                                    //continue;

                                    $('input[id=txtPurQty]').each(function (ig) {
                                        if (fabdata[ig].CompSlNo == sno && fabdata[ig].snumb == snum && fabdata[ig].SizeId == sz) {
                                            var row = $(this).closest('tr');
                                            var tt = row.find('#txtfabPrdQty').val();
                                            var res = (tt * parts * p) / 100;
                                            row.find('#txtfabActwt').val(res);
                                            row.find('#txtfabwt').val(res);
                                            //row.find('#txtfabgram').val(ConItemListSave[s].TotPieces);
                                        }
                                    });
                                }

                            }
                        }
                    }
                    loadconSaveTable(ConItemListSave);
                    loadCompFabSaveTable(PlanCompFabricDetSave);

                }

            }
            if (fillvar == 'WOVMET') {

                $.each(ConItemList, function () {

                    this.WtMetre = wtmet;
                    this.Weight = parseFloat((wtmet * this.TotMetres) / 1000).toFixed(3);

                });
                $.each(ConItemListSave, function () {
                    if (this.CompSlNo == sno) {
                        this.WtMetre = wtmet;
                        this.Weight = parseFloat((wtmet * this.TotMetres) / 1000).toFixed(3);

                    }
                });

                for (var s = 0; s < ConItemList.length; s++) {

                    var sn = ConItemList[s].CPlanSlNo;
                    p = ConItemList[s].WtMetre;
                    var res = (p * ConItemList[s].TotMetres) / 1000;

                    res = res.toFixed(3);
                    //ConItemList[s].TotMetres = totmet;
                    //ConItemList[s].Requirement = req;
                    $('input[id=txtWght]').each(function (ig) {
                        if (data[ig].CPlanSlNo == sn) {
                            var row = $(this).closest('tr');
                            row.find('#txtWtmtWov').val(wtmet);
                            row.find('#txtWght').val(res);

                        }
                    });
                }

                loadconSaveTable(ConItemListSave);
                //
                if (Colorid > 0 && Sizeid > 0) {
                    for (var s = 0; s < ConItemListSave.length; s++) {
                        if (ConItemListSave[s].CompSlNo == sno) {
                            var sn = ConItemListSave[s].CPlanSlNo;
                            p = ConItemListSave[s].WtMetre;
                            var tm = ConItemListSave[s].TotMetres;
                            var res = (p * ConItemListSave[s].TotMetres) / 1000;

                            res = res.toFixed(3);
                            for (var n = 0; n < PlanCompFabricDetSave.length; n++) {
                                if (PlanCompFabricDetSave[n].CompSlNo == sno && PlanCompFabricDetSave[n].snumb == sn) {
                                    PlanCompFabricDetSave[n].Woven_Req_InMtrs = ConItemListSave[s].Weight;
                                    PlanCompFabricDetSave[n].Grammage = wtmet;
                                    PlanCompFabricDetSave[n].ActWeight = tm;
                                    PlanCompFabricDetSave[n].Weight = tm;
                                }
                            }

                            $('input[id=txtPurQty]').each(function (ig) {
                                if (fabdata[ig].CompSlNo == sno && fabdata[ig].snumb == sn) {
                                    var row = $(this).closest('tr');
                                    row.find('#txtfabActwt').val(ConItemListSave[s].TotMetres);
                                    row.find('#txtfabwt').val(ConItemListSave[s].TotMetres);
                                    //row.find('#txtfabgram').val(ConItemListSave[s].TotPieces);
                                }
                            });
                        }
                    }


                    loadconSaveTable(ConItemListSave);
                    loadCompFabSaveTable(PlanCompFabricDetSave);

                }
                if (Colorid > 0 && Sizeid == 0) {
                    for (var s = 0; s < ConItemListSave.length; s++) {
                        if (ConItemListSave[s].CompSlNo == sno) {
                            var sn = ConItemListSave[s].CPlanSlNo;
                            p = ConItemListSave[s].WtMetre;
                            var rq = ConItemListSave[s].Requirement;
                            var tm = ConItemListSave[s].TotMetres;
                            var cl = ConItemListSave[s].ColorID;
                            var res = (p * ConItemListSave[s].TotMetres) / 1000;

                            res = res.toFixed(3);
                            for (var n = 0; n < PlanCompFabricDetSave.length; n++) {
                                var snum = PlanCompFabricDetSave[n].snumb;
                                if (PlanCompFabricDetSave[n].CompSlNo == sno && PlanCompFabricDetSave[n].snumb == snum && PlanCompFabricDetSave[n].ColorID == cl) {

                                    PlanCompFabricDetSave[n].Grammage = wtmet;
                                    PlanCompFabricDetSave[n].ActWeight = (PlanCompFabricDetSave[n].Prdn_Qty * parts * rq) / 100;
                                    PlanCompFabricDetSave[n].Weight = (PlanCompFabricDetSave[n].Prdn_Qty * parts * rq) / 100;
                                    var pq = PlanCompFabricDetSave[n].Weight;
                                    var gr = PlanCompFabricDetSave[n].Grammage;
                                    PlanCompFabricDetSave[n].Woven_Req_InMtrs = (((pq * gr) / 1000)).toFixed(3);
                                }
                            }

                            $('input[id=txtPurQty]').each(function (ig) {
                                if (fabdata[ig].CompSlNo == sno && fabdata[ig].snumb == snum && fabdata[ig].ColorID == cl) {
                                    var row = $(this).closest('tr');
                                    var tt = row.find('#txtfabPrdQty').val();
                                    var res = (tt * parts * rq) / 100;
                                    row.find('#txtfabActwt').val(res);
                                    row.find('#txtfabwt').val(res);
                                    //row.find('#txtfabgram').val(ConItemListSave[s].TotPieces);
                                }
                            });
                        }
                    }


                    loadconSaveTable(ConItemListSave);
                    loadCompFabSaveTable(PlanCompFabricDetSave);

                }

                if (Colorid == 0 && Sizeid > 0) {
                    for (var s = 0; s < ConItemListSave.length; s++) {
                        if (ConItemListSave[s].CompSlNo == sno) {
                            var sn = ConItemListSave[s].CPlanSlNo;
                            p = ConItemListSave[s].WtMetre;
                            var rq = ConItemListSave[s].Requirement;
                            var tm = ConItemListSave[s].TotMetres;
                            var sz = ConItemListSave[s].SizeId;
                            var res = (p * ConItemListSave[s].TotMetres) / 1000;

                            res = res.toFixed(3);
                            for (var n = 0; n < PlanCompFabricDetSave.length; n++) {
                                var snum = PlanCompFabricDetSave[n].snumb;
                                if (PlanCompFabricDetSave[n].CompSlNo == sno && PlanCompFabricDetSave[n].snumb == snum && PlanCompFabricDetSave[n].SizeId == sz) {

                                    PlanCompFabricDetSave[n].Grammage = wtmet;
                                    PlanCompFabricDetSave[n].ActWeight = (PlanCompFabricDetSave[n].Prdn_Qty * parts * rq) / 100;
                                    PlanCompFabricDetSave[n].Weight = (PlanCompFabricDetSave[n].Prdn_Qty * parts * rq) / 100;
                                    var pq = PlanCompFabricDetSave[n].Weight;
                                    var gr = PlanCompFabricDetSave[n].Grammage;
                                    PlanCompFabricDetSave[n].Woven_Req_InMtrs = (((pq * gr) / 1000)).toFixed(3);
                                }
                            }

                            $('input[id=txtPurQty]').each(function (ig) {
                                if (fabdata[ig].CompSlNo == sno && fabdata[ig].snumb == snum && fabdata[ig].SizeId == sz) {
                                    var row = $(this).closest('tr');
                                    var tt = row.find('#txtfabPrdQty').val();
                                    var res = (tt * parts * rq) / 100;
                                    row.find('#txtfabActwt').val(res);
                                    row.find('#txtfabwt').val(res);
                                    //row.find('#txtfabgram').val(ConItemListSave[s].TotPieces);
                                }
                            });
                        }
                    }


                    loadconSaveTable(ConItemListSave);
                    loadCompFabSaveTable(PlanCompFabricDetSave);

                }
            }

            if (fillvar == 'FW') {
                $.each(ConItemList, function () {
                    this.FinishWidthID = fid;
                    this.FinishWidth = fin;
                });
                $.each(ConItemListSave, function () {
                    if (this.CompSlNo == sno) {
                        this.FinishWidthID = fid;
                        this.FinishWidth = fin;
                    }
                });
                loadAdConTable(ConItemList);
                loadconSaveTable(ConItemListSave);

                $.each(PlanCompFabricDet, function () {
                    this.FinishWidthID = fid;
                    this.FinishWidth = fin;
                });
                $.each(PlanCompFabricDetSave, function () {
                    if (this.CompSlNo == sno) {
                        this.FinishWidthID = fid;
                        this.FinishWidth = fin;
                    }
                });
                //loadCompFabTable(PlanCompFabricDet);
                //loadCompFabSaveTable(PlanCompFabricDetSave);
                ConsmtnHideCol(type);
                return true;
            }
            if (fillvar == 'GYW') {
                $.each(ConItemList, function () {
                    this.GreyWidthID = gid;
                    this.GreyWidth = gry;
                });
                $.each(ConItemListSave, function () {
                    if (this.CompSlNo == sno) {
                        this.GreyWidthID = gid;
                        this.GreyWidth = gry;
                    }
                });
                loadAdConTable(ConItemList);
                loadconSaveTable(ConItemListSave);

                $.each(PlanCompFabricDet, function () {
                    this.GreyWidthID = gid;
                    this.GreyWidth = gry;
                });
                $.each(PlanCompFabricDetSave, function () {
                    if (this.CompSlNo == sno) {
                        this.GreyWidthID = gid;
                        this.GreyWidth = gry;
                    }
                });
                //loadCompFabTable(PlanCompFabricDet);
                //loadCompFabSaveTable(PlanCompFabricDetSave);
                ConsmtnHideCol(type);
                return true;
            }
        }
        if (protype == 'S') {
            if (fillvar == 'REQMNT') {
                var modtype = $('input[name="Opttype"]:checked').attr('value');
                var conval = 0;
                if (modtype == 'C') {
                    conval = 1;
                }
                else {
                    conval = 2.54;
                }


                $.each(ConItemList, function () {
                    var res = (req * conval) / 100;
                    var totmet = res * this.Prdn_Qty * parts;
                    totmet = totmet.toFixed(3);

                    this.Requirement = req;
                    this.TotMetres = totmet;
                    this.Weight = parseFloat((totmet * this.WtMetre) / 1000).toFixed(3);

                });
                $.each(ConItemListSave, function () {
                    if (this.CompSlNo == sno && this.Size == size) {
                        var res = (req * conval) / 100;
                        var totmet = res * this.Prdn_Qty * parts;
                        totmet = totmet.toFixed(3);

                        this.Requirement = req;
                        this.TotMetres = totmet;
                        this.Weight = parseFloat((totmet * this.WtMetre) / 1000).toFixed(3);

                    }
                });

                for (var s = 0; s < ConItemList.length; s++) {
                    if (ConItemList[s].CompSlNo == sno && ConItemList[s].Size == size) {
                        var sn = ConItemList[s].CPlanSlNo;
                        p = ConItemList[s].Requirement;
                        var res = (p * conval) / 100;
                        var totmet = res * ConItemList[s].Prdn_Qty * parts;
                        totmet = totmet.toFixed(3);
                        //ConItemList[s].TotMetres = totmet;
                        //ConItemList[s].Requirement = req;
                        var wgh = parseFloat((totmet * ConItemList[s].WtMetre) / 1000).toFixed(3);
                        $('input[id=txtReqmnt]').each(function (ig) {
                            if (data[ig].CPlanSlNo == sn && data[ig].Size == size) {
                                var row = $(this).closest('tr');
                                row.find('#txtTotMetWov').val(totmet);
                                row.find('#txtReqmnt').val(p);
                                row.find('#txtWght').val(wgh);
                            }
                        });
                    }
                }

                loadconSaveTable(ConItemListSave);
                ////
                if (Colorid > 0 && Sizeid > 0) {
                    for (var s = 0; s < ConItemListSave.length; s++) {
                        if (ConItemListSave[s].CompSlNo == sno && ConItemList[s].Size == size) {
                            var sn = ConItemListSave[s].CPlanSlNo;
                            p = ConItemListSave[s].Requirement;
                            var res = (p * conval) / 100;
                            var totmet = res * ConItemListSave[s].Prdn_Qty * parts;
                            totmet = totmet.toFixed(3);
                            ConItemListSave[s].Weight = parseFloat((totmet * ConItemListSave[s].WtMetre) / 1000).toFixed(3);
                            for (var n = 0; n < PlanCompFabricDetSave.length; n++) {
                                if (PlanCompFabricDetSave[n].CompSlNo == sno && PlanCompFabricDetSave[n].snumb == sn && PlanCompFabricDetSave[n].Size == size) {
                                    PlanCompFabricDetSave[n].ActWeight = ConItemListSave[s].TotMetres;
                                    PlanCompFabricDetSave[n].Weight = ConItemListSave[s].TotMetres;
                                    PlanCompFabricDetSave[n].Woven_Req_InMtrs = ConItemListSave[s].Weight;
                                    PlanCompFabricDetSave[n].Grammage = wtmet;
                                    //continue;

                                    $('input[id=txtPurQty]').each(function (ig) {
                                        if (fabdata[ig].CompSlNo == sno && fabdata[ig].snumb == sn && fabdata[ig].Size == size) {
                                            var row = $(this).closest('tr');
                                            row.find('#txtfabActwt').val(ConItemListSave[s].TotMetres);
                                            row.find('#txtfabwt').val(ConItemListSave[s].TotMetres);
                                            //row.find('#txtfabgram').val(ConItemListSave[s].TotPieces);
                                        }
                                    });
                                }

                            }
                        }
                    }
                    loadconSaveTable(ConItemListSave);
                    loadCompFabSaveTable(PlanCompFabricDetSave);

                }
            }
            if (fillvar == 'WOVMET') {
                $.each(ConItemList, function () {
                    if (this.CompSlNo == sno && this.Size == size) {
                        this.WtMetre = wtmet;
                        this.Weight = parseFloat((wtmet * this.TotMetres) / 1000).toFixed(3);
                    }

                });
                $.each(ConItemListSave, function () {
                    if (this.CompSlNo == sno && this.Size == size) {
                        this.WtMetre = wtmet;
                        this.Weight = parseFloat((wtmet * this.TotMetres) / 1000).toFixed(3);

                    }
                });

                for (var s = 0; s < ConItemList.length; s++) {
                    if (ConItemList[s].CompSlNo == sno && ConItemList[s].Size == size) {
                        var sn = ConItemList[s].CPlanSlNo;
                        p = ConItemList[s].WtMetre;
                        var res = (p * ConItemList[s].TotMetres) / 1000;

                        res = res.toFixed(3);
                        //ConItemList[s].TotMetres = totmet;
                        //ConItemList[s].Requirement = req;
                        $('input[id=txtWght]').each(function (ig) {
                            if (data[ig].CPlanSlNo == sn && data[ig].Size == size) {
                                var row = $(this).closest('tr');
                                row.find('#txtWtmtWov').val(wtmet);
                                row.find('#txtWght').val(res);

                            }
                        });
                    }
                }

                loadconSaveTable(ConItemListSave);
                //
                if (Colorid > 0 && Sizeid > 0) {
                    for (var s = 0; s < ConItemListSave.length; s++) {
                        if (ConItemListSave[s].CompSlNo == sno && ConItemList[s].Size == size) {
                            var sn = ConItemListSave[s].CPlanSlNo;
                            p = ConItemListSave[s].WtMetre;
                            var res = (p * ConItemListSave[s].TotMetres) / 1000;

                            res = res.toFixed(3);
                            for (var n = 0; n < PlanCompFabricDetSave.length; n++) {
                                if (PlanCompFabricDetSave[n].CompSlNo == sno && PlanCompFabricDetSave[n].snumb == sn && PlanCompFabricDetSave[n].Size == size) {
                                    PlanCompFabricDetSave[n].Woven_Req_InMtrs = ConItemListSave[s].Weight;
                                    PlanCompFabricDetSave[n].Grammage = wtmet;
                                }
                            }
                        }
                    }
                    loadconSaveTable(ConItemListSave);
                    loadCompFabSaveTable(PlanCompFabricDetSave);

                }
            }
            if (fillvar == 'FW') {
                $.each(ConItemList, function () {
                    if (this.Size == size) {
                        this.FinishWidthID = fid;
                        this.FinishWidth = fin;
                    }
                });
                $.each(ConItemListSave, function () {
                    if (this.CompSlNo == sno && this.Size == size) {
                        this.FinishWidthID = fid;
                        this.FinishWidth = fin;
                    }
                });
                loadAdConTable(ConItemList);
                loadconSaveTable(ConItemListSave);

                $.each(PlanCompFabricDet, function () {
                    if (this.Size == size) {
                        this.FinishWidthID = fid;
                        this.FinishWidth = fin;
                    }
                });
                $.each(PlanCompFabricDetSave, function () {
                    if (this.CompSlNo == sno && this.Size == size) {
                        this.FinishWidthID = fid;
                        this.FinishWidth = fin;
                    }
                });
                //loadCompFabTable(PlanCompFabricDet);
                ConsmtnHideCol(type);
                return true;
                //loadCompFabSaveTable(PlanCompFabricDetSave);
            }

            if (fillvar == 'GYW') {
                $.each(ConItemList, function () {
                    if (this.Size == size) {
                        this.GreyWidthID = gid;
                        this.GreyWidth = gry;
                    }
                });
                $.each(ConItemListSave, function () {
                    if (this.CompSlNo == sno && this.Size == size) {
                        this.GreyWidthID = gid;
                        this.GreyWidth = gry;
                    }
                });
                loadAdConTable(ConItemList);
                loadconSaveTable(ConItemListSave);

                $.each(PlanCompFabricDet, function () {
                    if (this.Size == size) {
                        this.GreyWidthID = gid;
                        this.GreyWidth = gry;
                    }
                });
                $.each(PlanCompFabricDetSave, function () {
                    if (this.CompSlNo == sno && this.Size == size) {
                        this.GreyWidthID = gid;
                        this.GreyWidth = gry;
                    }
                });
                //loadCompFabTable(PlanCompFabricDet);
                //loadCompFabSaveTable(PlanCompFabricDetSave);
                ConsmtnHideCol(type);
                return true;
            }
        }
        if (protype == 'C') {
            if (fillvar == 'REQMNT') {
                var modtype = $('input[name="Opttype"]:checked').attr('value');
                var conval = 0;
                if (modtype == 'C') {
                    conval = 1;
                }
                else {
                    conval = 2.54;
                }


                $.each(ConItemList, function () {
                    var res = (req * conval) / 100;
                    var totmet = res * this.Prdn_Qty * parts;
                    totmet = totmet.toFixed(3);

                    this.Requirement = req;
                    this.TotMetres = totmet;
                    this.Weight = parseFloat((totmet * this.WtMetre) / 1000).toFixed(3);

                });
                $.each(ConItemListSave, function () {
                    if (this.CompSlNo == sno && this.Color == color) {
                        var res = (req * conval) / 100;
                        var totmet = res * this.Prdn_Qty * parts;
                        totmet = totmet.toFixed(3);

                        this.Requirement = req;
                        this.TotMetres = totmet;
                        this.Weight = parseFloat((totmet * this.WtMetre) / 1000).toFixed(3);

                    }
                });

                for (var s = 0; s < ConItemList.length; s++) {
                    if (ConItemList[s].CompSlNo == sno && ConItemList[s].Color == color) {
                        var sn = ConItemList[s].CPlanSlNo;
                        p = ConItemList[s].Requirement;
                        var res = (p * conval) / 100;
                        var totmet = res * ConItemList[s].Prdn_Qty * parts;
                        totmet = totmet.toFixed(3);
                        //ConItemList[s].TotMetres = totmet;
                        //ConItemList[s].Requirement = req;
                        var wgh = parseFloat((totmet * ConItemList[s].WtMetre) / 1000).toFixed(3);
                        $('input[id=txtReqmnt]').each(function (ig) {
                            if (data[ig].CPlanSlNo == sn && data[ig].Color == color) {
                                var row = $(this).closest('tr');
                                row.find('#txtTotMetWov').val(totmet);
                                row.find('#txtReqmnt').val(p);
                                row.find('#txtWght').val(wgh);
                            }
                        });
                    }
                }

                loadconSaveTable(ConItemListSave);
                ////
                if (Colorid > 0 && Sizeid > 0) {
                    for (var s = 0; s < ConItemListSave.length; s++) {
                        if (ConItemListSave[s].CompSlNo == sno && ConItemList[s].Color == color) {
                            var sn = ConItemListSave[s].CPlanSlNo;
                            p = ConItemListSave[s].Requirement;
                            var res = (p * conval) / 100;
                            var totmet = res * ConItemListSave[s].Prdn_Qty * parts;
                            totmet = totmet.toFixed(3);
                            ConItemListSave[s].Weight = parseFloat((totmet * ConItemListSave[s].WtMetre) / 1000).toFixed(3);
                            for (var n = 0; n < PlanCompFabricDetSave.length; n++) {
                                if (PlanCompFabricDetSave[n].CompSlNo == sno && PlanCompFabricDetSave[n].snumb == sn && PlanCompFabricDetSave[n].Color == color) {
                                    PlanCompFabricDetSave[n].ActWeight = ConItemListSave[s].TotMetres;
                                    PlanCompFabricDetSave[n].Weight = ConItemListSave[s].TotMetres;
                                    PlanCompFabricDetSave[n].Woven_Req_InMtrs = ConItemListSave[s].Weight;
                                    PlanCompFabricDetSave[n].Grammage = wtmet;
                                    //continue;

                                    $('input[id=txtPurQty]').each(function (ig) {
                                        if (fabdata[ig].CompSlNo == sno && fabdata[ig].snumb == sn && fabdata[ig].Color == color) {
                                            var row = $(this).closest('tr');
                                            row.find('#txtfabActwt').val(ConItemListSave[s].TotMetres);
                                            row.find('#txtfabwt').val(ConItemListSave[s].TotMetres);
                                            //row.find('#txtfabgram').val(ConItemListSave[s].TotPieces);
                                        }
                                    });
                                }

                            }
                        }
                    }
                    loadconSaveTable(ConItemListSave);
                    loadCompFabSaveTable(PlanCompFabricDetSave);

                }
            }
            if (fillvar == 'WOVMET') {

                $.each(ConItemList, function () {
                    if (this.CompSlNo == sno && this.Color == color) {
                        this.WtMetre = wtmet;
                        this.Weight = parseFloat((wtmet * this.TotMetres) / 1000).toFixed(3);
                    }

                });
                $.each(ConItemListSave, function () {
                    if (this.CompSlNo == sno && this.Color == color) {
                        this.WtMetre = wtmet;
                        this.Weight = parseFloat((wtmet * this.TotMetres) / 1000).toFixed(3);

                    }
                });

                for (var s = 0; s < ConItemList.length; s++) {
                    if (ConItemList[s].CompSlNo == sno && ConItemList[s].Color == color) {
                        var sn = ConItemList[s].CPlanSlNo;
                        p = ConItemList[s].WtMetre;
                        var res = (p * ConItemList[s].TotMetres) / 1000;

                        res = res.toFixed(3);
                        //ConItemList[s].TotMetres = totmet;
                        //ConItemList[s].Requirement = req;
                        $('input[id=txtWght]').each(function (ig) {
                            if (data[ig].CPlanSlNo == sn && data[ig].Color == color) {
                                var row = $(this).closest('tr');
                                row.find('#txtWtmtWov').val(wtmet);
                                row.find('#txtWght').val(res);

                            }
                        });
                    }
                }

                loadconSaveTable(ConItemListSave);
                //
                if (Colorid > 0 && Sizeid > 0) {
                    for (var s = 0; s < ConItemListSave.length; s++) {
                        if (ConItemListSave[s].CompSlNo == sno && ConItemList[s].Color == color) {
                            var sn = ConItemListSave[s].CPlanSlNo;
                            p = ConItemListSave[s].WtMetre;
                            var res = (p * ConItemListSave[s].TotMetres) / 1000;

                            res = res.toFixed(3);
                            for (var n = 0; n < PlanCompFabricDetSave.length; n++) {
                                if (PlanCompFabricDetSave[n].CompSlNo == sno && PlanCompFabricDetSave[n].snumb == sn && PlanCompFabricDetSave[n].Color == color) {
                                    PlanCompFabricDetSave[n].Woven_Req_InMtrs = ConItemListSave[s].Weight;
                                    PlanCompFabricDetSave[n].Grammage = wtmet;
                                }
                            }
                        }
                    }
                    loadconSaveTable(ConItemListSave);
                    loadCompFabSaveTable(PlanCompFabricDetSave);

                }
            }
            if (fillvar == 'FW') {
                $.each(ConItemList, function () {
                    if (this.Color == color) {
                        this.FinishWidthID = fid;
                        this.FinishWidth = fin;
                    }
                });
                $.each(ConItemListSave, function () {
                    if (this.CompSlNo == sno && this.Color == color) {
                        this.FinishWidthID = fid;
                        this.FinishWidth = fin;
                    }
                });
                loadAdConTable(ConItemList);
                loadconSaveTable(ConItemListSave);


                $.each(PlanCompFabricDet, function () {
                    if (this.Color == color) {
                        this.FinishWidthID = fid;
                        this.FinishWidth = fin;
                    }
                });
                $.each(PlanCompFabricDetSave, function () {
                    if (this.CompSlNo == sno && this.Color == color) {
                        this.FinishWidthID = fid;
                        this.FinishWidth = fin;
                    }
                });
                //loadCompFabTable(PlanCompFabricDet);
                //loadCompFabSaveTable(PlanCompFabricDetSave);
                ConsmtnHideCol(type);
                return true;
            }

            if (fillvar == 'GYW') {
                $.each(ConItemList, function () {
                    if (this.Color == color) {
                        this.GreyWidthID = gid;
                        this.GreyWidth = gry;
                    }
                });
                $.each(ConItemListSave, function () {
                    if (this.CompSlNo == sno && this.Color == color) {
                        this.GreyWidthID = gid;
                        this.GreyWidth = gry;
                    }
                });
                loadAdConTable(ConItemList);
                loadconSaveTable(ConItemListSave);

                $.each(PlanCompFabricDet, function () {
                    if (this.Color == color) {
                        this.GreyWidthID = gid;
                        this.GreyWidth = gry;
                    }
                });
                $.each(PlanCompFabricDetSave, function () {
                    if (this.CompSlNo == sno && this.Color == color) {
                        this.GreyWidthID = gid;
                        this.GreyWidth = gry;
                    }
                });
                //loadCompFabTable(PlanCompFabricDet);
                //loadCompFabSaveTable(PlanCompFabricDetSave);
                ConsmtnHideCol(type);
                return true;
            }
        }
        //yarn

        //yarn
        var result = [];
        $.each(PlanCompFabricDet, function (i, e) {
            var matchingItems = $.grep(result, function (item) {
                return item.BColorID === e.BColorID;
            });
            if (matchingItems.length === 0) {
                result.push(e);
            }
        });



        if (result.length > 0) {
            //PlanYarnSave = [];
            PlanYarn = [];

            PlanYarnSave = jQuery.grep(PlanYarnSave, function (value) {
                return value.SlNo != CompSlNo;
            });
            //PlanYarnSave = jQuery.grep(yarnlist, function (value) {
            //    return value.FabricID != fd;
            //});

            var Cs = result[0].CompSlNo;
            var ComponentId = 0;
            var Component = '';
            for (var t = 0; t < compList.length; t++) {
                if (compList[t].CompSlNo == Cs) {
                    ComponentId = compList[t].ComponentID;
                    Component = compList[t].ComponentName;
                }
            }

            //if (Mod != 0) {
            //    PlanYarnSave = $.grep(PlanYarnSave, function (e) {
            //        return e.SlNo != CompSlNo;
            //    });
            //}
            for (var j = 0; j < result.length; j++) {


                if (PlanYarn.length == 0) {
                    leng = 1;

                }
                else {
                    leng++;

                }
                var bd = 0;
                bd = result[j].BColorID;
                var snumb = result[j].snumb;
                var csln = result[j].CompSlNo;
                var totalqty = 0;
                for (var u = 0; u < PlanCompFabricDetSave.length; u++) {
                    if (PlanCompFabricDetSave[u].BColorID == bd && PlanCompFabricDetSave[u].CompSlNo == csln) {

                        var qty = PlanCompFabricDetSave[u].Woven_Req_InMtrs;
                        totalqty = totalqty + parseFloat(qty);
                    }
                }


                //var bcqty = 0;
                //for (var r = 0; r < PlanCompFabricDetSave.length; r++) {
                //    if (PlanCompFabricDetSave[r].BColorID == bd && PlanCompFabricDetSave[r].CompSlNo == s) {

                //        var qty = PlanCompFabricDetSave[r].BColorPQty;
                //        bcqty = bcqty + parseFloat(qty);
                //    }
                //}


                //var finqty = 0;
                //for (var n = 0; n < PlanCompFabricDetSave.length; n++) {
                //    if (PlanCompFabricDetSave[n].BColorID == bd && PlanCompFabricDetSave[n].CompSlNo == s) {

                //        var qty = PlanCompFabricDetSave[n].FColorPQty;
                //        finqty = finqty + parseFloat(qty);
                //    }
                //}


                //var totclrqty = parseFloat(bcqty) + parseFloat(finqty);

                ////for (var w = 0; w < PlanCompFabricDet.length; w++) {
                ////    if (PlanCompFabricDet[w].BColorID == bd && PlanCompFabricDet[w].snumb == sno) {

                //totalqty = totalqty - totclrqty;
                totalqty = totalqty.toFixed(3);
                //    }
                //}

                var yarnlistobj = {
                    PlanId: 0,
                    Fabric: result[j].Fabric,
                    FabricID: result[j].FabricID,
                    Fabric_ColorId: result[j].BColorID,
                    Fabric_Weight: totalqty,
                    Fabric_type: result[j].type,//result[j].FabricType,
                    EntryDate: new Date($('#txtEntryDate').val()),
                    BColor: result[j].Bcolor,
                    SlNo: result[j].CompSlNo,
                    YPlanmasID: 0,
                    YSlno: leng,
                    ComponentId: ComponentId,
                    Component: Component
                }




                PlanYarnSave.push(yarnlistobj);
                PlanYarn.push(yarnlistobj);
            }
        }

        //loadYarndetTab
        PlanYarnSave = jQuery.grep(PlanYarnSave, function (value) {
            return value.Fabric_Weight != 0;
        });
        PlanYarn = jQuery.grep(PlanYarn, function (value) {
            return value.Fabric_Weight != 0;
        });
        loadYarnSavedetTab(PlanYarnSave);


        //var ctry = [];
        //ctry = PlanYarnSave;
        //ctry = $.grep(ctry, function (e) {
        //    if (e.SlNo == s) {
        //        return e;
        //    }
        //});
        //PlanYarn = ctry;

        loadYarndetTab(PlanYarn);


        //var totalamnt = 0;
        //for (var e = 0; e < PlanCompFabricDet.length; e++) {
        //    if (PlanCompFabricDet[e].CompSlNo == Sno && PlanCompFabricDet[e].Bcolor == bclr) {
        //        var amount = PlanCompFabricDet[e].Weight;
        //        totalamnt = totalamnt + parseFloat(amount);
        //    }
        //}

        //totalamnt = totalamnt.toFixed(3);
        //for (var e = 0; e < PlanYarnSave.length; e++) {
        //    if (PlanYarnSave[e].SlNo == Sno && PlanYarnSave[e].BColor == bclr) {
        //        PlanYarnSave[e].Fabric_Weight = (totalamnt);
        //    }
        //}
        //loadYarnSavedetTab(PlanYarnSave);


        //PlanYarn = $.grep(PlanYarnSave, function (e) {
        //    return e.SlNo == Sno;
        //});
        //loadYarndetTab(PlanYarn);

        totwght();
        ConsmtnHideCol(type);
        //Yarndet

        //Yarndet

        if (PlanYarnDetSave.length > 0) {


            var ys = PlanYarn[0].YSlno;

            for (var b = 0; b < PlanYarnSave.length; b++) {
                if (PlanYarnSave[b].SlNo == CompSlNo) {
                    var pysl = PlanYarnSave[b].YSlno;
                    var cmpsl = PlanYarnSave[b].SlNo;
                    var wgt = PlanYarnSave[b].Fabric_Weight;
                    var bcid = PlanYarnSave[b].Fabric_ColorId;

                    for (var m = 0; m < PlanYarnDetSave.length; m++) {
                        if (PlanYarnDetSave[m].CompSno == cmpsl) {
                            var s = PlanYarnDetSave[m].SlNo;
                            if (PlanYarnDetSave[m].BaseColorID == bcid) {
                                YsBp = 1;
                                var pr = PlanYarnDetSave[m].Knit_In_Per;
                                var re = parseFloat((pr * wgt) / 100);
                                re = re.toFixed(3);
                                PlanYarnDetSave[m].Knit_In_Qty = re;
                                PlanYarnDetSave[m].Knit_In_ActQty = re;
                                PlanYarnDetSave[m].YSlNo = pysl;
                                PlanYarnDetSave[m].SlNo = s;
                                //PlanYarnDetSave[m].FabricID = FabricId;
                            }

                        }
                    }
                }
            }
            PlanYarnDet = $.grep(PlanYarnDetSave, function (e) {
                return e.CompSno == CompSlNo && e.YSlNo == ys;
            });
            Loadsepyarn(PlanYarnDet);
            LoadsepSaveyarn(PlanYarnDetSave);
        }
        return true;

    }
    else if (type == 'PANELS') {
        var protype = $('input[name="ALType"]:checked').attr('value');
        if (protype == 'A') {
            if (fillvar == 'GRMPCSPAN') {
                $.each(ConItemList, function () {
                    this.GmsPieces = grmpcs;
                    this.Weight = parseFloat((grmpcs * totpcs) / 1000).toFixed(3);

                });
                $.each(ConItemListSave, function () {
                    if (this.CompSlNo == sno) {
                        this.GmsPieces = grmpcs;
                        this.Weight = parseFloat((grmpcs * totpcs) / 1000).toFixed(3);

                    }
                });

                for (var s = 0; s < ConItemList.length; s++) {

                    var sn = ConItemList[s].CPlanSlNo;
                    p = ConItemList[s].TotPieces;
                    rm = ConItemList[s].GmsPieces;
                    ConItemList[s].Weight = parseFloat((rm * p) / 1000).toFixed(3);
                    //}

                    $('input[id=txtGmspcspan]').each(function (ig) {
                        if (data[ig].CPlanSlNo == sn) {
                            var row = $(this).closest('tr');
                            row.find('#txtGmspcspan').val(grmpcs);
                            row.find('#txtWght').val(((rm * p) / 1000).toFixed(3));

                        }
                    });
                }

                loadconSaveTable(ConItemListSave);


                if (Colorid > 0 && Sizeid > 0) {
                    for (var s = 0; s < ConItemListSave.length; s++) {
                        if (ConItemListSave[s].CompSlNo == sno) {
                            var sn = ConItemListSave[s].CPlanSlNo;
                            p = ConItemListSave[s].TotPieces;
                            rm = ConItemListSave[s].GmsPieces;
                            ConItemListSave[s].Weight = (((p * rm) / 1000)).toFixed(3);

                            for (var n = 0; n < PlanCompFabricDetSave.length; n++) {
                                if (PlanCompFabricDetSave[n].CompSlNo == sno && PlanCompFabricDetSave[n].snumb == sn) {
                                    PlanCompFabricDetSave[n].ActWeight = PlanCompFabricDetSave[n].Prdn_Qty * noofparts;
                                    PlanCompFabricDetSave[n].Weight = PlanCompFabricDetSave[n].Prdn_Qty * noofparts;
                                    PlanCompFabricDetSave[n].Grammage = ConItemListSave[s].GmsPieces;
                                    var pq = PlanCompFabricDetSave[n].Weight;
                                    var gr = PlanCompFabricDetSave[n].Grammage;
                                    PlanCompFabricDetSave[n].Woven_Req_InMtrs = (((pq * gr) / 1000)).toFixed(3);
                                    //continue;

                                    $('input[id=txtPurQty]').each(function (ig) {
                                        if (fabdata[ig].CompSlNo == sno && fabdata[ig].snumb == sn) {
                                            var row = $(this).closest('tr');
                                            row.find('#txtfabActwt').val(PlanCompFabricDetSave[n].Prdn_Qty * noofparts);
                                            row.find('#txtfabwt').val(PlanCompFabricDetSave[n].Prdn_Qty * noofparts);
                                            //row.find('#txtfabgram').val(ConItemListSave[s].TotPieces);
                                        }
                                    });
                                }

                            }
                        }
                    }
                    loadconSaveTable(ConItemListSave);
                    loadCompFabSaveTable(PlanCompFabricDetSave);

                }
                if (Colorid > 0 && Sizeid == 0) {
                    for (var s = 0; s < ConItemListSave.length; s++) {
                        if (ConItemListSave[s].CompSlNo == sno) {
                            var sn = ConItemListSave[s].CPlanSlNo;
                            p = ConItemListSave[s].TotPieces;
                            var cl = ConItemListSave[s].ColorID;
                            rm = ConItemListSave[s].GmsPieces;
                            ConItemListSave[s].Weight = (((p * rm) / 1000)).toFixed(3);

                            for (var n = 0; n < PlanCompFabricDetSave.length; n++) {
                                var snum = PlanCompFabricDetSave[n].snumb;
                                if (PlanCompFabricDetSave[n].CompSlNo == sno && PlanCompFabricDetSave[n].snumb == snum && PlanCompFabricDetSave[n].ColorID == cl) {
                                    PlanCompFabricDetSave[n].ActWeight = PlanCompFabricDetSave[n].Prdn_Qty * noofparts;
                                    PlanCompFabricDetSave[n].Weight = PlanCompFabricDetSave[n].Prdn_Qty * noofparts;
                                    PlanCompFabricDetSave[n].Grammage = ConItemListSave[s].GmsPieces;
                                    var pq = PlanCompFabricDetSave[n].Weight;
                                    var gr = PlanCompFabricDetSave[n].Grammage;
                                    PlanCompFabricDetSave[n].Woven_Req_InMtrs = (((pq * gr) / 1000)).toFixed(3);
                                    //continue;

                                    $('input[id=txtPurQty]').each(function (ig) {
                                        if (fabdata[ig].CompSlNo == sno && fabdata[ig].snumb == snum && fabdata[ig].ColorID == cl) {
                                            var row = $(this).closest('tr');
                                            row.find('#txtfabActwt').val(PlanCompFabricDetSave[n].Prdn_Qty * noofparts);
                                            row.find('#txtfabwt').val(PlanCompFabricDetSave[n].Prdn_Qty * noofparts);
                                            //row.find('#txtfabgram').val(ConItemListSave[s].TotPieces);
                                        }
                                    });
                                }

                            }
                        }
                    }
                    loadconSaveTable(ConItemListSave);
                    loadCompFabSaveTable(PlanCompFabricDetSave);

                }
                if (Colorid == 0 && Sizeid > 0) {
                    for (var s = 0; s < ConItemListSave.length; s++) {
                        if (ConItemListSave[s].CompSlNo == sno) {
                            var sn = ConItemListSave[s].CPlanSlNo;
                            p = ConItemListSave[s].TotPieces;
                            var sz = ConItemListSave[s].SizeId;
                            rm = ConItemListSave[s].GmsPieces;
                            ConItemListSave[s].Weight = (((p * rm) / 1000)).toFixed(3);

                            for (var n = 0; n < PlanCompFabricDetSave.length; n++) {
                                var snum = PlanCompFabricDetSave[n].snumb;
                                if (PlanCompFabricDetSave[n].CompSlNo == sno && PlanCompFabricDetSave[n].snumb == snum && PlanCompFabricDetSave[n].SizeId == sz) {
                                    PlanCompFabricDetSave[n].ActWeight = PlanCompFabricDetSave[n].Prdn_Qty * noofparts;
                                    PlanCompFabricDetSave[n].Weight = PlanCompFabricDetSave[n].Prdn_Qty * noofparts;
                                    PlanCompFabricDetSave[n].Grammage = ConItemListSave[s].GmsPieces;
                                    var pq = PlanCompFabricDetSave[n].Weight;
                                    var gr = PlanCompFabricDetSave[n].Grammage;
                                    PlanCompFabricDetSave[n].Woven_Req_InMtrs = (((pq * gr) / 1000)).toFixed(3);
                                    //continue;

                                    $('input[id=txtPurQty]').each(function (ig) {
                                        if (fabdata[ig].CompSlNo == sno && fabdata[ig].snumb == snum && fabdata[ig].SizeId == sz) {
                                            var row = $(this).closest('tr');
                                            row.find('#txtfabActwt').val(PlanCompFabricDetSave[n].Prdn_Qty * noofparts);
                                            row.find('#txtfabwt').val(PlanCompFabricDetSave[n].Prdn_Qty * noofparts);
                                            //row.find('#txtfabgram').val(ConItemListSave[s].TotPieces);
                                        }
                                    });
                                }

                            }
                        }
                    }
                    loadconSaveTable(ConItemListSave);
                    loadCompFabSaveTable(PlanCompFabricDetSave);

                }
            }
            if (fillvar == 'FW') {
                $.each(ConItemList, function () {
                    this.FinishWidthID = fid;
                    this.FinishWidth = fin;
                });
                $.each(ConItemListSave, function () {
                    if (this.CompSlNo == sno) {
                        this.FinishWidthID = fid;
                        this.FinishWidth = fin;
                    }
                });
                loadAdConTable(ConItemList);
                loadconSaveTable(ConItemListSave);

                $.each(PlanCompFabricDet, function () {
                    this.FinishWidthID = fid;
                    this.FinishWidth = fin;
                });
                $.each(PlanCompFabricDetSave, function () {
                    if (this.CompSlNo == sno) {
                        this.FinishWidthID = fid;
                        this.FinishWidth = fin;
                    }
                });
                //loadCompFabTable(PlanCompFabricDet);
                //loadCompFabSaveTable(PlanCompFabricDetSave);
                ConsmtnHideCol(type);
                return true;
            }
            if (fillvar == 'GYW') {
                $.each(ConItemList, function () {
                    this.GreyWidthID = gid;
                    this.GreyWidth = gry;
                });
                $.each(ConItemListSave, function () {
                    if (this.CompSlNo == sno) {
                        this.GreyWidthID = gid;
                        this.GreyWidth = gry;
                    }
                });
                loadAdConTable(ConItemList);
                loadconSaveTable(ConItemListSave);

                $.each(PlanCompFabricDet, function () {
                    this.GreyWidthID = gid;
                    this.GreyWidth = gry;
                });
                $.each(PlanCompFabricDetSave, function () {
                    if (this.CompSlNo == sno) {
                        this.GreyWidthID = gid;
                        this.GreyWidth = gry;
                    }
                });
                //loadCompFabTable(PlanCompFabricDet);
                //loadCompFabSaveTable(PlanCompFabricDetSave);
                ConsmtnHideCol(type);
                return true;
            }
        }
        else if (protype == 'S') {
            if (fillvar == 'GRMPCSPAN') {

                $.each(ConItemList, function () {
                    if (this.CompSlNo == sno && this.Size == size) {
                        this.GmsPieces = grmpcs;
                        this.Weight = parseFloat((grmpcs * totpcs) / 1000).toFixed(3);
                    }
                });
                $.each(ConItemListSave, function () {
                    if (this.CompSlNo == sno && this.Size == size) {
                        this.GmsPieces = grmpcs;
                        this.Weight = parseFloat((grmpcs * totpcs) / 1000).toFixed(3);

                    }
                });

                for (var s = 0; s < ConItemList.length; s++) {
                    if (ConItemList[s].CompSlNo == sno && ConItemList[s].Size == size) {
                        var sn = ConItemList[s].CPlanSlNo;
                        p = ConItemList[s].TotPieces;
                        rm = ConItemList[s].GmsPieces;
                        ConItemList[s].Weight = parseFloat((rm * p) / 1000).toFixed(3);
                        //}

                        $('input[id=txtGmspcspan]').each(function (ig) {
                            if (data[ig].CPlanSlNo == sn && data[ig].Size == size) {
                                var row = $(this).closest('tr');
                                row.find('#txtGmspcspan').val(grmpcs);
                                row.find('#txtWght').val(((rm * p) / 1000).toFixed(3));

                            }
                        });
                    }
                }
                loadconSaveTable(ConItemListSave);

                if (Colorid > 0 && Sizeid > 0) {
                    for (var s = 0; s < ConItemListSave.length; s++) {
                        if (ConItemListSave[s].CompSlNo == sno && ConItemListSave[s].Size == size) {
                            var sn = ConItemListSave[s].CPlanSlNo;
                            var sz = ConItemListSave[s].Size;
                            p = ConItemListSave[s].TotPieces;
                            rm = ConItemListSave[s].GmsPieces;
                            ConItemListSave[s].Weight = (((p * rm) / 1000)).toFixed(3);

                            for (var n = 0; n < PlanCompFabricDetSave.length; n++) {
                                if (PlanCompFabricDetSave[n].CompSlNo == sno && PlanCompFabricDetSave[n].snumb == sn && PlanCompFabricDetSave[n].Size == sz) {
                                    PlanCompFabricDetSave[n].ActWeight = ConItemListSave[s].TotPieces;
                                    PlanCompFabricDetSave[n].Weight = ConItemListSave[s].TotPieces;
                                    PlanCompFabricDetSave[n].Grammage = ConItemListSave[s].GmsPieces;
                                    PlanCompFabricDetSave[n].Woven_Req_InMtrs = ConItemListSave[s].Weight;
                                    //continue;
                                    $('input[id=txtPurQty]').each(function (ig) {
                                        if (fabdata[ig].CompSlNo == sno && fabdata[ig].snumb == sn && fabdata[ig].Size == sz) {
                                            var row = $(this).closest('tr');
                                            row.find('#txtfabActwt').val(ConItemListSave[s].TotPieces);
                                            row.find('#txtfabwt').val(ConItemListSave[s].TotPieces);
                                            //row.find('#txtfabgram').val(ConItemListSave[s].TotPieces);
                                        }
                                    });
                                }
                            }
                        }
                    }
                    loadconSaveTable(ConItemListSave);
                    loadCompFabSaveTable(PlanCompFabricDetSave);
                }
            }
            if (fillvar == 'FW') {
                $.each(ConItemList, function () {
                    if (this.Size == size) {
                        this.FinishWidthID = fid;
                        this.FinishWidth = fin;
                    }
                });
                $.each(ConItemListSave, function () {
                    if (this.CompSlNo == sno && this.Size == size) {
                        this.FinishWidthID = fid;
                        this.FinishWidth = fin;
                    }
                });
                loadAdConTable(ConItemList);
                loadconSaveTable(ConItemListSave);

                $.each(PlanCompFabricDet, function () {
                    if (this.Size == size) {
                        this.FinishWidthID = fid;
                        this.FinishWidth = fin;
                    }
                });
                $.each(PlanCompFabricDetSave, function () {
                    if (this.CompSlNo == sno && this.Size == size) {
                        this.FinishWidthID = fid;
                        this.FinishWidth = fin;
                    }
                });
                //loadCompFabTable(PlanCompFabricDet);
                //loadCompFabSaveTable(PlanCompFabricDetSave);
                ConsmtnHideCol(type);
                return true;
            }

            if (fillvar == 'GYW') {
                $.each(ConItemList, function () {
                    if (this.Size == size) {
                        this.GreyWidthID = gid;
                        this.GreyWidth = gry;
                    }
                });
                $.each(ConItemListSave, function () {
                    if (this.CompSlNo == sno && this.Size == size) {
                        this.GreyWidthID = gid;
                        this.GreyWidth = gry;
                    }
                });
                loadAdConTable(ConItemList);
                loadconSaveTable(ConItemListSave);

                $.each(PlanCompFabricDet, function () {
                    if (this.Size == size) {
                        this.GreyWidthID = gid;
                        this.GreyWidth = gry;
                    }
                });
                $.each(PlanCompFabricDetSave, function () {
                    if (this.CompSlNo == sno && this.Size == size) {
                        this.GreyWidthID = gid;
                        this.GreyWidth = gry;
                    }
                });
                //loadCompFabTable(PlanCompFabricDet);
                //loadCompFabSaveTable(PlanCompFabricDetSave);
                ConsmtnHideCol(type);
                return true;
            }
        }
        else if (protype == 'C') {
            if (fillvar == 'GRMPCSPAN') {

                $.each(ConItemList, function () {
                    if (this.CompSlNo == sno && this.Color == color) {
                        this.GmsPieces = grmpcs;
                        this.Weight = parseFloat((grmpcs * totpcs) / 1000).toFixed(3);
                    }
                });
                $.each(ConItemListSave, function () {
                    if (this.CompSlNo == sno && this.Color == color) {
                        this.GmsPieces = grmpcs;
                        this.Weight = parseFloat((grmpcs * totpcs) / 1000).toFixed(3);

                    }
                });

                for (var s = 0; s < ConItemList.length; s++) {
                    if (ConItemList[s].CompSlNo == sno && ConItemList[s].Color == color) {
                        var sn = ConItemList[s].CPlanSlNo;
                        p = ConItemList[s].TotPieces;
                        rm = ConItemList[s].GmsPieces;
                        ConItemList[s].Weight = parseFloat((rm * p) / 1000).toFixed(3);
                        //}

                        $('input[id=txtGmspcspan]').each(function (ig) {
                            if (data[ig].CPlanSlNo == sn && data[ig].Color == color) {
                                var row = $(this).closest('tr');
                                row.find('#txtGmspcspan').val(grmpcs);
                                row.find('#txtWght').val(((rm * p) / 1000).toFixed(3));

                            }
                        });
                    }
                }


                loadconSaveTable(ConItemListSave);
                if (Colorid > 0 && Sizeid > 0) {
                    for (var s = 0; s < ConItemListSave.length; s++) {
                        if (ConItemListSave[s].CompSlNo == sno && ConItemList[s].Color == color) {
                            var sn = ConItemListSave[s].CPlanSlNo;
                            var cl = ConItemListSave[s].Color;
                            p = ConItemListSave[s].TotPieces;
                            rm = ConItemListSave[s].GmsPieces;
                            ConItemListSave[s].Weight = (((p * rm) / 1000)).toFixed(3);

                            for (var n = 0; n < PlanCompFabricDetSave.length; n++) {
                                if (PlanCompFabricDetSave[n].CompSlNo == sno && PlanCompFabricDetSave[n].snumb == sn && PlanCompFabricDetSave[n].Color == cl) {
                                    PlanCompFabricDetSave[n].ActWeight = ConItemListSave[s].TotPieces;
                                    PlanCompFabricDetSave[n].Weight = ConItemListSave[s].TotPieces;
                                    PlanCompFabricDetSave[n].Grammage = ConItemListSave[s].GmsPieces;
                                    PlanCompFabricDetSave[n].Woven_Req_InMtrs = ConItemListSave[s].Weight;
                                    //continue;

                                    $('input[id=txtPurQty]').each(function (ig) {
                                        if (fabdata[ig].CompSlNo == sno && fabdata[ig].snumb == sn && fabdata[ig].Color == cl) {
                                            var row = $(this).closest('tr');
                                            row.find('#txtfabActwt').val(ConItemListSave[s].TotPieces);
                                            row.find('#txtfabwt').val(ConItemListSave[s].TotPieces);
                                            //row.find('#txtfabgram').val(ConItemListSave[s].TotPieces);
                                        }
                                    });
                                }

                            }
                        }
                    }
                    loadconSaveTable(ConItemListSave);
                    loadCompFabSaveTable(PlanCompFabricDetSave);

                }
            }
            if (fillvar == 'FW') {
                $.each(ConItemList, function () {
                    if (this.Color == color) {
                        this.FinishWidthID = fid;
                        this.FinishWidth = fin;
                    }
                });
                $.each(ConItemListSave, function () {
                    if (this.CompSlNo == sno && this.Color == color) {
                        this.FinishWidthID = fid;
                        this.FinishWidth = fin;
                    }
                });
                loadAdConTable(ConItemList);
                loadconSaveTable(ConItemListSave);


                $.each(PlanCompFabricDet, function () {
                    if (this.Color == color) {
                        this.FinishWidthID = fid;
                        this.FinishWidth = fin;
                    }
                });
                $.each(PlanCompFabricDetSave, function () {
                    if (this.CompSlNo == sno && this.Color == color) {
                        this.FinishWidthID = fid;
                        this.FinishWidth = fin;
                    }
                });
                //loadCompFabTable(PlanCompFabricDet);
                //loadCompFabSaveTable(PlanCompFabricDetSave);
                ConsmtnHideCol(type);
                return true;
            }

            if (fillvar == 'GYW') {
                $.each(ConItemList, function () {
                    if (this.Color == color) {
                        this.GreyWidthID = gid;
                        this.GreyWidth = gry;
                    }
                });
                $.each(ConItemListSave, function () {
                    if (this.CompSlNo == sno && this.Color == color) {
                        this.GreyWidthID = gid;
                        this.GreyWidth = gry;
                    }
                });
                loadAdConTable(ConItemList);
                loadconSaveTable(ConItemListSave);

                $.each(PlanCompFabricDet, function () {
                    if (this.Color == color) {
                        this.GreyWidthID = gid;
                        this.GreyWidth = gry;
                    }
                });
                $.each(PlanCompFabricDetSave, function () {
                    if (this.CompSlNo == sno && this.Color == color) {
                        this.GreyWidthID = gid;
                        this.GreyWidth = gry;
                    }
                });
                //loadCompFabTable(PlanCompFabricDet);
                //loadCompFabSaveTable(PlanCompFabricDetSave);
                ConsmtnHideCol(type);
                return true;
            }
        }

        //yarn
        var result = [];
        $.each(PlanCompFabricDet, function (i, e) {
            var matchingItems = $.grep(result, function (item) {
                return item.BColorID === e.BColorID;
            });
            if (matchingItems.length === 0) {
                result.push(e);
            }
        });



        if (result.length > 0) {
            //PlanYarnSave = [];
            PlanYarn = [];

            PlanYarnSave = jQuery.grep(PlanYarnSave, function (value) {
                return value.SlNo != CompSlNo;
            });
            //PlanYarnSave = jQuery.grep(yarnlist, function (value) {
            //    return value.FabricID != fd;
            //});

            var Cs = result[0].CompSlNo;
            var ComponentId = 0;
            var Component = '';
            for (var t = 0; t < compList.length; t++) {
                if (compList[t].CompSlNo == Cs) {
                    ComponentId = compList[t].ComponentID;
                    Component = compList[t].ComponentName;
                }
            }

            //if (Mod != 0) {
            //    PlanYarnSave = $.grep(PlanYarnSave, function (e) {
            //        return e.SlNo != CompSlNo;
            //    });
            //}
            for (var j = 0; j < result.length; j++) {


                if (PlanYarn.length == 0) {
                    leng = 1;

                }
                else {
                    leng++;

                }
                var bd = 0;
                bd = result[j].BColorID;
                var snumb = result[j].snumb;
                var csln = result[j].CompSlNo;
                var totalqty = 0;
                for (var u = 0; u < PlanCompFabricDetSave.length; u++) {
                    if (PlanCompFabricDetSave[u].BColorID == bd && PlanCompFabricDetSave[u].CompSlNo == csln) {

                        var qty = PlanCompFabricDetSave[u].Woven_Req_InMtrs;
                        totalqty = totalqty + parseFloat(qty);
                    }
                }


                //var bcqty = 0;
                //for (var r = 0; r < PlanCompFabricDetSave.length; r++) {
                //    if (PlanCompFabricDetSave[r].BColorID == bd && PlanCompFabricDetSave[r].CompSlNo == s) {

                //        var qty = PlanCompFabricDetSave[r].BColorPQty;
                //        bcqty = bcqty + parseFloat(qty);
                //    }
                //}


                //var finqty = 0;
                //for (var n = 0; n < PlanCompFabricDetSave.length; n++) {
                //    if (PlanCompFabricDetSave[n].BColorID == bd && PlanCompFabricDetSave[n].CompSlNo == s) {

                //        var qty = PlanCompFabricDetSave[n].FColorPQty;
                //        finqty = finqty + parseFloat(qty);
                //    }
                //}


                //var totclrqty = parseFloat(bcqty) + parseFloat(finqty);


                //totalqty = totalqty - totclrqty;
                totalqty = totalqty.toFixed(3);


                var yarnlistobj = {
                    PlanId: 0,
                    Fabric: result[j].Fabric,
                    FabricID: result[j].FabricID,
                    Fabric_ColorId: result[j].BColorID,
                    Fabric_Weight: totalqty,
                    Fabric_type: result[j].type,//result[j].FabricType,
                    EntryDate: new Date($('#txtEntryDate').val()),
                    BColor: result[j].Bcolor,
                    SlNo: result[j].CompSlNo,
                    YPlanmasID: 0,
                    YSlno: leng,
                    ComponentId: ComponentId,
                    Component: Component
                }




                PlanYarnSave.push(yarnlistobj);
                PlanYarn.push(yarnlistobj);
            }
        }

        //loadYarndetTab
        PlanYarnSave = jQuery.grep(PlanYarnSave, function (value) {
            return value.Fabric_Weight != 0;
        });
        loadYarnSavedetTab(PlanYarnSave);


        loadYarndetTab(PlanYarn);

        totwght();

        //Yarndet

        if (PlanYarnDetSave.length > 0) {


            var ys = PlanYarn[0].YSlno;

            for (var b = 0; b < PlanYarnSave.length; b++) {
                if (PlanYarnSave[b].SlNo == CompSlNo) {
                    var pysl = PlanYarnSave[b].YSlno;
                    var cmpsl = PlanYarnSave[b].SlNo;
                    var wgt = PlanYarnSave[b].Fabric_Weight;
                    var bcid = PlanYarnSave[b].Fabric_ColorId;

                    for (var m = 0; m < PlanYarnDetSave.length; m++) {
                        if (PlanYarnDetSave[m].CompSno == cmpsl) {
                            var s = PlanYarnDetSave[m].SlNo;
                            if (PlanYarnDetSave[m].BaseColorID == bcid) {
                                YsBp = 1;
                                var pr = PlanYarnDetSave[m].Knit_In_Per;
                                var re = parseFloat((pr * wgt) / 100);
                                re = re.toFixed(3);
                                PlanYarnDetSave[m].Knit_In_Qty = re;
                                PlanYarnDetSave[m].Knit_In_ActQty = re;
                                PlanYarnDetSave[m].YSlNo = pysl;
                                PlanYarnDetSave[m].SlNo = s;
                                // PlanYarnDetSave[m].FabricID = FabricId;
                            }

                        }
                    }
                }
            }
            PlanYarnDet = $.grep(PlanYarnDetSave, function (e) {
                return e.CompSno == CompSlNo && e.YSlNo == ys;
            });
            Loadsepyarn(PlanYarnDet);
            LoadsepSaveyarn(PlanYarnDetSave);
        }
        ConsmtnHideCol(type);
        return true;
    }

    //yarn
    //var result = [];
    //$.each(PlanCompFabricDet, function (i, e) {
    //    var matchingItems = $.grep(result, function (item) {
    //        return item.BColorID === e.BColorID;
    //    });
    //    if (matchingItems.length === 0) {
    //        result.push(e);
    //    }
    //});



    //if (result.length > 0) {
    //    //PlanYarnSave = [];
    //    PlanYarn = [];

    //    PlanYarnSave = jQuery.grep(PlanYarnSave, function (value) {
    //        return value.SlNo != CompSlNo;
    //    });
    //    //PlanYarnSave = jQuery.grep(yarnlist, function (value) {
    //    //    return value.FabricID != fd;
    //    //});

    //    var Cs = result[0].CompSlNo;
    //    var ComponentId = 0;
    //    var Component = '';
    //    for (var t = 0; t < compList.length; t++) {
    //        if (compList[t].CompSlNo == Cs) {
    //            ComponentId = compList[t].ComponentID;
    //            Component = compList[t].ComponentName;
    //        }
    //    }

    //    //if (Mod != 0) {
    //    //    PlanYarnSave = $.grep(PlanYarnSave, function (e) {
    //    //        return e.SlNo != CompSlNo;
    //    //    });
    //    //}
    //    for (var j = 0; j < result.length; j++) {


    //        if (PlanYarn.length == 0) {
    //            leng = 1;

    //        }
    //        else {
    //            leng++;

    //        }
    //        var bd = 0;
    //        bd = result[j].BColorID;
    //        var snumb = result[j].snumb;
    //        var csln = result[j].CompSlNo;
    //        var totalqty = 0;
    //        for (var u = 0; u < PlanCompFabricDetSave.length; u++) {
    //            if (PlanCompFabricDetSave[u].BColorID == bd && PlanCompFabricDetSave[u].CompSlNo == csln) {

    //                var qty = PlanCompFabricDetSave[u].Weight;
    //                totalqty = totalqty + parseFloat(qty);
    //            }
    //        }


    //        var bcqty = 0;
    //        for (var r = 0; r < PlanCompFabricDetSave.length; r++) {
    //            if (PlanCompFabricDetSave[r].BColorID == bd && PlanCompFabricDetSave[r].CompSlNo == s) {

    //                var qty = PlanCompFabricDetSave[r].BColorPQty;
    //                bcqty = bcqty + parseFloat(qty);
    //            }
    //        }


    //        var finqty = 0;
    //        for (var n = 0; n < PlanCompFabricDetSave.length; n++) {
    //            if (PlanCompFabricDetSave[n].BColorID == bd && PlanCompFabricDetSave[n].CompSlNo == s) {

    //                var qty = PlanCompFabricDetSave[n].FColorPQty;
    //                finqty = finqty + parseFloat(qty);
    //            }
    //        }


    //        var totclrqty = parseFloat(bcqty) + parseFloat(finqty);

    //        //for (var w = 0; w < PlanCompFabricDet.length; w++) {
    //        //    if (PlanCompFabricDet[w].BColorID == bd && PlanCompFabricDet[w].snumb == sno) {

    //        totalqty = totalqty - totclrqty;
    //        totalqty = totalqty.toFixed(3);
    //        //    }
    //        //}

    //        var yarnlistobj = {
    //            PlanId: 0,
    //            Fabric: result[j].Fabric,
    //            FabricID: result[j].FabricID,
    //            Fabric_ColorId: result[j].BColorID,
    //            Fabric_Weight: totalqty,
    //            Fabric_type: result[j].type,//result[j].FabricType,
    //            EntryDate: new Date($('#txtEntryDate').val()),
    //            BColor: result[j].Bcolor,
    //            SlNo: result[j].CompSlNo,
    //            YPlanmasID: 0,
    //            YSlno: leng,
    //            ComponentId: ComponentId,
    //            Component: Component
    //        }




    //        PlanYarnSave.push(yarnlistobj);
    //        PlanYarn.push(yarnlistobj);
    //    }
    //}

    //loadYarndetTab
    //PlanYarnSave = jQuery.grep(PlanYarnSave, function (value) {
    //    return value.Fabric_Weight != 0;
    //});
    //loadYarnSavedetTab(PlanYarnSave);


    //var ctry = [];
    //ctry = PlanYarnSave;
    //ctry = $.grep(ctry, function (e) {
    //    if (e.SlNo == s) {
    //        return e;
    //    }
    //});
    //PlanYarn = ctry;

    //loadYarndetTab(PlanYarn);


    //var totalamnt = 0;
    //for (var e = 0; e < PlanCompFabricDet.length; e++) {
    //    if (PlanCompFabricDet[e].CompSlNo == Sno && PlanCompFabricDet[e].Bcolor == bclr) {
    //        var amount = PlanCompFabricDet[e].Weight;
    //        totalamnt = totalamnt + parseFloat(amount);
    //    }
    //}

    //totalamnt = totalamnt.toFixed(3);
    //for (var e = 0; e < PlanYarnSave.length; e++) {
    //    if (PlanYarnSave[e].SlNo == Sno && PlanYarnSave[e].BColor == bclr) {
    //        PlanYarnSave[e].Fabric_Weight = (totalamnt);
    //    }
    //}
    //loadYarnSavedetTab(PlanYarnSave);


    //PlanYarn = $.grep(PlanYarnSave, function (e) {
    //    return e.SlNo == Sno;
    //});
    //loadYarndetTab(PlanYarn);

    //totwght();

    //Yarndet

    //if (PlanYarnDetSave.length > 0) {


    //    var ys = PlanYarn[0].YSlno;

    //    for (var b = 0; b < PlanYarnSave.length; b++) {
    //        if (PlanYarnSave[b].SlNo == CompSlNo) {
    //            var pysl = PlanYarnSave[b].YSlno;
    //            var cmpsl = PlanYarnSave[b].SlNo;
    //            var wgt = PlanYarnSave[b].Fabric_Weight;
    //            var bcid = PlanYarnSave[b].Fabric_ColorId;

    //            for (var m = 0; m < PlanYarnDetSave.length; m++) {
    //                if (PlanYarnDetSave[m].CompSno == cmpsl) {
    //                    var s = PlanYarnDetSave[m].SlNo;
    //                    if (PlanYarnDetSave[m].BaseColorID == bcid) {
    //                        YsBp = 1;
    //                        var pr = PlanYarnDetSave[m].Knit_In_Per;
    //                        var re = parseFloat((pr * wgt) / 100);
    //                        re = re.toFixed(3);
    //                        PlanYarnDetSave[m].Knit_In_Qty = re;
    //                        PlanYarnDetSave[m].Knit_In_ActQty = re;
    //                        PlanYarnDetSave[m].YSlNo = pysl;
    //                        PlanYarnDetSave[m].SlNo = s;
    //                        //PlanYarnDetSave[m].FabricID = FabricId;
    //                    }

    //                }
    //            }
    //        }
    //    }
    //    PlanYarnDet = $.grep(PlanYarnDetSave, function (e) {
    //        return e.CompSno == CompSlNo && e.YSlNo == ys;
    //    });
    //    Loadsepyarn(PlanYarnDet);
    //    LoadsepSaveyarn(PlanYarnDetSave);
    //}
    totconwght();
    ConsmtnHideCol(type);
}

function calclength(Val) {
    Len = Val;
    fillvar = 'L';
    indexforfill = index;
    var currentrowoftcpi = ConItemList.slice(index);
    var sno = currentrowoftcpi[0].CPlanSlNo;

    $.each(ConItemList, function () {
        if (this.CPlanSlNo == sno) {
            this.Length = Len;

        }
    });

    loadAdConTable(ConItemList);


    $.each(ConItemListSave, function () {
        if (this.CPlanSlNo == sno) {
            this.Length = Len;

        }
    });
    loadconSaveTable(ConItemListSave);
}

function calcwidth(Val) {

    Width = Val;
    fillvar = 'W';
    indexforfill = index;
    var currentrowoftcpi = ConItemList.slice(index);
    var CPlan = currentrowoftcpi[0].CPlanSlNo;
    var quantity = currentrowoftcpi[0].Prdn_Qty;
    var len = currentrowoftcpi[0].Length;
    var gsm = currentrowoftcpi[0].GSM;
    var Colorid = currentrowoftcpi[0].ColorID;
    var Sizeid = currentrowoftcpi[0].SizeId;
    var Sno = currentrowoftcpi[0].CompSlNo;

    $.each(ConItemList, function () {
        if (this.CPlanSlNo == CPlan) {
            this.Width = Width;

        }
    });

    loadAdConTable(ConItemList);


    $.each(ConItemListSave, function () {
        if (this.CPlanSlNo == CPlan) {
            this.Width = Width;

        }
    });
    loadconSaveTable(ConItemListSave);


    var res = len * Width * gsm / 1000;
    Wght = quantity * res / 1000;

    var finalresult = res.toFixed(3);
    var finalwgt = Wght.toFixed(3);

    $.each(ConItemList, function () {
        if (this.CPlanSlNo == CPlan) {

            this.GSM = gsm;
            this.Grammage = finalresult;
            this.Weight = finalwgt;
        }
    });

    loadAdConTable(ConItemList);

    $.each(ConItemListSave, function () {
        if (this.CPlanSlNo == CPlan) {

            this.GSM = gsm;
            this.Grammage = finalresult;
            this.Weight = finalwgt;
        }
    });

    loadconSaveTable(ConItemListSave);

    if (Colorid > 0 && Sizeid > 0) {
        $.each(PlanCompFabricDet, function () {
            if (this.ColorID == Colorid && this.SizeId == Sizeid && this.CompSlNo == Sno) {
                this.Weight = finalwgt;
                this.ActWeight = finalwgt;
                this.BColorPQty = 0;
                this.FColorPQty = 0;
            }
        });

        //loadCompFabTable(PlanCompFabricDet);
        fillfabrictbl(PlanCompFabricDet);

        $.each(PlanCompFabricDetSave, function () {
            if (this.ColorID == Colorid && this.SizeId == Sizeid && this.CompSlNo == Sno) {
                this.Weight = finalwgt;
                this.ActWeight = finalwgt;
                this.BColorPQty = 0;
                this.FColorPQty = 0;
            }
        });
        loadCompFabSaveTable(PlanCompFabricDetSave);
    }
    else if (Colorid > 0 && Sizeid == 0) {
        $.each(PlanCompFabricDet, function () {
            if (this.ColorID == Colorid && this.CompSlNo == Sno) {
                this.Weight = finalwgt;
                this.ActWeight = finalwgt;
                this.BColorPQty = 0;
                this.FColorPQty = 0;
            }
        });

        //loadCompFabTable(PlanCompFabricDet);
        fillfabrictbl(PlanCompFabricDet);

        $.each(PlanCompFabricDetSave, function () {
            if (this.ColorID == Colorid && this.CompSlNo == Sno) {
                this.Weight = finalwgt;
                this.ActWeight = finalwgt;
                this.BColorPQty = 0;
                this.FColorPQty = 0;
            }
        });
        loadCompFabSaveTable(PlanCompFabricDetSave);
    }
    else if (Colorid == 0 && Sizeid > 0) {
        $.each(PlanCompFabricDet, function () {
            if (this.SizeId == Sizeid && this.CompSlNo == Sno) {
                this.Weight = finalwgt;
                this.ActWeight = finalwgt;
                this.BColorPQty = 0;
                this.FColorPQty = 0;
            }
        });

        // loadCompFabTable(PlanCompFabricDet);
        fillfabrictbl(PlanCompFabricDet);

        $.each(PlanCompFabricDetSave, function () {
            if (this.SizeId == Sizeid && this.CompSlNo == Sno) {
                this.Weight = finalwgt;
                this.ActWeight = finalwgt;
                this.BColorPQty = 0;
                this.FColorPQty = 0;
            }
        });
        loadCompFabSaveTable(PlanCompFabricDetSave);
    }
}

function ChkGrp() {
    debugger;
    var gr = $('#ddlType').val();
    if (gr == 'P' || gr == 'W') {
        $('#txtGsm').val(0);
        $("#txtGsm").attr("disabled", "disabled");
    }
    else {
        $("#txtGsm").removeAttr("disabled");
    }
}

function calcgsm(Val) {
    CGsm = Val;
    fillvar = 'GS';
    indexforfill = index;
    index;
    var currentrowoftcpi = ConItemList.slice(index);

    var quantity = currentrowoftcpi[0].Prdn_Qty;
    var CPlan = currentrowoftcpi[0].CPlanSlNo;
    var sno = currentrowoftcpi[0].CompSlNo;
    var len = currentrowoftcpi[0].Length;
    var wid = currentrowoftcpi[0].Width;
    var Colorid = currentrowoftcpi[0].ColorID;
    var Sizeid = currentrowoftcpi[0].SizeId;

    var IQty = 0;
    if (Val == 0) {
        IQty = 0;
    }
    else {
        IQty = Val;
    }

    var field = Val;
    if (!field.match(/^[\-\+]?[\d\,]*\.?[\d]*$/)) {
        $.each(ConItemList, function () {
            if (this.CPlanSlNo == CPlan) {
                this.Grammage = 0;
            }
        });
        loadAdConTable(ConItemList);
        return false;
    }



    var ratecal = Val;
    var res = len * wid * CGsm / 1000;
    Wght = quantity * res / 1000;

    finalresult = res.toFixed(3);
    $.each(ConItemList, function () {
        if (this.CPlanSlNo == CPlan) {
            this.Length = len;
            this.Width = wid;
            this.GSM = CGsm;
            this.Grammage = finalresult;
            this.Weight = Wght;
        }
    });

    loadAdConTable(ConItemList);


    $.each(ConItemListSave, function () {
        if (this.CPlanSlNo == CPlan) {
            this.Length = len;
            this.Width = wid;
            this.GSM = CGsm;
            this.Grammage = finalresult;
            this.Weight = Wght;
        }
    });
    loadconSaveTable(ConItemListSave);


    if (Colorid == 0 && Sizeid == 0) {
        Calcavgfab(Val, res, sno);
        return true;
    }

    //if (Mod == 1) {


    //    $.each(ConItemList, function () {
    //        if (this.CPlanSlNo == CPlan && this.CompSlNo == sno) {
    //            this.Length = Len;
    //            this.Width = Width;
    //            this.GSM = CGsm;
    //            this.Grammage = finalresult;
    //            this.Weight = Wght;
    //        }
    //    });
    //}
}

function calcgramm(Val) {


    fillvar = 'GRM';
    index;
    indexforfill = index;
    var currentrowoftcpi = ConItemList.slice(index);
    var quantity = currentrowoftcpi[0].Prdn_Qty;
    var CPlan = currentrowoftcpi[0].CPlanSlNo;
    var Sno = currentrowoftcpi[0].CompSlNo;
    var Colorid = currentrowoftcpi[0].ColorID;
    var Sizeid = currentrowoftcpi[0].SizeId;
    //var fd = currentrow[0].FabricID;

    var IQty = 0;
    if (Val == 0) {
        IQty = 0;
    }
    else {
        IQty = Val;
    }

    var field = Val;
    if (!field.match(/^[\-\+]?[\d\,]*\.?[\d]*$/)) {
        $.each(ConItemList, function () {
            if (this.CPlanSlNo == CPlan && this.CompSlNo == Sno) {
                this.Grammage = 0;
                this.Weight = 0;
            }
        });
        loadAdConTable(ConItemList);
        return false;
    }



    var ratecal = Val;
    var res = quantity * ratecal / 1000;
    finalresult = res.toFixed(3);
    res = res.toFixed(3);
    $.each(ConItemList, function () {
        if (this.CPlanSlNo == CPlan && this.CompSlNo == Sno) {
            this.Grammage = ratecal;
            this.Weight = res;
        }
    });

    loadAdConTable(ConItemList);
    //


    $.each(ConItemListSave, function () {
        if (this.CPlanSlNo == CPlan && this.CompSlNo == Sno) {
            this.Grammage = ratecal;
            this.Weight = res;
        }
    });
    loadconSaveTable(ConItemListSave);

    //$("#tCPIbody tr").click(function () {
    //    // alert(this.rowIndex - 1);
    //    indexforfill = (this.rowIndex - 1);
    //});

    if (Colorid == 0 && Sizeid == 0) {
        Calcavgfab(Val, res, Sno);
        return true;
    }
    var fd = 0;
    var s = 0;
    $.each(PlanCompFabricDet, function () {
        if (this.ColorID == Colorid && this.SizeId == Sizeid && this.CompSlNo == Sno) {
            this.Weight = res;
            this.ActWeight = res;
            this.BColorPQty = 0;
            this.FColorPQty = 0;
            this.Grammage = ratecal;
            fd = this.FabricID;
            s = this.CompSlNo;
        }
    });

    // loadCompFabTable(PlanCompFabricDet);
    fillfabrictbl(PlanCompFabricDet);

    var bclrid = 0;
    var bclr = '';
    $.each(PlanCompFabricDetSave, function () {
        if (this.ColorID == Colorid && this.SizeId == Sizeid && this.CompSlNo == Sno) {
            this.Weight = res;
            this.ActWeight = res;
            this.BColorPQty = 0;
            this.FColorPQty = 0;
            this.Grammage = ratecal;
            bclrid = this.BColorID;
            bclr = this.Bcolor;
        }
    });
    loadCompFabSaveTable(PlanCompFabricDetSave);



    //yarn


    var totalamnt = 0;
    for (var e = 0; e < PlanCompFabricDet.length; e++) {
        if (PlanCompFabricDet[e].CompSlNo == Sno && PlanCompFabricDet[e].Bcolor == bclr) {
            var amount = PlanCompFabricDet[e].Weight;
            totalamnt = totalamnt + parseFloat(amount);
        }
    }

    totalamnt = totalamnt.toFixed(3);
    for (var e = 0; e < PlanYarnSave.length; e++) {
        if (PlanYarnSave[e].SlNo == Sno && PlanYarnSave[e].BColor == bclr) {
            PlanYarnSave[e].Fabric_Weight = totalamnt;
        }
    }
    loadYarnSavedetTab(PlanYarnSave);


    for (var e = 0; e < PlanYarn.length; e++) {
        if (PlanYarn[e].SlNo == Sno && PlanYarn[e].BColor == bclr) {
            PlanYarn[e].Fabric_Weight = totalamnt;
        }
    }
    loadYarndetTab(PlanYarn);

    totwght();

    //Yarndet

    if (PlanYarnDetSave.length > 0) {
        PlanYarnDetSave = $.grep(PlanYarnDetSave, function (e) {
            return e.CompSno != Sno;
        });
        LoadsepSaveyarn(PlanYarnDetSave);

        PlanYarnDet = $.grep(PlanYarnDet, function (e) {
            return e.CompSno != Sno;
        });
        Loadsepyarn(PlanYarnDet);
    }

    //var result = [];
    //$.each(PlanCompFabricDet, function (i, e) {
    //    var matchingItems = $.grep(result, function (item) {
    //        return item.BColorID === e.BColorID;
    //    });
    //    if (matchingItems.length === 0) {
    //        result.push(e);
    //    }
    //});

    //if (result.length > 0) {
    //    //PlanYarnSave = [];

    //    PlanYarnSave = jQuery.grep(PlanYarnSave, function (value) {
    //        return value.FabricID != fd;
    //    });

    //    var Cs = result[0].CompSlNo;
    //    var ComponentId = 0;
    //    var Component = '';
    //    for (var t = 0; t < compList.length; t++) {
    //        if (compList[t].CompSlNo == Cs) {
    //            ComponentId = compList[t].ComponentID;
    //            Component = compList[t].ComponentName;
    //        }
    //    }

    //    //result = jQuery.grep(result, function (value) {
    //    //    return value.Weight == 0;
    //    //});
    //    for (var j = 0; j < result.length; j++) {


    //        if (PlanYarnSave.length == 0) {
    //            leng = 1;

    //        }
    //        else {
    //            leng = PlanYarnSave.length + 1;

    //        }

    //        var bd = result[j].BColorID;
    //        var snumb = result[j].snumb;
    //        var csln = result[j].CompSlNo;
    //        var totalqty = 0;
    //        for (var w = 0; w < PlanCompFabricDetSave.length; w++) {
    //            if (PlanCompFabricDetSave[w].BColorID == bd && PlanCompFabricDetSave[w].CompSlNo == csln) {

    //                var qty = PlanCompFabricDetSave[w].Weight;
    //                totalqty = totalqty + parseFloat(qty);
    //            }
    //        }




    //        var yarnlistobj = {
    //            PlanId: 0,
    //            Fabric: result[j].Fabric,
    //            FabricID: result[j].FabricID,
    //            Fabric_ColorId: result[j].BColorID,
    //            Fabric_Weight: totalqty,
    //            Fabric_type: result[j].FabricType,
    //            EntryDate: new Date($('#txtEntryDate').val()),
    //            BColor: result[j].Bcolor,
    //            SlNo: result[j].CompSlNo,
    //            YPlanmasID: 0,
    //            YSlno: leng,
    //            ComponentId: ComponentId,
    //            Component: Component
    //        }



    //        PlanYarnSave.push(yarnlistobj);
    //    }
    //}

    ////loadYarndetTab
    //PlanYarnSave = jQuery.grep(PlanYarnSave, function (value) {
    //    return value.Fabric_Weight != 0;
    //});
    //loadYarnSavedetTab(PlanYarnSave);

    //var ctry = [];
    //ctry = PlanYarnSave;
    //ctry = $.grep(ctry, function (e) {
    //    if (e.SlNo == s) {
    //        return e;
    //    }
    //});
    //PlanYarn = ctry;

    //loadYarndetTab(PlanYarn);
}


function loadFabricLossTable(list) {
    //$('#tblcompfabricloss').DataTable().destroy();

    var inputcount = 0;
    $('#tblcompfabricloss tr').each(function () {
        inputcount++;
    });

    if (inputcount > 0) {
        $('#tblcompfabricloss').DataTable().destroy();
    }
    $('#tblcompfabricloss').empty();
    $('#tblcompfabricloss').DataTable({
        data: list,
        scrollY: 300,
        scrollCollapse: true,
        paging: false,
        fixedColumns: false,
        select: false,
        scrollX: "100%",
        scrollXInner: "100%",
        scroller: false,
        "bSort": false,
        columns: [
            { title: "FLPlanID", data: "FLPlanID", "visible": false },
            { title: "ProcessID", data: "ProcessId", "visible": false },
            { title: "Process", data: "ProcessName" },
            { title: "Loss%", data: "Loss_Per" },
            { title: "Sl No", data: "SlNo", "visible": false },
            { title: "Comp SNo", data: "CompSNo", "visible": false },
             { title: "FPlanId", data: "FPlanId", "visible": false },
                 { title: "FLGColorID", data: "FLGColorID", "visible": false },
               {
                   title: "ACTION", "mDataProp": null,
                   "sDefaultContent": '<button type="button" data-toggle="tooltip" data-placement="top" title="Edit" style="width: 20px;padding: 0px;height: 20px;border-radius:10px;" class="btncompLossedit btn btn-round btn-warning"> <i class="fa fa-pencil-square-o"></i> </button> <button type="button" data-toggle="tooltip" data-placement="top" title="Remove" style="width: 20px;padding: 0px;height: 20px;border-radius:10px;" class="btncompLossremove btn btn-round btn-danger"> <i class="fa fa-times"></i> </button>'
                   //"sDefaultContent": '<button type="button" class="btncompLossedit"> Edit </button> <button type="button" class="btncompLossremove"> Remove </button>'
               }
        ]
    });

    var totalamnt = 0;
    for (var e = 0; e < PlanLossSave.length; e++) {
        if (PlanLossSave[e].CompSNo == fcompno) {
            var amount = PlanLossSave[e].Loss_Per;
            totalamnt = totalamnt + parseFloat(amount);
        }
    }
    $('#txttotfabloss').val(totalamnt);
}

function loadFabricLossSaveTable(list) {
    $('#tblcompfabriclossSave').DataTable().destroy();

    $('#tblcompfabriclossSave').DataTable({
        data: list,
        scrollY: 300,
        scrollCollapse: true,
        paging: false,
        fixedColumns: false,
        select: false,
        scrollX: "100%",
        scrollXInner: "100%",
        scroller: false,
        "bSort": false,
        columns: [
            { title: "FLPlanID", data: "FLPlanID" },
            { title: "ProcessID", data: "ProcessId" },
            { title: "Process", data: "ProcessName" },
            { title: "Loss%", data: "Loss_Per" },
            { title: "Sl No", data: "SlNo" },
            { title: "Comp SNo", data: "CompSNo" },
             { title: "FPlanId", data: "FPlanId" },
             { title: "FLGColorID", data: "FLGColorID" },
        ]
    });
}


function Calcavgfab(Gram, val, sno) {

    index;

    var currentrowoftcpi = ConItemList.slice(index);
    var quantity = currentrowoftcpi[0].Prdn_Qty;
    var CPlan = currentrowoftcpi[0].CPlanSlNo;
    var Sno = currentrowoftcpi[0].CompSlNo;
    var Colorid = currentrowoftcpi[0].ColorID;
    var Sizeid = currentrowoftcpi[0].SizeId;

    var totprdqty = $('#txtProdQty').val();



    for (var d = 0; d < PlanCompFabricDet.length; d++) {
        var quan = PlanCompFabricDet[d].Prdn_Qty;
        var res = (val / totprdqty) * quan;
        res = res.toFixed(3);
        PlanCompFabricDet[d].Weight = res;
        PlanCompFabricDet[d].ActWeight = res;
        PlanCompFabricDet[d].Grammage = Gram;
    }
    // loadCompFabTable(PlanCompFabricDet);
    fillfabrictbl(PlanCompFabricDet);

    for (var d = 0; d < PlanCompFabricDetSave.length; d++) {
        if (PlanCompFabricDetSave[d].CompSlNo == sno) {
            var quan = PlanCompFabricDetSave[d].Prdn_Qty;
            var res = (val / totprdqty) * quan;
            res = res.toFixed(3);
            PlanCompFabricDetSave[d].Weight = res;
            PlanCompFabricDetSave[d].ActWeight = res;
            PlanCompFabricDetSave[d].Grammage = Gram;
        }
    }
    loadCompFabSaveTable(PlanCompFabricDetSave);

    //yarn
    var bclr = '';
    var totalamnt = 0;
    for (var e = 0; e < PlanCompFabricDet.length; e++) {
        if (PlanCompFabricDet[e].CompSlNo == Sno) {
            var amount = PlanCompFabricDet[e].Weight;
            totalamnt = totalamnt + parseFloat(amount);
        }
    }

    totalamnt = totalamnt.toFixed(3);
    for (var e = 0; e < PlanYarnSave.length; e++) {
        if (PlanYarnSave[e].SlNo == Sno) {
            PlanYarnSave[e].Fabric_Weight = totalamnt;
        }
    }
    loadYarnSavedetTab(PlanYarnSave);


    for (var e = 0; e < PlanYarn.length; e++) {
        if (PlanYarn[e].SlNo == Sno) {
            PlanYarn[e].Fabric_Weight = totalamnt;
        }
    }
    loadYarndetTab(PlanYarn);
}
function Update() {

    debugger;


    if (Mod == 1) {
        var FYmode = "A";
    }

    if (compList.length == 0) {

        //alert("Please Check Component Details..");
        var msg = "Please Check Component Details...";
        var flg = 4;
        var mo = 1;
        AlartMessage(msg, flg, mo);
        return true;
    }



    if (ConItemList.length == 0) {

        //alert("Please Enter the Consumption Details..");
        var msg = "Please Enter the Consumption Details...";
        var flg = 4;
        var mo = 1;
        AlartMessage(msg, flg, mo);
        return true;
    }

    var tot = [];
    for (var d = 0; d < ConItemList.length; d++) {
        if (ConItemList[d].GreyWidthID == 0) {
            tot.push(ConItemList[d]);
        }
    }

    if (tot.length > 0) {
        //alert('Please choose greywidth...');
        var msg = "Please choose greywidth...";
        var flg = 4;
        var mo = 1;
        AlartMessage(msg, flg, mo);
        return true;
    }

    var det = [];
    if (PlanYarnSave.length > 0) {
        if (PlanYarnDetSave.length == 0) {
            //alert("Please Enter the Yarn Details..");
            var msg = "Please Enter the Yarn Details...";
            var flg = 4;
            var mo = 1;
            AlartMessage(msg, flg, mo);
            return true;
        }
        var c = 0;
        for (var e = 0; e < PlanYarnSave.length; e++) {
            c = PlanYarnSave[e].SlNo;
            var totalper = 0;
            for (var f = 0; f < PlanYarnDetSave.length; f++) {
                if (PlanYarnDetSave[f].CompSno == c) {
                    var per = PlanYarnDetSave[f].Knit_In_Per;
                    totalper = totalper + parseFloat(per);
                }

            }
            if (totalper < 100) {
                //alert('Separate weight should not be less than 100');
                var msg = "Separate weight should not be less than 100...";
                var flg = 4;
                var mo = 1;
                AlartMessage(msg, flg, mo);
                return true;
            }
        }

        var r = 0;
        for (var e = 0; e < PlanYarnSave.length; e++) {
            r = PlanYarnSave[e].SlNo;
            var data = $.grep(PlanYarnDetSave, function (e) {
                return e.CompSno == r;
            });

            if (data.length == 0) {
                //alert('Yarn must be filled for all fabric...');
                var msg = "Yarn must be filled for all fabric...";
                var flg = 4;
                var mo = 1;
                AlartMessage(msg, flg, mo);
                return true;
            }
        }

        //Total Fabric weight
        var totalpqt = 0;
        for (var e = 0; e < PlanYarnSave.length; e++) {
            var pcs = PlanYarnSave[e].Fabric_Weight;
            totalpqt = totalpqt + parseFloat(pcs);

        }
        var TFWeight = (totalpqt.toFixed(1));


        //Total Yarn weight
        var totalypqt = 0;
        for (var e = 0; e < PlanYarnDetSave.length; e++) {
            var ypcs = PlanYarnDetSave[e].Knit_In_ActQty;
            totalypqt = totalypqt + parseFloat(ypcs);

        }
        var TYWeight = (totalypqt.toFixed(1));


        if (parseFloat(TYWeight) != parseFloat(TFWeight)) {
            //alert("Please Check the Total Fabric Weight and Total Yarn Weight for all Panels..");\
            var msg = "Please Check the Total Fabric Weight and Total Yarn Weight for all Panels...";
            var flg = 4;
            var mo = 1;
            AlartMessage(msg, flg, mo);
            return true;
        }


        //Total Yarn weight for yarn dyeing and yarn details check
        if (PlanYarnDyeingSave.length > 0) {
            var totalypdqt = 0;
            for (var e = 0; e < PlanYarnDetSave.length; e++) {

                if (PlanYarnDetSave[e].Dyeing_Req == true || PlanYarnDetSave[e].Dyeing_Req == 1) {
                    var ydpcs = PlanYarnDetSave[e].Knit_In_ActQty;
                    totalypdqt = totalypdqt + parseFloat(ydpcs);
                }
            }
            var TYDWeight = (totalypdqt.toFixed(1));

            var totalypddqt = 0;
            for (var e = 0; e < PlanYarnDyeingSave.length; e++) {


                var yddpcs = PlanYarnDyeingSave[e].Weight;
                totalypddqt = totalypddqt + parseFloat(yddpcs);

            }
            var TYDDWeight = (totalypddqt.toFixed(1));


            if (parseFloat(TYDDWeight) != parseFloat(TYDWeight)) {
                //alert("Please Check the Total Yarn Weight and Total Yarn dyeing Weight for all Dyed Yarn..");
                var msg = "Please Check the Total Yarn Weight and Total Yarn dyeing Weight for all Dyed Yarn...";
                var flg = 4;
                var mo = 1;
                AlartMessage(msg, flg, mo);
                return true;
            }
        }
        //
    }
    else {
        for (var e = 0; e < compList.length; e++) {
            var cs = compList[e].CompSlNo;
            var totalamnt = 0;
            for (var v = 0; v < PlanCompFabricDetSave.length; v++) {
                if (PlanCompFabricDetSave[v].CompSlNo == cs) {

                    var amount = parseFloat(PlanCompFabricDetSave[v].BColorPQty) + parseFloat(PlanCompFabricDetSave[v].FColorPQty);
                    totalamnt = totalamnt + parseFloat(amount);
                }
            }
            totalamnt = totalamnt.toFixed(3);
            var totam = 0;
            for (var l = 0; l < PlanCompFabricDetSave.length; l++) {
                if (PlanCompFabricDetSave[l].CompSlNo == cs) {
                    var at = PlanCompFabricDetSave[l].Weight;
                    totam = totam + parseFloat(at);
                }

            }
            totam = totam.toFixed(3);
            var tot = $('#txttotwt').val();
            if (totalamnt == totam) {

            }
            else {
                det.push(cs);
            }
        }

        if (det != 0) {
            //alert('Yarn must be filled...');\
            var msg = "Yarn must be filled...";
            var flg = 4;
            var mo = 1;
            AlartMessage(msg, flg, mo);
            return true;
        }
    }


    if (PlanYarnDyeingSave.length > 0) {
        //for (var u = 0; u < PlanYarnDetSave.length; u++) {
        //    var cl = PlanYarnDetSave[u].CompSno;
        //    var so = PlanYarnDetSave[u].SlNo;
        for (var h = 0; h < PlanYarnDyeingSave.length; h++) {
            var nm = 0;
            var gar = PlanYarnDyeingSave[h].Garment_ColorID;
            var yl = PlanYarnDyeingSave[h].YDSlNo;
            var cn = PlanYarnDyeingSave[h].CompSlNo;
            var totalamnt = 0;

            for (var g = 0; g < PlanYarnDyeingSave.length; g++) {
                nm = 1;
                if (PlanYarnDyeingSave[g].YDSlNo == yl && PlanYarnDyeingSave[g].CompSlNo == cn && PlanYarnDyeingSave[g].Garment_ColorID == gar) {
                    var amount = PlanYarnDyeingSave[g].Qty_Per;
                    totalamnt = totalamnt + parseFloat(amount);
                }
            }
            if (totalamnt == 100) {

            }
            else if (totalamnt == 0 && nm == 1) {
                //alert('Fill all the percentage');
                var msg = "Fill all the percentage...";
                var flg = 4;
                var mo = 1;
                AlartMessage(msg, flg, mo);
                return true;
            }
            else if (totalamnt < 100) {
                //alert('Percentage should not be less than 100...');
                var msg = "Percentage should not be less than 100...";
                var flg = 4;
                var mo = 1;
                AlartMessage(msg, flg, mo);
                return true;
            }
            else if (totalamnt > 100) {
                //alert('Percentage should not exceed 100..');
                var msg = "Percentage should not exceed 100...";
                var flg = 4;
                var mo = 1;
                AlartMessage(msg, flg, mo);
                return true;
            }
        }
        // }
    }

    var ptype = $('input[name="PAType"]:checked').attr('value');
    var objConSubmit = {

        CompanyID: $('#txtHCompanyId').val(),
        Order_No: $('#txtOrderNo').val(),
        ItemID: $('#txtHItemId').val(),
        Styleid: $('#txtHStyleId').val(),
        BMasID: $('#txtBuyOrdMasId').val(),
        EDate: $('#txtEntryDate').val(),//new Date($('#txtEntryDate').val()),
        PrgThr: "W",
        PA: ptype,
        Mode: FYmode,
        PlanID: PLID,
        CreatedBy: Guserid,
        CompoItemMas: compList,
        CompoItemDetails: ConItemListSave,
        PlanFabricDet: PlanCompFabricDetSave,
        PlanLoss: PlanLossSave,
        PlanYarnN: PlanYarnSave,
        PlanYarnDet: PlanYarnDetSave,
        PlanYarnLoss: PlanYarnLossSave,
        PlanYarnDyeing: PlanYarnDyeingSave


    };
    $("#btnUpdate").attr("disabled", true);
    LoadingSymb();
    $.ajax({
        url: "/PlanningConsumption/Update",
        data: JSON.stringify(objConSubmit),
        type: "POST",
        contentType: "application/json;charset=utf-8",
        dataType: "json",
        success: function (result) {
            if (result.Value == true) {

                //alert("Data Updated Sucessfully");
                var msg = "Data Updated Sucessfully...";
                var flg = 1;
                var mo = 0;
                var url = "/PlanningAdd/PlanningAddIndex?StyleRowId=" + StyRowId + "&Mode=" + 1;
                AlartMessage(msg, flg, mo,url);

                StyRowId = StyleRId;
                //window.location.href = "/PlanningAdd/PlanningAddIndex?StyleRowId=" + StyRowId + "=&Mode=" + 1;
            } else {

                window.location.href = "/Error/Index";


            }
        },
        error: function (errormessage) {

            alert(errormessage.responseText);
        }
    });
}



function ConUpdate() {

    debugger;

    if (DispatchClosed == "N") {
        $('#ConUpdate').show();
    }
    else if (DispatchClosed == "Y") {
        $('#ConUpdate').hide();
    }

    if (DispatchClosed == 'Y') {
        //alert('Consumption Plan has been Locked,Please Contact Administrator..');
        var msg = "Despatch Closed.Please Check It...";
        var flg = 4;
        var mo = 1;
        AlartMessage(msg, flg, mo);
        return true;
    }

    if (PlanLock.length > 0) {
        if (PlanLock[0].LockConsumption == 'Y') {          
            //alert('Consumption Plan has been Locked,Please Contact Administrator..');
            var msg = "Consumption Plan has been Locked,Please Contact Administrator...";
            var flg = 4;
            var mo = 1;
            AlartMessage(msg, flg, mo);
            return true;
        }
    }


    var isValid = true;
    var conupflag = 0;
    if (Mod == 1) {
        var FYmode = "A";
    }

    if (compList.length == 0) {

        //alert("Please Check Component Details..");
        var msg = "Please Check Component Details...";
        var flg = 4;
        var mo = 1;
        AlartMessage(msg, flg, mo);
        return true;
    }

    if (ConItemList.length == 0) {

        //alert("Please Enter the Consumption Details..");
        var msg = "Please Enter the Consumption Details...";
        var flg = 4;
        var mo = 1;
        AlartMessage(msg, flg, mo);
        return true;
    }

    var tot = [];
    for (var d = 0; d < ConItemList.length; d++) {
        if (ConItemList[d].GreyWidthID == 0) {
            tot.push(ConItemList[d]);
        }
    }

    if (tot.length > 0) {
        //alert('Please choose greywidth...');
        var msg = "Please choose greywidth...";
        var flg = 4;
        var mo = 1;
        AlartMessage(msg, flg, mo);
        return true;
    }

    //$.each(PlanYarnPurchase, function (i) {
    //    var fabwgt = 0;
    //    var cnt = 0;
    //    if (PlanYarnPurchase[i].Quantity > 0) {
    //    $.each(compList, function (k) {
    //        if (compList[k].FabricID == PlanYarnPurchase[i].FabricId) {
    //            $.each(ConItemListSave, function (l) {
    //                if (ConItemListSave[l].CompSlNo == compList[k].CompSlNo) {

    //                    fabwgt = fabwgt + parseFloat(ConItemListSave[l].Weight);
    //                }

    //            });
    //            cnt++;
    //        }

    //    });

    //          if (cnt == 0) {
    //              alert('Please Check Fabric Details and Yarn Details..');
    //              isValid = false;
    //              return true;
    //          }
    //          else if (parseFloat(fabwgt).toFixed(3) < parseFloat(PlanYarnPurchase[i].Quantity).toFixed(3)) {

    //            var purwgt = PlanYarnPurchase[i].Quantity;
    //            var fab = PlanYarnPurchase[i].fabric
    //            alert('Please Check Fabric -Yarn Purchase Weight- ' + fab);
    //            isValid = false;
    //            return true;
    //        }
    //    }


    //});

    $.each(PlanFabricDC, function (i) {
        var fabwgt = 0;
        var cnt = 0;
        if (PlanFabricDC[i].Quantity > 0) {
            $.each(compList, function (k) {
                if (compList[k].FabricID == PlanFabricDC[i].FabricId) {
                    $.each(ConItemListSave, function (l) {
                        if (ConItemListSave[l].CompSlNo == compList[k].CompSlNo && ConItemListSave[l].GreyWidthID == PlanFabricDC[i].FabricSizeid) {

                            fabwgt = fabwgt + parseFloat(ConItemListSave[l].Weight);
                        }

                    });
                    cnt++;
                }

            });

            if (cnt == 0) {
                //alert('Please Check Fabric Details and DC Details..');
                var msg = "Please Check Fabric Details and DC Details...";
                var flg = 4;
                var mo = 1;
                AlartMessage(msg, flg, mo);
                isValid = false;
                return true;
            }
            else {
                var fa = 0;
                var dd = 0;
                 fa=parseFloat(fabwgt).toFixed(3);
                 dd = parseFloat(PlanFabricDC[i].Quantity);
                if (fa < dd) {

                    var purwgt = PlanFabricDC[i].Quantity;
                    var fab = PlanFabricDC[i].fabric;
                    var grey = PlanFabricDC[i].FabricSize;
                    //alert('Please Check Fabric -Process DC Qty Details- ' + fab + ',' + grey + '-' + purwgt);
                    var msg = 'Please Check Fabric -Process DC Qty Details- ' + fab + ',' + grey + '-' + purwgt;
                    var flg = 4;
                    var mo = 1;
                    AlartMessage(msg, flg, mo);
                    isValid = false;
                    return true;
                }

            } 
        }


    });

    //$.each(PlanFabPurchase, function (i) {
    //    var fabwgt = 0;
    //    var cnt = 0;
    //    if (PlanFabPurchase[i].Quantity > 0 && PlanFabPurchase[i].PurType == "B") {
    //        $.each(compList, function (k) {
    //            if (compList[k].FabricID == PlanFabPurchase[i].FabricId) {
    //                $.each(ConItemListSave, function (l) {
    //                    if (ConItemListSave[l].CompSlNo == compList[k].CompSlNo && ConItemListSave[l].GreyWidthID == PlanFabPurchase[i].FabricSizeid ) {

    //                        fabwgt = fabwgt + parseFloat(ConItemListSave[l].Weight);
    //                        cnt++;
    //                    }

    //                });
                   
    //            }

    //        });

    //        if (cnt == 0) {
    //            alert('Please Check BaseColor Fabric Purchase Details ..');
    //            isValid = false;
    //            return true;
    //        }
    //        else if (parseFloat(fabwgt).toFixed(3) < parseFloat(PlanYarnPurchase[i].Quantity).toFixed(3)) {

    //            var purwgt = PlanYarnPurchase[i].Quantity;
    //            var fab = PlanYarnPurchase[i].fabric
    //            alert('Please Check BaseColor Fabric Purchase Weight- ' + fab);
    //            isValid = false;
    //            return true;
    //        }
    //    }


    //    if (PlanFabPurchase[i].Quantity > 0 && PlanFabPurchase[i].PurType == "F") {
    //        $.each(compList, function (k) {
    //            if (compList[k].FabricID == PlanFabPurchase[i].FabricId) {
    //                $.each(ConItemListSave, function (l) {
    //                    if (ConItemListSave[l].CompSlNo == compList[k].CompSlNo && ConItemListSave[l].FinishWidthID == PlanFabPurchase[i].FabricSizeid) {

    //                        fabwgt = fabwgt + parseFloat(ConItemListSave[l].Weight);
    //                        cnt++;
    //                    }

    //                });

    //            }

    //        });

    //        if (cnt == 0) {
    //            alert('Please Check Finish Fabric Purchase Details ..');
    //            isValid = false;
    //            return true;
    //        }
    //        else if (parseFloat(fabwgt).toFixed(3) < parseFloat(PlanYarnPurchase[i].Quantity).toFixed(3)) {

    //            var purwgt = PlanYarnPurchase[i].Quantity;
    //            var fab = PlanYarnPurchase[i].fabric
    //            alert('Please Check Base Fabric Purchase Weight- ' + fab);
    //            isValid = false;
    //            return true;
    //        }
    //    }

    //});


    var ptype = $('input[name="PAType"]:checked').attr('value');
    var objConSubmit = {

        CompanyID: $('#txtHCompanyId').val(),
        Order_No: $('#txtOrderNo').val(),
        ItemID: $('#txtHItemId').val(),
        Styleid: $('#txtHStyleId').val(),
        BMasID: $('#txtBuyOrdMasId').val(),
        EDate: $('#txtEntryDate').val(),//new Date($('#txtEntryDate').val()),
        PrgThr: "W",
        PA: ptype,
        Mode: FYmode,
        PlanID: PLID,
        CreatedBy: Guserid,
        CompoItemMas: compList,
        CompoItemDetails: ConItemListSave,
        //PlanFabricDet: PlanCompFabricDetSave,
        //PlanLoss: PlanLossSave,
        //PlanYarnN: PlanYarnSave,
        //PlanYarnDet: PlanYarnDetSave,
        //PlanYarnLoss: PlanYarnLossSave,
        //PlanYarnDyeing: PlanYarnDyeingSave


    };
    $("#ConUpdate").attr("disabled", true);
    $("#btnUpdate").attr("disabled", true);
    LoadingSymb();
    if (isValid) {
        $.ajax({
            url: "/PlanningConsumption/ConUpdate",
            data: JSON.stringify(objConSubmit),
            type: "POST",
            contentType: "application/json;charset=utf-8",
            dataType: "json",
            success: function (result) {
                if (result.Value == true) {
                    AddUserEntryLog('Planning', 'Component Details', 'UPDATE', $('#txtWorkOrderNo').val());
                    //alert("Consumption Updated Sucessfully");
                    var msg = 'Consumption Updated Sucessfully...';
                    var flg = 1;
                    var mo = 1;
                    AlartMessage(msg, flg, mo);

                    debugger;
                    //$('#profile-tab1').attr('style', 'background-color : #acf2c1');
                    //$('#profile-tab2').attr('style', 'background-color : #acf2c1');
                    //$('#Div1 a[href="#tab_content2"]').tab('show');

                    //$("#ConClose").attr("disabled", true);
                    //$("#FFClose").attr("disabled", true);
                    //$("#YClose").attr("disabled", true);
                    //$("#YarnUpdate").attr("disabled", true);
                    //if (conupflag == 1) {
                    LoadAmendstatus();
                    $('#ConAdd').hide();
                    $('#ConUpdate').show();
                    Mod == 1;

                    if (fcompno == 0) {
                        fcompno = 1;
                    } else {
                        fcompno == fcompno;
                    }
                    LoadPlanFabriComp(PLID);
                    EditCompFabricLossPlanList(PLID, fcompno);

                    // LoadPlanFabriCompDetails(PLID, fcompno);


                    // }

                    //StyRowId = StyleRId;
                    //window.location.href = "/PlanningAdd/PlanningAddIndex?StyleRowId=" + StyRowId + "=&Mode=" + 1;
                } else {

                    window.location.href = "/Error/Index";


                }
            },
            error: function (errormessage) {

                alert(errormessage.responseText);
            }

        });
    }
}


function FabUpdate() {


    if (DispatchClosed == 'Y') {
        //alert('Consumption Plan has been Locked,Please Contact Administrator..');
        var msg = "Despatch Closed.Please Check It...";
        var flg = 4;
        var mo = 1;
        AlartMessage(msg, flg, mo);
        return true;
    }

    if (PlanLock.length > 0) {     
        if (PlanLock[0].LockFabric == 'Y') {
            //alert('Fabric Plan has been Locked,Please Contact Administrator..');
            var msg = 'Fabric Plan has been Locked,Please Contact Administrator...';
            var flg = 4;
            var mo = 1;
            AlartMessage(msg, flg, mo);
            return true;
        }
    }


    var isValid = true;
    debugger;

     fabupflag = 0;
    if (Mod == 1) {
        var FYmode = "A";
    }


    $.each(PlanYarnPurchase, function (i) {
        var fabwgt = 0;
        var cnt = 0;
        if (PlanYarnPurchase[i].ORDQuantity > 0) {
            $.each(PlanCompFabricDetSave, function (k) {
                if (PlanCompFabricDetSave[k].FabricID == PlanYarnPurchase[i].FabricId ) {
                    var wt = parseFloat(PlanCompFabricDetSave[k].Weight) - parseFloat(PlanCompFabricDetSave[k].BColorPQty) - parseFloat(PlanCompFabricDetSave[k].FColorPQty);
                    fabwgt = fabwgt + wt;
                    cnt++;
                }

            });

            if (cnt == 0) {
                alert('Please Check Fabric Details and Yarn Details..');
                isValid = false;
                return true;
            }
            else if (parseFloat(fabwgt).toFixed(3) < parseFloat(PlanYarnPurchase[i].ORDQuantity).toFixed(3)) {

                var purwgt = PlanYarnPurchase[i].ORDQuantity;
                var fab = PlanYarnPurchase[i].fabric
                alert('Please Check Fabric -Yarn Purchase Weight- ' + fab);
                isValid = false;
                return true;
            }
        }


    });

    $.each(PlanFabricDC, function (i) {
        var fabwgt = 0;
        var cnt = 0;
        if (PlanFabricDC[i].ORDQuantity > 0) {
            $.each(PlanCompFabricDetSave, function (k) {
                if (PlanCompFabricDetSave[k].FabricID == PlanFabricDC[i].FabricId) {
                    var wt = parseFloat(PlanCompFabricDetSave[k].Weight) ;
                    fabwgt = fabwgt + wt;
                    cnt++;
                }

            });

            if (cnt == 0) {
                alert('Please Check Fabric Details and DC Details..');
                isValid = false;
                return true;
            }
            else if (parseFloat(fabwgt).toFixed(3) < parseFloat(PlanFabricDC[i].ORDQuantity)) {

                var purwgt = PlanFabricDC[i].ORDQuantity;
                var fab = PlanFabricDC[i].fabric
                alert('Please Check Fabric -DC Weight- ' + fab);
                isValid = false;
                return true;
            }
        }


    });

    $.each(PlanFabPurchase, function (i) {
        var fabwgt = 0;
        var cnt = 0;
        if (PlanFabPurchase[i].ORDQuantity > 0 && PlanFabPurchase[i].PurType=="B") {
            $.each(PlanCompFabricDetSave, function (k) {
                if (PlanCompFabricDetSave[k].FabricID == PlanFabPurchase[i].FabricId && PlanCompFabricDetSave[k].BColorID == PlanFabPurchase[i].FabricColorid && PlanCompFabricDetSave[k].GreyWidthID == PlanFabPurchase[i].FabricSizeid) {
                    var wt = parseFloat(PlanCompFabricDetSave[k].BColorPQty);
                    fabwgt = fabwgt + wt;
                    cnt++;
                }

            });

            if (cnt == 0) {
                //alert('Please Check BaseFabric Purchase Details..');
                var msg = 'Please Check BaseFabric Purchase Details...';
                var flg = 4;
                var mo = 1;
                AlartMessage(msg, flg, mo);
                isValid = false;
                return true;
            }
            else if (parseFloat(fabwgt).toFixed(3) < parseFloat(PlanFabPurchase[i].ORDQuantity).toFixed(3)) {

                var purwgt = PlanFabPurchase[i].ORDQuantity;
                var fab = PlanFabPurchase[i].fabric
                //alert('Please Check BaseFabric Purchase Weight- ' + fab);
                var msg = 'Please Check BaseFabric Purchase Weight- ' + fab;
                var flg = 4;
                var mo = 1;
                AlartMessage(msg, flg, mo);
                isValid = false;
                return true;
            }
        }

        if (PlanFabPurchase[i].ORDQuantity > 0 && PlanFabPurchase[i].PurType == "F") {
            $.each(PlanCompFabricDetSave, function (k) {
                if (PlanCompFabricDetSave[k].FabricID == PlanFabPurchase[i].FabricId && PlanCompFabricDetSave[k].FColorID == PlanFabPurchase[i].FabricColorid && PlanCompFabricDetSave[k].FinishWidthID == PlanFabPurchase[i].FabricSizeid) {
                    var wt = parseFloat(PlanCompFabricDetSave[k].FColorPQty);
                    fabwgt = fabwgt + wt;
                    cnt++;
                }

            });

            if (cnt == 0) {
                //alert('Please Check FinishFabric Purchase Details..');
                var msg = 'Please Check FinishFabric Purchase Details...';
                var flg = 4;
                var mo = 1;
                AlartMessage(msg, flg, mo);
                isValid = false;
                return true;
            }
            else if (parseFloat(fabwgt).toFixed(3) < parseFloat(PlanFabPurchase[i].ORDQuantity).toFixed(3)) {

                var purwgt = PlanFabPurchase[i].ORDQuantity;
                var fab = PlanFabPurchase[i].fabric
                //alert('Please Check FinishFabric Purchase Weight- ' + fab);
                var msg = 'Please Check FinishFabric Purchase Weight- ' + fab;
                var flg = 4;
                var mo = 1;
                AlartMessage(msg, flg, mo);
                isValid = false;
                return true;
            }
        }



    });

    $.each(PlanYarnPOQTY, function (i) {
        var fabwgt = 0;
        var ynwgt = 0;
        var cnt = 0;
      
            $.each(PlanCompFabricDetSave, function (k) {
                    var wt = parseFloat(PlanCompFabricDetSave[k].Weight) - parseFloat(PlanCompFabricDetSave[k].BColorPQty) - parseFloat(PlanCompFabricDetSave[k].FColorPQty);
                    fabwgt = fabwgt + wt;
                  
            });


            $.each(PlanYarnPOQTY, function (k) {
                var wt = parseFloat(PlanYarnPOQTY[k].ORDQuantity);
                ynwgt = ynwgt + wt;

            });
            if (ynwgt > parseFloat(fabwgt).toFixed(3)) {
                //alert('Please Check Yarn PO weight and Fabric Weight..');
                var msg = 'Please Check Yarn PO weight and Fabric Weight...';
                var flg = 4;
                var mo = 1;
                AlartMessage(msg, flg, mo);
                isValid = false;
                return true;
            }

            //if (cnt == 0) {
            //    alert('Please Check Fabric Details and Yarn Details..');
            //    isValid = false;
            //    return true;
            //}
            //else if (parseFloat(fabwgt).toFixed(3) < parseFloat(PlanYarnPurchase[i].ORDQuantity).toFixed(3)) {

            //    var purwgt = PlanYarnPurchase[i].ORDQuantity;
            //    var fab = PlanYarnPurchase[i].fabric
            //    alert('Please Check Fabric -Yarn Purchase Weight- ' + fab);
            //    isValid = false;
            //    return true;
            //}
      


    });

    var ptype = $('input[name="PAType"]:checked').attr('value');
    var objConSubmit = {

        CompanyID: $('#txtHCompanyId').val(),
        Order_No: $('#txtOrderNo').val(),
        ItemID: $('#txtHItemId').val(),
        Styleid: $('#txtHStyleId').val(),
        BMasID: $('#txtBuyOrdMasId').val(),
        EDate: $('#txtEntryDate').val(),//new Date($('#txtEntryDate').val()),
        PrgThr: "W",
        PA: ptype,
        Mode: FYmode,
        PlanID: PLID,
        CreatedBy: Guserid,
        //CompoItemMas: compList,
        //CompoItemDetails: ConItemListSave,
        PlanFabricDet: PlanCompFabricDetSave,
        PlanLoss: PlanLossSave,
        //PlanYarnN: PlanYarnSave,
        //PlanYarnDet: PlanYarnDetSave,
        //PlanYarnLoss: PlanYarnLossSave,
        //PlanYarnDyeing: PlanYarnDyeingSave


    };
    $("#FabUpdate").attr("disabled", true);
    LoadingSymb();
    if (isValid) {
        $.ajax({
            url: "/PlanningConsumption/FabUpdate",
            data: JSON.stringify(objConSubmit),
            type: "POST",
            contentType: "application/json;charset=utf-8",
            dataType: "json",
            success: function (result) {
                if (result.Value == true) {
                    AddUserEntryLog('Planning', 'Fabric Details', 'UPDATE', $('#txtWorkOrderNo').val());
                    //alert("Fabric Updated Sucessfully");
                    //var msg = 'Fabric Updated Sucessfully...';
                    //var flg = 4;
                    //var mo = 1;
                    //AlartMessage(msg, flg, mo);
                    // $('#profile-tab1').attr('style', 'background-color : #F5F7FA');


                    EditCompFabricLossPlanList(PLID, fcompno);
                    //LoadPlanFabric(PLID);
                    //ListYarnEditDetDetails(PLID);
                    $('#FabAdd').hide();
                    $('#FabUpdate').show();
                    //if (fabupflag == 1) {

                    //    $('#ConAdd').hide();
                    //    $('#ConUpdate').show();
                    Mod == 1;
                   // fabupflag = 1;
                    // }
                    //$('#Div1 a[href="#tab_content3"]').tab('show');
                    //LoadAmendstatus();

                    TransStage = '';
                    TransType = 'F';

                    LoadTransStock();

                    //if (ItemStockList.length > 0) {

                    //    var msg = "Fabric updated Sucessfully. Planned Fabric is available in Stock, Do you want to see the details?";
                    //    var flg = 6;
                    //    AlartMessage(msg, flg);
                    //} else {

                    //    //alert("Fabric Updated Sucessfully");
                    //    var msg = 'Fabric Updated Sucessfully...';
                    //    var flg = 4;
                    //    var mo = 1;
                    //    AlartMessage(msg, flg, mo);
                    //    $('#Div1 a[href="#tab_content3"]').tab('show');
                    //    LoadAmendstatus();

                    //}


                     
                    //$("#ConClose").attr("disabled", true);
                    //$("#FFClose").attr("disabled", true);
                    //$("#YClose").attr("disabled", true);
                    //$("#YarnUpdate").attr("disabled", false);
                    //StyRowId = StyleRId;
                    //window.location.href = "/PlanningAdd/PlanningAddIndex?StyleRowId=" + StyRowId + "=&Mode=" + 1;
                    //location.reload(true);
                } else {

                    window.location.href = "/Error/Index";


                }
            },
            error: function (errormessage) {

                alert(errormessage.responseText);
            }
        });
    }
}


function YarnUpdate() {

    debugger;
    if (DispatchClosed == 'Y') {
        //alert('Consumption Plan has been Locked,Please Contact Administrator..');
        var msg = "Despatch Closed.Please Check It...";
        var flg = 4;
        var mo = 1;
        AlartMessage(msg, flg, mo);
        return true;
    }

    if (PlanLock.length > 0) {
        if (PlanLock[0].LockYarn == 'Y') {
            //alert('Yarn Plan has been Locked,Please Contact Administrator..');
            var msg = 'Yarn Plan has been Locked,Please Contact Administrator...';
            var flg = 4;
            var mo = 1;
            AlartMessage(msg, flg, mo);
            return true;
        }
    }


    var isValid = true;
    var yarnupflag = 0;
    if (Mod == 1) {
        var FYmode = "A";
    }

    var det = [];
    if (PlanYarnSave.length > 0) {
        if (PlanYarnDetSave.length == 0) {
            //alert("Please Enter the Yarn Details..");
            var msg = 'Please Enter the Yarn Details...';
            var flg = 4;
            var mo = 1;
            AlartMessage(msg, flg, mo);
            return true;
        }
        var c = 0;
        for (var e = 0; e < PlanYarnSave.length; e++) {
            FD = PlanYarnSave[e].FabricID;
            FCD = PlanYarnSave[e].Fabric_ColorId;
            var totalper = 0;
            for (var f = 0; f < PlanYarnDetSave.length; f++) {
                if (PlanYarnDetSave[f].FabricID == FD && PlanYarnDetSave[f].BaseColorID == FCD) {
                    var per = PlanYarnDetSave[f].Knit_In_Per;
                    totalper = totalper + parseFloat(per);
                }

            }
            if (totalper < 100 ) {
                //alert('Separate weight should not be less than 100');
                var msg = 'Separate weight should not be less than 100...';
                var flg = 4;
                var mo = 1;
                AlartMessage(msg, flg, mo);
                return true;
            }
        }

        var r = 0;
        for (var e = 0; e < PlanYarnSave.length; e++) {
            // r = PlanYarnSave[e].SlNo;


            FD = PlanYarnSave[e].FabricID;
            FCD = PlanYarnSave[e].Fabric_ColorId;
            var data = $.grep(PlanYarnDetSave, function (e) {
                return e.FabricID == FD;
            });

            if (data.length == 0) {
                //alert('Yarn must be filled for all fabric...');
                var msg = 'Yarn must be filled for all fabric...';
                var flg = 4;
                var mo = 1;
                AlartMessage(msg, flg, mo);
                return true;
            }
        }

        ////Total Fabric weight
        //var totalpqt = 0;
        //for (var e = 0; e < PlanYarnSave.length; e++) {
        //    var pcs = PlanYarnSave[e].Fabric_Weight;
        //    totalpqt = totalpqt + parseFloat(pcs);

        //}
        //var TFWeight = (totalpqt.toFixed(2));


        ////Total Yarn weight
        //var totalypqt = 0;
        //for (var e = 0; e < PlanYarnDetSave.length; e++) {
        //    var ypcs = PlanYarnDetSave[e].Knit_In_ActQty;
        //    totalypqt = totalypqt + parseFloat(ypcs);

        //}
        //var TYWeight = (totalypqt.toFixed(2));


        //if (parseFloat(TYWeight) != parseFloat(TFWeight)) {
        //    //alert("Please Check the Total Fabric Weight and Total Yarn Weight for all Panels..");
        //    var msg = 'Please Check the Total Fabric Weight and Total Yarn Weight for all Panels...';
        //    var flg = 4;
        //    var mo = 1;
        //    AlartMessage(msg, flg, mo);
        //    return true;
        //}




        var totalfabqty = 0;

        for (var e = 0; e < PlanYarnSave.length; e++) {
            var pcs = PlanYarnSave[e].Fabric_Weight;
            totalfabqty = totalfabqty + parseFloat(pcs);

        }
        $('#txtfabqty').val(totalfabqty.toFixed(3));

        var totalyarn = 0;
        for (var e = 0; e < PlanYarnDetSave.length; e++) {
            var ypcs = PlanYarnDetSave[e].Knit_In_ActQty;
            totalyarn = totalyarn + parseFloat(ypcs);

        }
        $('#txtyarnqty').val(totalyarn.toFixed(3));


        var TFWeight = $('#txtfabqty').val()
        var TYWeight = $('#txtyarnqty').val()
        if (TYWeight != TFWeight) {
            //alert("Please Check the Total Fabric Weight and Total Yarn Weight for all Panels..");
            var msg = "Please Check the Total Fabric Weight and Total Yarn Weight for all Panels...";
            var flg = 4;
            var mo = 1;
            AlartMessage(msg, flg, mo);
            return true;
        }


        var YarnDyeingSave = [];
        for (i = 0; PlanYarnDetSave.length > i; i++) {
            if (PlanYarnDetSave[i].Dyeing_Req == true || PlanYarnDetSave[i].Dyeing_Req == 1) {
                for (j = 0; PlanYarnDyeingSave.length > j; j++) {
                    if (PlanYarnDetSave[i].SlNo == PlanYarnDyeingSave[j].YDSlNo) {
                        YarnDyeingSave.push(PlanYarnDyeingSave[j]);
                    }
                }
            }
        }
        PlanYarnDyeingSave = YarnDyeingSave;
        //Total Yarn weight for yarn dyeing and yarn details check
        if (PlanYarnDyeingSave.length > 0) {
            var totalypdqt = 0;
            for (var e = 0; e < PlanYarnDetSave.length; e++) {

                if (PlanYarnDetSave[e].Dyeing_Req == true || PlanYarnDetSave[e].Dyeing_Req == 1) {
                    var ydpcs = PlanYarnDetSave[e].Knit_In_ActQty;
                    totalypdqt = totalypdqt + parseFloat(ydpcs);
                }
            }
            var TYDWeight = (totalypdqt.toFixed(1));

            var totalypddqt = 0;
            for (var e = 0; e < PlanYarnDyeingSave.length; e++) {


                var yddpcs = PlanYarnDyeingSave[e].Weight;
                totalypddqt = totalypddqt + parseFloat(yddpcs);

            }
            var TYDDWeight = (totalypddqt.toFixed(1));


            if (Math.round(TYDDWeight) != Math.round(TYDWeight)) {
                //alert("Please Check the Total Yarn Weight and Total Yarn dyeing Weight for all Dyed Yarn..");
                var msg = 'Please Check the Total Yarn Weight and Total Yarn dyeing Weight for all Dyed Yarn...';
                var flg = 4;
                var mo = 1;
                AlartMessage(msg, flg, mo);
                return true;
            }
        }
        //
    }
    else {
        for (var e = 0; e < compList.length; e++) {
            var cs = compList[e].CompSlNo;
            var totalamnt = 0;
            for (var v = 0; v < PlanCompFabricDetSave.length; v++) {
                if (PlanCompFabricDetSave[v].CompSlNo == cs) {

                    var amount = parseFloat(PlanCompFabricDetSave[v].BColorPQty) + parseFloat(PlanCompFabricDetSave[v].FColorPQty);
                    totalamnt = totalamnt + parseFloat(amount);
                }
            }
            totalamnt = totalamnt.toFixed(3);
            var totam = 0;
            for (var l = 0; l < PlanCompFabricDetSave.length; l++) {
                if (PlanCompFabricDetSave[l].CompSlNo == cs) {
                    var at = PlanCompFabricDetSave[l].Weight;
                    totam = totam + parseFloat(at);
                }

            }
            totam = totam.toFixed(3);
            var tot = $('#txttotwt').val();
            if (totalamnt == totam) {

            }
            else {
                det.push(cs);
            }
        }

        if (det != 0) {
            //alert('Yarn must be filled...');
            var msg = 'Yarn must be filled...';
            var flg = 4;
            var mo = 1;
            AlartMessage(msg, flg, mo);
            return true;
        }
    }

    if (PlanYarnDyeingSave.length > 0) {
        //for (var u = 0; u < PlanYarnDetSave.length; u++) {
        //    var cl = PlanYarnDetSave[u].CompSno;
        //    var so = PlanYarnDetSave[u].SlNo;
        for (var h = 0; h < PlanYarnDyeingSave.length; h++) {
            var nm = 0;
            var gar = PlanYarnDyeingSave[h].Garment_ColorID;
            var yl = PlanYarnDyeingSave[h].YDSlNo;
            var cn = PlanYarnDyeingSave[h].CompSlNo;
            var totalamnt = 0;

            for (var g = 0; g < PlanYarnDyeingSave.length; g++) {
                nm = 1;
                if (PlanYarnDyeingSave[g].YDSlNo == yl && PlanYarnDyeingSave[g].CompSlNo == cn ) {
                //if (PlanYarnDyeingSave[g].YDSlNo == yl && PlanYarnDyeingSave[g].CompSlNo == cn && PlanYarnDyeingSave[g].Garment_ColorID == gar) {
                    var amount = PlanYarnDyeingSave[g].Qty_Per;
                    totalamnt = totalamnt + parseFloat(amount);
                }
            }
            
            totalamnt = parseFloat(totalamnt).toFixed(2);
            if (totalamnt == 100) {

            }
            else if (totalamnt == 0 && nm == 1) {
                //alert('Fill all the percentage');
                var msg = 'Fill all the percentage...';
                var flg = 4;
                var mo = 1;
                AlartMessage(msg, flg, mo);
                return true;
            }
            else if (totalamnt < 100) {
                //alert('Percentage should not be less than 100...');
                var msg = 'Percentage should not be less than 100...';
                var flg = 4;
                var mo = 1;
                AlartMessage(msg, flg, mo);
                return true;
            }
            else if (totalamnt > 100) {
                //alert('Percentage should not exceed 100..');
                //return true;
            }
        }
        // }
    }



    $.each(PlanYarnPOQTY, function (i) {
        var fabwgt = 0;
        var cnt = 0;
        if (PlanYarnPOQTY[i].ORDQuantity > 0) {
            $.each(PlanYarnDetSave, function (k) {
                if (PlanYarnDetSave[k].Knit_In_ItemId == PlanYarnPOQTY[i].FabricId && PlanYarnDetSave[k].Knit_in_ColorID == PlanYarnPOQTY[i].FabricColorid && PlanYarnDetSave[k].Knit_In_SizeID == PlanYarnPOQTY[i].FabricSizeid) {
                    var wt = parseFloat(PlanYarnDetSave[k].Knit_In_ActQty);
                    fabwgt = fabwgt + wt;
                    cnt++;
                }

            });

            if (cnt == 0) {
                //alert('Please Check Yarn PO Details -' + PlanYarnPOQTY[i].fabric, PlanYarnPOQTY[i].FabricColor, PlanYarnPOQTY[i].FabricSize +' Wgt-'+ PlanYarnPOQTY[i].ORDQuantity);
                var fabric = PlanYarnPOQTY[i].fabric;
                var FabricColor = PlanYarnPOQTY[i].FabricColor;
                var FabricSize = PlanYarnPOQTY[i].FabricSize;
                var ORDQuantity = PlanYarnPOQTY[i].ORDQuantity;
                var fb = fabric + ',' + FabricColor +','+ FabricSize;
                var msg = 'Please Check Yarn PO Details -' + fb + ' Wgt-' + ORDQuantity;
                var flg = 4;
                var mo = 1;
                AlartMessage(msg, flg, mo);
                isValid = false;
                return true;
            }
            else if (parseFloat(fabwgt).toFixed(3) < parseFloat(PlanYarnPOQTY[i].ORDQuantity)) {

                var purwgt = PlanYarnPOQTY[i].ORDQuantity;
                var fab = PlanYarnPOQTY[i].fabric
                //alert('Please Check Yarn PO Details -' + PlanYarnPOQTY[i].fabric, PlanYarnPOQTY[i].FabricColor, PlanYarnPOQTY[i].FabricSize + ' Wgt-' + PlanYarnPOQTY[i].ORDQuantity);
                var fabric = PlanYarnPOQTY[i].fabric;
                var FabricColor = PlanYarnPOQTY[i].FabricColor;
                var FabricSize = PlanYarnPOQTY[i].FabricSize;
                var ORDQuantity = PlanYarnPOQTY[i].ORDQuantity;
                var fb = fabric + ',' + FabricColor + ',' + FabricSize;
                var msg = 'Please Check Yarn PO Details -' + fb + ' Wgt-' + ORDQuantity;
                var flg = 4;
                var mo = 1;
                AlartMessage(msg, flg, mo);
                isValid = false;
                return true;
            }
        }


    });

    var ptype = $('input[name="PAType"]:checked').attr('value');
    var objYarnSubmit = {

        CompanyID: $('#txtHCompanyId').val(),
        Order_No: $('#txtOrderNo').val(),
        ItemID: $('#txtHItemId').val(),
        Styleid: $('#txtHStyleId').val(),
        BMasID: $('#txtBuyOrdMasId').val(),
        EDate: $('#txtEntryDate').val(),//new Date($('#txtEntryDate').val()),
        PrgThr: "W",
        PA: ptype,
        Mode: FYmode,
        PlanID: PLID,
        CreatedBy: Guserid,
        //CompoItemMas: compList,
        //CompoItemDetails: ConItemListSave,
        //PlanFabricDet: PlanCompFabricDetSave,
        //PlanLoss: PlanLossSave,
        PlanYarnN: PlanYarnSave,
        PlanYarnDet: PlanYarnDetSave,
        PlanYarnLoss: PlanYarnLossSave,
        PlanYarnDyeing: PlanYarnDyeingSave


    };
    //$("#FabUpdate").attr("disabled", true);
    if (isValid) {
        $("#YarnUpdate").attr("disabled", true);
        LoadingSymb();
        $.ajax({
            url: "/PlanningConsumption/YarnUpdate",
            data: JSON.stringify(objYarnSubmit),
            type: "POST",
            contentType: "application/json;charset=utf-8",
            dataType: "json",
            success: function (result) {
                if (result.Value == true) {
                    AddUserEntryLog('Planning', 'Yarn Details', 'UPDATE', $('#txtWorkOrderNo').val());
                    //alert("Yarn Updated Sucessfully");

                    //window.location.href = "/ProcessSeqProc/ProcessSeqProcIndex?ProSeqID=" + StyleRId + "=&Mode=" + Mod;
                    var msg = 'Yarn Updated Sucessfully...';
                    var flg = 1;
                    var mo = 0;
                    var url = "/ProcessSeqProc/ProcessSeqProcIndex?ProSeqID=" + StyleRId + "=&Mode=" + Mod;
                    AlartMessage(msg, flg, mo, url);
                    LoadAmendstatus();
                    //$('#profile-tab2').attr('style', 'background-color : #F5F7FA');


                    //$("#ConClose").attr("disabled", false);
                    //$("#FFClose").attr("disabled", false);
                    //$("#YClose").attr("disabled", false);
                    //if (fabupflag == 1) {

                    //    $('#ConAdd').hide();
                    //    $('#ConUpdate').show();
                    Mod == 1;
                    // }

                    //StyRowId = StyleRId;
                    //window.location.href = "/PlanningAdd/PlanningAddIndex?StyleRowId=" + StyRowId + "=&Mode=" + 1;

                } else {

                    window.location.href = "/Error/Index";


                }
            },
            error: function (errormessage) {

                alert(errormessage.responseText);
            }
        });
    }
}

$(document).on('click', '.btnUpdate', function () {

    $('#tCPIbody tr').click(function () {
        $('#tCPIbody tr').css('background-color', 'White');
        $(this).css('background-color', '#b8bbc1');

    });
    var CSlNo = 0;
    var CompSlNo = 0;
    var Len, Width, Gsm, Gram1, Wght, TGram, TWght = 0;

    rowindex = $(this).closest('tr').index();

    var currentro12 = CompItemList.slice(rowindex);


    var CnPID = currentro12[0]['Con_PlanID'];
    var CrID = currentro12[0]['ColorID'];
    var CrName = currentro12[0]['Color'];
    var SiId = currentro12[0]['SizeId'];
    var Size = currentro12[0]['Size'];
    var PQty = currentro12[0]['Prdn_Qty'];
    var CSlNo = currentro12[0]['CPlanSlNo'];
    var CompSlNo = currentro12[0]['CompSlNo'];
    Len = $(this).closest('tr').find('#txtLen').val();
    Width = $(this).closest('tr').find('#txtWidth').val();
    Gsm = $(this).closest('tr').find('#txtGsm').val();
    Gram1 = $(this).closest('tr').find('#txtGram').val();
    Wght = $(this).closest('tr').find('#txtWght').val();
    var GWID = $(this).closest('tr').find('#ddlGSize').val();
    var FWID = $(this).closest('tr').find('#ddlFSize').val();



    if (Wght == 0) {
        //alert("Weight are not made for this row...");
        var msg = 'Weight are not made for this row...';
        var flg = 4;
        var mo = 1;
        AlartMessage(msg, flg, mo);
        return true;
    }

    if (GWID == 0) {
        //alert("Fabric Size are not made for this row...");
        var msg = 'Fabric Size are not made for this row...';
        var flg = 4;
        var mo = 1;
        AlartMessage(msg, flg, mo);
        return true;
    }
    if (FWID == 0) {
        //alert("Fabric Size are not made for this row...");
        var msg = 'Fabric Size are not made for this row...';
        var flg = 4;
        var mo = 1;
        AlartMessage(msg, flg, mo);
        return true;
    }





    var copListObj = {
        Con_PlanID: CnPID,
        ColorID: CrID,
        Color: CrName,
        SizeId: SiId,
        Size: Size,
        Prdn_Qty: PQty,
        CPlanSlNo: CSlNo,
        CompSlNo: CompSlNo,
        FinishWidthID: FWID,
        GreyWidthID: GWID,
        Length: Len,
        Width: Width,
        GSM: Gsm,
        Grammage: Gram1,
        Weight: Wght

    };



    if (Mod == 0) {

        var cnt = $("#tblcompdetails1 tr").length - 1;

        var Data = "";

        // PackItemList = [];
        for (var i = 1; i <= cnt; i++) {

            var OCId = $("#tblcompdetails1 tr:eq(" + i + ") td:eq(1)").html();
            var OSizeId = $("#tblcompdetails1 tr:eq(" + i + ") td:eq(4)").html();
            var OCmSNo = $("#tblcompdetails1 tr:eq(" + i + ") td:eq(6)").html();




        }

        if (ConItemList.length > 0) {
            if (OCmSNo == CSlNo && OCId == CrID && OSizeId == SiId) {
                //alert("Already Exists...");
                var msg = 'Already Exists...';
                var flg = 4;
                var mo = 1;
                AlartMessage(msg, flg, mo);
                //$('#txtQty').keyup(function () {
                //    table.search($(this).val()).draw();
                //})
                return true;


            }
        }


    }

    ConItemList.push(copListObj);
    loadconTable(copListObj);
    //alert("Updated Sucessfully");
    var msg = 'Updated Sucessfully...';
    var flg = 1;
    var mo = 1;
    AlartMessage(msg, flg, mo);

});



function myLenFunction(Len) {

    GLen = Len;

    var l = $("#txtLen" + Len).val();
    var w = $("#txtWidth" + Len).val();
    var g = $("#txtGram" + Len).val();
    g = 10;

}

function myWidFunction(Wid) {
    GWid = (Wid);
}

function myGsmFunction(Gsm) {

    GGsm = (Gsm);
    GGram = GLen * GWid * GGsm / 1000;
    $('#txtGram').val(GGram);
}




function myGramFunction(Gram) {


}

function Close() {
    debugger;
    if (OrdApp == 'Y') {
        window.location.href = "/OrderApproval/OrderApprovalIndex";
    }
    else {
        StyRowId = StyleRId;
        window.location.href = "/PlanningAdd/PlanningAddIndex?StyleRowId=" + StyRowId + "=&Mode=" + Mod;
    }
}


function ConClose() {
    debugger;
    if (OrdApp == 'Y') {
        window.location.href = "/OrderApproval/OrderApprovalIndex";
    }
    else {
        StyRowId = StyleRId;
        window.location.href = "/PlanningAdd/PlanningAddIndex?StyleRowId=" + StyRowId + "=&Mode=" + Mod;
    }
}

function ClearTable() {
    $('#tCPIbody').DataTable().destroy();
}



function LoadEditFSize(FZID) {


    $.ajax({
        url: "/Size/GetbyId/" + FZID,
        typr: "GET",

        contentType: "application/json;charset=UTF-8",
        dataType: "json",
        success: function (result) {


            var obj = result.Value;
            if (result.Status == 'SUCCESS') {

                $('#ddlFSize').val(obj.SizeId);

            }
        }

    });

}

function LoadEditGSize(GZID) {



    $.ajax({
        url: "/Size/GetbyId/" + GZID,
        typr: "GET",

        contentType: "application/json;charset=UTF-8",
        dataType: "json",
        success: function (result) {

            var obj = result.Value;
            if (result.Status == 'SUCCESS') {

                $('#ddlGSize').val(obj.SizeId);

            }
        }

    });

}

$(document).on('click', '.btnEUpdate', function () {



    if (CompItemList.length == 0) {

        //alert("Please Select the Pack Details");
        var msg = 'Please Select the Pack Details...';
        var flg = 1;
        var mo = 1;
        AlartMessage(msg, flg, mo);
        return true;
    }



    rowindex = $(this).closest('tr').index();
    var currentro125 = CompItemList.slice(rowindex);


    var CnPID = currentro12[0]['Con_PlanID'];
    var CrID = currentro12[0]['ColorID'];
    var CrName = currentro12[0]['Color'];
    var SiId = currentro12[0]['SizeId'];
    var Size = currentro12[0]['Size'];
    var PQty = currentro12[0]['Prdn_Qty'];
    var CSlNo = currentro12[0]['CPlanSlNo'];
    var CompSlNo = currentro12[0]['CompSlNo'];
    Len = $(this).closest('tr').find('#txtLen').val();
    Width = $(this).closest('tr').find('#txtWidth').val();
    Gsm = $(this).closest('tr').find('#txtGsm').val();
    Gram = $(this).closest('tr').find('#txtGram').val();
    Wght = $(this).closest('tr').find('#txtWght').val();
    var GWID = $(this).closest('tr').find('#ddlGSize').val();
    var FWID = $(this).closest('tr').find('#ddlFSize').val();





    if (Qty == 0) {
        //alert("Pleae Enter Quantity Pack Qty");
        var msg = 'Pleae Enter Quantity Pack Qty...';
        var flg = 1;
        var mo = 1;
        AlartMessage(msg, flg, mo);
        return false;
    }




    var copsListObj = {
        SizeId: SiId,
        ComboId: CmID,
        StyleRow: StyRID,
        Color: CrName,
        Size: Size,
        SSNO: SSlNo,
        Quantity: Qty,
        ShipRow: ShiId,
        Buy_Ord_OrderDetId: BODetID

    };




    PackItemListN.push(copsListObj);

    loadEshconTable(copsListObj);
    //alert("Update Sucessfully");
    var msg = 'Update Sucessfully...';
    var flg = 1;
    var mo = 1;
    AlartMessage(msg, flg, mo);
});


////////////////////////Fabric/////////////////////////////
function SizeAdd(Sz) {

    debugger;

    var SizeObj = {
        // SizeId: $('#SizeID').val(),
        SizeName: Sz,
        //SeqNo: $('#seqno').val(),
        // ItemType: $('#ddlitemtype').val(),
        ItemType: 'Fabric',
        IsActive: true,
        //LookUp: $('#lookup').val(),
        //ActualSize: $('#actualsize').val()
    };
    //LoadingSymb();
    $.ajax({
        url: "/Size/Add",
        data: JSON.stringify(SizeObj),
        type: "POST",
        async: false,
        contentType: "application/json;charset=utf-8",
        dataType: "json",
        success: function (result) {
            debugger;
            if (result.Value == 1) {

                //getfabric();

            }


        },
        complete: function () {
            // This function will be triggered always, when ajax request is completed, even it fails/returns other status code
            getfabric();
        },
        error: function (errormessage) {
            alert(errormessage.responseText);
        }
    });


}

function NewSizeAdd(Sz) {

    debugger;

    var SizeObj = {
        // SizeId: $('#SizeID').val(),
        SizeName: Sz,
        //SeqNo: $('#seqno').val(),
        // ItemType: $('#ddlitemtype').val(),
        ItemType: 'Fabric',
        IsActive: true,
        //LookUp: $('#lookup').val(),
        //ActualSize: $('#actualsize').val()
    };
    //LoadingSymb();
    $.ajax({
        url: "/Size/Add",
        data: JSON.stringify(SizeObj),
        type: "POST",
        async: false,
        contentType: "application/json;charset=utf-8",
        dataType: "json",
        success: function (result) {
            debugger;
            if (result.Value == 1) {
            }
        },
        complete: function () {
            // This function will be triggered always, when ajax request is completed, even it fails/returns other status code
            getNewfabric();
        },
        error: function (errormessage) {
            alert(errormessage.responseText);
        }
    });


}

function getNewfabric() {

    $.ajax({
        url: "/PlanningConsumption/FabricList",
        data: JSON.stringify({}),
        type: "POST",
        contentType: "application/json;charset=utf-8",
        dataType: "json",
        success: function (result) {
            Fabriclist = result;
            GreyList = result;
        },
        failure: function (errMsg) {
            alert(errMsg);
        }
    });
}

function LoadCompFabricItemDetails(ItemId, StyleRowId, ComSNo) {
    debugger;
    $.ajax({
        url: "/PlanningConsumption/ListFabCompDetails",
        data: JSON.stringify({ PItemId: ItemId, StyleRowId: StyleRowId, CompSlNo: ComSNo }),
        type: "POST",
        contentType: "application/json;charset=utf-8",
        dataType: "json",
        success: function (result) {

            obj = result;
            $.each(obj, function () {
                this.BColorID = bcid;
                this.Bcolor = bc;
                this.FabricID = FabricId;
                this.Fabric = Fabric;
                this.GSM = gsm;
                this.type = type;
                this.FabricType = type;
                this.Woven_Req_InMtrs = 0;
            });
            var dup = [];
            if (PlanCompFabricDetSave.length == 0) {
                PlanCompFabricDetSave = obj;

                //loadCompFabSaveTable(PlanCompFabricDetSave);
            }
            else {

                //for (var d = 0; d < StklistSave.length; d++) {
                //    if (StklistSave[d].Itemid == Iid && StklistSave[d].Colorid == Cid && StklistSave[d].Sizeid == Sid) {

                //        dup.push(StklistSave[d]);
                //    }
                //}
                for (var t = 0; t < obj.length; t++) {
                    for (var d = 0; d < PlanCompFabricDetSave.length; d++) {
                        if (PlanCompFabricDetSave[d].CompSlNo == obj[t].CompSlNo) {

                            PlanCompFabricDetSave[d].FabricID = FabricId;
                            PlanCompFabricDetSave[d].Fabric = Fabric;
                            dup.push(PlanCompFabricDetSave[d]);
                        }
                    }
                }





                if (dup.length > 0) {
                    debugger;
                    loadCompFabSaveTable(PlanCompFabricDetSave);



                    if (PlanYarnSave.length > 0) {
                        PlanYarn = [];
                        var flag = -1;
                        for (var y = 0; y < PlanYarnSave.length; y++) {
                            if (PlanYarnSave[y].SlNo == Yarnid) {

                                PlanYarnSave[y].FabricID = FabricId;
                                PlanYarnSave[y].Fabric = Fabric;
                                PlanYarn.push(PlanYarnSave[y]);
                            }
                        }
                    }
                    loadYarndetTab(PlanYarn);




                    //Check bala

                    //var cpdqt = 0;
                    //for (var ie = 0; ie < PlanYarnDetSave.length; e++) {


                    //    var cpcs = PlanYarnDetSave[ie].Knit_In_ActQty;
                    //    cpdqt = cpdqt + parseFloat(cpcs);

                    //}
                    //var CWeight = (cpdqt.toFixed(1));

                    //if (parseFloat(CWeight) > 0) {
                    //    if (PlanYarnDetSave.length > 0) {


                    //        var ys = PlanYarn[0].YSlno;

                    //        for (var b = 0; b < PlanYarnSave.length; b++) {
                    //            if (PlanYarnSave[b].SlNo == CompSlNo) {
                    //                var pysl = PlanYarnSave[b].YSlno;
                    //                var cmpsl = PlanYarnSave[b].SlNo;
                    //                var wgt = PlanYarnSave[b].Fabric_Weight;
                    //                var bcid = PlanYarnSave[b].Fabric_ColorId;

                    //                for (var m = 0; m < PlanYarnDetSave.length; m++) {
                    //                    if (PlanYarnDetSave[m].CompSno == cmpsl) {
                    //                        var s = PlanYarnDetSave[m].SlNo;
                    //                        if (PlanYarnDetSave[m].BaseColorID == bcid) {
                    //                            YsBp = 1;
                    //                            var pr = PlanYarnDetSave[m].Knit_In_Per;
                    //                            var re = parseFloat((pr * wgt) / 100);
                    //                            re = re.toFixed(3);
                    //                            PlanYarnDetSave[m].Knit_In_Qty = re;
                    //                            PlanYarnDetSave[m].Knit_In_ActQty = re;
                    //                            PlanYarnDetSave[m].YSlNo = pysl;
                    //                            PlanYarnDetSave[m].SlNo = s;
                    //                            PlanYarnDetSave[m].FabricID = FabricId;
                    //                        }

                    //                    }
                    //                }
                    //            }
                    //        }
                    //        PlanYarnDet = $.grep(PlanYarnDetSave, function (e) {
                    //            return e.CompSno == CompSlNo && e.YSlNo == ys;
                    //        });
                    //        Loadsepyarn(PlanYarnDet);
                    //        LoadsepSaveyarn(PlanYarnDetSave);
                    //    }
                    //}
                    //

                    return true;
                }
                else {
                    //for (var s = 0; s < StklistSave.length; s++) {
                    //    if (obj[s].Itemid != Iid && obj[s].Colorid != Cid && obj[s].Sizeid != Sid) {
                    for (var d = 0; d < obj.length; d++) {
                        PlanCompFabricDetSave.push(obj[d]);
                    }
                    //loadCompFabSaveTable(PlanCompFabricDetSave);

                    //    }

                    //}
                }
            }

            var color = [];
            color = PlanCompFabricDetSave;

            color = $.grep(color, function (v) {
                return (v.CompSlNo == Yarnid && v.ColorID == FGarcolorid);
            });

            PlanCompFabricDet = color;
            loadCompFabTable(PlanCompFabricDet);
            //fillfabrictbl(PlanCompFabricDet);

            totwght();
            //Yarn

            var leng = 0;
            var result = [];
            $.each(obj, function (i, e) {
                var matchingItems = $.grep(result, function (item) {
                    return item.BColorID === e.BColorID;
                });
                if (matchingItems.length === 0) {
                    result.push(e);
                }
            });


            if (PlanYarnSave.length > 0) {
                PlanYarn = [];
                var flag = -1;
                for (var y = 0; y < PlanYarnSave; y++) {
                    if (PlanYarnSave[y].SlNo == Yarnid) {

                        PlanYarnSave[y].FabricID = FabricId;
                        PlanYarnSave[y].Fabric = Fabric;
                        PlanYarn.push(PlanYarnSave[y]);
                    }
                }
            }


            if (PlanYarn.length == 0) {
                leng = 1;

            }
            else {
                leng = PlanYarn.length + 1;

            }

            //for (var s = 0; s < PlanYarnSave.length; s++) {
            //    if (PlanYarnSave[s].YSlno == leng) {
            //        leng++;
            //    }
            //}

            if (result.length > 0) {

                var Cs = result[0].CompSlNo;
                var ComponentId = 0;
                var Component = '';
                for (var t = 0; t < compList.length; t++) {
                    if (compList[t].CompSlNo == Cs) {
                        ComponentId = compList[t].ComponentID;
                        Component = compList[t].ComponentName;
                    }
                }

                for (var j = 0; j < result.length; j++) {
                    var bd = result[j].BColorID;
                    var sl = result[j].CompSlNo;
                    for (var w = 0; w < PlanCompFabricDetSave.length; w++) {
                        if (PlanCompFabricDetSave[w].BColorID == bd && PlanCompFabricDetSave[w].CompSlNo == sl) {
                            var totalqty = 0;
                            var qty = PlanCompFabricDetSave[w].Weight;
                            totalqty = totalqty + parseFloat(qty);
                        }
                    }

                    var yarnlistobj = {
                        PlanId: 0,
                        Fabric: Fabric,
                        FabricID: FabricId,
                        Fabric_ColorId: result[j].BColorID,
                        Fabric_Weight: totalqty,
                        Fabric_type: result[j].type,
                        EntryDate: new Date($('#txtEntryDate').val()),
                        BColor: result[j].Bcolor,
                        SlNo: result[j].CompSlNo,
                        YPlanmasID: 0,
                        YSlno: leng,
                        ComponentId: ComponentId,
                        Component: Component

                    }

                    PlanYarnSave.push(yarnlistobj);
                }
            }


            loadYarndetTab(PlanYarn);
            loadYarnSavedetTab(PlanYarnSave);
            if (PlanYarnDetSave.length > 0) {
                PlanYarnDet = [];
                for (var y = 0; y < PlanYarnDetSave; y++) {
                    if (PlanYarnDetSave[y].CompSno == CompSlNo) {
                        PlanYarnDet.push(PlanYarnDetSave[y]);
                    }
                }
                Loadsepyarn(PlanYarnDet);
            }

        },
        failure: function (errMsg) {
            alert(errMsg);
        }
    });


}

function loadYarndetTab(list) {
    debugger;
    //$('#tYFbody').DataTable().destroy();
    var inputcount = 0;
    $('#tYFbody tr').each(function () {
        inputcount++;
    });

    if (inputcount > 0) {
        $('#tYFbody').DataTable().destroy();
    }
    $('#tYFbody').empty();
    $('#tYFbody').DataTable({

        data: list,
        scrollY: 300,
        scrollCollapse: true,
        paging: false,
        fixedColumns: false,
        select: false,
        scrollX: "100%",
        scrollXInner: "100%",
        scroller: false,
        "bSort": false,
        columns: [
                         { title: "CpSNo", data: "SlNo", "visible": false },
                          { title: "YSlno", data: "YSlno", "visible": false },
                         { title: "YarnPlanMasID", data: "YPlanmasID", "visible": false },
                         { title: "FabricID", data: "FabricID", "visible": false },
                         { title: "Fabric", data: "Fabric" },
                           { title: "ComponentID", data: "ComponentId", "visible": false },
                         { title: "Component", data: "Component", "visible": false },
                         { title: "Base Color", data: "BColor" },
                         { title: "Weight(kgs)", data: "Fabric_Weight" },
                         { title: "ColorID", data: "Fabric_ColorId", "visible": false },
                          { title: "Type", data: "Fabric_type" },
                           //{
                           //    title: "Action", "mDataProp": null,
                           //    "sDefaultContent": '<div style="display:inline-flex;"><button type="button" data-toggle="tooltip" data-placement="top" title="Yarn" style="width: 20px;padding: 0px;height: 20px;background: #6B8E23;border: 1px solid #6B8E23;" class="btnYarn btn btn_round"> <img style="width:14px;" src="../images/yarn.png"> </button> </div>'
                           //    //"sDefaultContent": '<div style="display:inline-flex;"><button type="button" data-toggle="tooltip" data-placement="top" title="Yarn" style="width: 20px;padding: 0px;height: 20px;background: #6B8E23;border: 1px solid #6B8E23;" class="btnYarn btn btn_round"> <img style="width:14px;" src="../images/yarn.png"> </button>  <button type="button" data-toggle="tooltip" data-placement="top" title="Dyeing" style="width: 20px;padding: 0px;height: 20px;background: #6B8E23;border: 1px solid #6B8E23;" class="btnYarnDyeing btn btn_round"> <img style="width: 14px;margin-top: -1px;/* margin-left: 0.5px; */" src="../images/dyeing.png"> </button> <button data-toggle="tooltip" data-placement="top" title="Loss" type="button" style="width: 20px;padding: 0px;height: 20px;" class="btnYarnLoss btn btn_round btnl btn-danger"> <i class="fa fa-arrow-down"></i> </button></div>'

                           //},


        ]



    });

    $("#tYFbody tr").click(function () {
        var selected = $(this).hasClass("selected");
        $("#tYFbody tr").removeClass("selected");
        if (!selected)
            $(this).addClass("selected");
    });
}


function loadYarnSavedetTab(list) {
    //$('#tYFSavebody').DataTable().destroy();
    var inputcount = 0;
    $('#tYFSavebody tr').each(function () {
        inputcount++;
    });

    if (inputcount > 0) {
        $('#tYFSavebody').DataTable().destroy();
    }
    $('#tYFSavebody').empty();
    $('#tYFSavebody').DataTable({

        data: list,
        scrollY: 300,
        scrollCollapse: true,
        paging: false,
        fixedColumns: false,
        select: false,
        scrollX: "100%",
        scrollXInner: "100%",
        scroller: false,
        "bSort": false,
        columns: [
                         { title: "CompSNo", data: "SlNo" },
                          { title: "YSlno", data: "YSlno" },
                         { title: "YarnPlanMasID", data: "YPlanmasID" },
                         { title: "FabricID", data: "FabricID" },
                         { title: "Fabric", data: "Fabric" },
                         { title: "ComponentID", data: "ComponentId" },
                         { title: "Component", data: "Component" },
                         { title: "Base Color", data: "BColor" },
                         { title: "Weight(kgs)", data: "Fabric_Weight" },
                         { title: "ColorID", data: "Fabric_ColorId" },
                          { title: "Fabric Type", data: "Fabric_type" },
                           {
                               title: "ViewDetails", "mDataProp": null,
                           },


        ]



    });
}

function loadCompFabTable(list) {
    debugger;
    //$('#tCDbody').DataTable().destroy();




    //list.sort(function (a, b) {
    //    return a.snumb - b.snumb;
    //});


    var inputcount = 0;
    $('#tCDbody tr').each(function () {
        inputcount++;
    });

    if (inputcount > 0) {
        $('#tCDbody').DataTable().destroy();
    }
    $('#tCDbody').empty();
    //$('#tCPIbody').DataTable().destroy();
    //list.sort(function (a, b) {
    //    return a.snumb - b.snumb;
    //})

    $('#tCDbody').DataTable({
        data: list,
        "deferRender": true,
        scrollY: 150,
        scrollCollapse: true,
        paging: false,
        fixedColumns: false,
        select: false,
        scrollX: "100%",
        scrollXInner: "100%",
        scroller: false,
        "bSort": false,
        "rowCallback": function (row, data, index) {
            if (data.CheckDcMade > "0") {
                $('td', row).css('background-color', '#FCF3CF');

            }
            if (data.FabricType == 'P') {

                var tbl = $('#tCDbody');
                tbl.DataTable().column(9).visible(true);
            } else {
                var tbl = $('#tCDbody');
                tbl.DataTable().column(9).visible(false);
            }


            //$('td', row).find('#txtNos').val('(' + data.Woven_Req_InMtrs * data.Grammage + ')' + data.Woven_Req_InMtrs);

            $('td', row).find('#txtNos').val(data.Woven_Req_InMtrs);
            
        },
        columns: [
            { title: "SNo", data: "snumb", "visible": false },

             //{
             //    title: "SNo", data: "snumb", 
             //    render: function (data) {

             //        return '<input type="label" id="txtsnumb" class="form-control" style="width: 150px;text-align: left;border:0px;"  disabled value=' + data + ' >';

             //    },
             //},

            { title: "FPlanId", data: "FPlanId", "visible": false },
            { title: "ColorID", data: "ColorID", "visible": false },
           // { title: "Color", data: "Color" },
             {
                 title: "Color", data: "Color",
                 render: function (data) {

                     return '<input type="label" id="txtColor" class="form-control" style="width: 150px;text-align: left;border:0px;"  disabled value=' + data + ' >';

                 },
             },
            { title: "SizeId", data: "SizeId", "visible": false },
           // { title: "Size", data: "Size" },
           {
               title: "Size", data: "Size",
               render: function (data) {

                   return '<input type="label" id="txtSize" class="form-control" style="width: 50px;text-align: center;border:0px;" disabled value=' + data + ' >';

               },
           },

            {
                title: "Prod Qty", data: "Prdn_Qty",
                render: function (data) {

                    return '<input type="label" id="txtfabPrdQty" class="form-control" style="width: 50px;text-align: center;border:0px;" disabled value=' + data + ' >';

                },
            },
            {
                title: "Act Weight", data: "ActWeight",
                render: function (data) {

                    return '<input type="label" id="txtfabActwt" class="form-control" style="width: 50px;text-align: center;border:0px;" disabled value=' + data + ' >';

                },
            },
            {
                title: "Weight", data: "Weight",
                render: function (data) {

                    return '<input type="label" id="txtfabwt" class="form-control" style="width: 50px;text-align: center;border:0px;" disabled value=' + data + ' >';

                },
            },
             {
                 title: "Nos.", data: "Woven_Req_InMtrs",
                 render: function (data) {

                     return '<input type="label" id="txtNos" class="form-control" style="width: 50px;text-align: center;border:0px;" disabled  >';

                 },
             },

            {
                title: "Grammage", data: "Grammage", "visible": false,
                render: function (data) {

                    return '<input type="label" id="txtfabgram" class="form-control" style="width: 50px;text-align: center;border:0px;" value=' + data + ' >';

                },
            },
            { title: "FabricID", data: "FabricID", "visible": false },
            {
                title: "GreyWidthID", data: "GreyWidthID", "visible": false,
                render: function (data) {

                    return '<input type="label" id="txtfabgrey" class="form-control" style="width: 50px;text-align: center;border:0px;" value=' + data + ' >';

                },
            },
            {
                title: "FinishWidthID", data: "FinishWidthID", "visible": false,
                render: function (data) {

                    return '<input type="label" id="txtfabfin" class="form-control" style="width: 50px;text-align: center;border:0px;" value=' + data + ' >';

                },
            },
            { title: "Fabric Type", data: "FabricType", "visible": false },
            { title: "PlanID", data: "PlanID", "visible": false },
            { title: "Comp SlNo", data: "CompSlNo", "visible": false },


       {
           title: "Base Color", data: "Bcolor",

           render: function (data, type, row) {
               if (row.CheckDcMade > 0) {
                   var $select = $("<select></select>", {
                       "id": "ddlBColor",
                       "value": data,
                       "class": "form-control selWidth ddlBColor select2",
                       "disabled": true
                       // "width": $this.css("width", "100px"),
                       //onchange: "loadbasecolor(this.value);"
                   });

                   $.each(BaseColorlist, function (k, v) {
                       var $option = $("<option></option>", {
                           "text": v.Color,
                           "value": v.ColorID
                       });

                       if (data === v.Color) {
                           $option.attr("selected", "selected")
                       }
                       $select.append($option);
                   });


                   return $select.prop("outerHTML");
               } else {
                   var $select = $("<select></select>", {
                       "id": "ddlBColor",
                       "value": data,
                       "class": "form-control selWidth ddlBColor select2",
                        "width": "80px",
                       //onchange: "loadbasecolor(this.value);"
                   });

                   $.each(BaseColorlist, function (k, v) {
                       var $option = $("<option></option>", {
                           "text": v.Color,
                           "value": v.ColorID
                       });

                       if (data === v.Color) {
                           $option.attr("selected", "selected")
                       }
                       $select.append($option);
                   });


                   return $select.prop("outerHTML");
               }
           }
       },


        {
            //title: "PurQty", data: "BColorPQty",
            //render: function (data) {

            //    return '<input type="text" id="txtPurQty" class="loadpqty form-control" style="width: 50px;text-align: center;" value=' + data + ' >';

            //},
            title: "Pur Qty", data: "BColorPQty",
            render: function (data, type, row) {
                if (row.CheckDcMade > "0") {
                    return '<input type="text" class="loadpqty form-control"  id="txtPurQty" disabled style="width: 50px;text-align: center;" value=' + data + ' >';
                } else {
                    return '<input type="text" class="loadpqty form-control" id="txtPurQty" style="width: 50px;text-align: center;" value=' + data + ' >';
                }
            },
        },


       {
           title: "Finish Color", data: "Fcolor",
           render: function (data, type, row) {
               if (row.CheckDcMade > 0) {
                   var $select = $("<select></select>", {
                       "id": "ddlFColor",
                       "value": data,
                       "class": "form-control selWidth ddlFColor select2",
                       "disabled": true,
                       "width": "80px",
                       //onchange: "loadfinishcolor(this.value);"
                   });
                   $.each(FinishColorlist, function (k, v) {
                       var $option = $("<option></option>", {
                           "text": v.Color,
                           "value": v.ColorID
                       });

                       if (data === v.Color) {
                           $option.attr("selected", "selected")
                       }
                       $select.append($option);
                   });
                   return $select.prop("outerHTML");
               } else {
                   var $select = $("<select></select>", {
                       "id": "ddlFColor",
                       "value": data,
                       "class": "form-control selWidth ddlFColor select2",
                       "width": "80px",
                       //onchange: "loadfinishcolor(this.value);"
                   });
                   $.each(FinishColorlist, function (k, v) {
                       var $option = $("<option></option>", {
                           "text": v.Color,
                           "value": v.ColorID
                       });

                       if (data === v.Color) {
                           $option.attr("selected", "selected")
                       }
                       $select.append($option);
                   });
                   return $select.prop("outerHTML");
               }
           }
       },
         {
             title: "Pur Qty", data: "FColorPQty",
             //render: function (data, type, row) {
             //    return '<input type="text" id="txtFPurQty" class="loadfcpqty form-control"  style="width: 50px;text-align: center;" value=' + data + ' >';
             //}


             render: function (data, type, row) {
                if (row.CheckDcMade > "0") {
                    return '<input type="text" class="loadfcpqty form-control"  id="txtFPurQty" disabled style="width: 50px;text-align: center;" value=' + data + ' >';
                } else {
                    return '<input type="text" class="loadfcpqty form-control" id="txtFPurQty" style="width: 50px;text-align: center;" value=' + data + ' >';
                }
            },


         },


         {
             title: "Print Color", data: "PColor",
             render: function (data, type, row) {
                 if (row.CheckDcMade > 0) {
                     var $select = $("<select></select>", {
                         "id": "ddlPColor",
                         "value": data,
                         "class": "form-control selWidth ddlPColor",
                         "disabled": true,
                         "width": "80px",
                         //onchange: "loadfinishcolor(this.value);"
                     });
                     $.each(PrintColorlist, function (k, v) {
                         var $option = $("<option></option>", {
                             "text": v.Color,
                             "value": v.ColorID
                         });

                         if (data === v.Color) {
                             $option.attr("selected", "selected")
                         }
                         $select.append($option);
                     });
                     return $select.prop("outerHTML");
                 } else {
                     var $select = $("<select></select>", {
                         "id": "ddlPColor",
                         "value": data,
                         "class": "form-control selWidth ddlPColor",
                       "width": "80px",
                         //onchange: "loadfinishcolor(this.value);"
                     });
                     $.each(PrintColorlist, function (k, v) {
                         var $option = $("<option></option>", {
                             "text": v.Color,
                             "value": v.ColorID
                         });

                         if (data === v.Color) {
                             $option.attr("selected", "selected")
                         }
                         $select.append($option);
                     });
                     return $select.prop("outerHTML");
                 }
             }
             //render: function (data, type, row) {
             //    if (data == null) {
             //        data = '--Select--'
             //    }
             //    var $select = $("<select></select>", {
             //        "id": "ddlPColor",
             //        "value": data,
             //        "class": "form-control selWidth ddlPColor",
             //        //onchange: "loadprintcolor(this.value);"
             //    });
             //    $.each(PrintColorlist, function (k, v) {
             //        var $option = $("<option></option>", {
             //            "text": v.Color,
             //            "value": v.ColorID
             //        });

             //        if (data === v.Color) {
             //            $option.attr("selected", "selected")
             //        }
             //        $select.append($option);
             //    });
             //    return $select.prop("outerHTML");
             //    //return '<select id="ddlGSize" selected="selected" class="form-control" style="width: 100px;"> </select>';                                                             
             //}
         },
          {
              title: "Finish Gsm", data: "FGsm",
              render: function (data, type, row) {
                  // return '<input id="txtFGsm" type="text" value="0" style="width: 50px;text-align: center;" >';
                  return '<input type="text" id="txtFGsm" class="loadfgsm form-control" style="width:50px;text-align: center;" value=' + data + ' >';
              }
          },

           {
               title: "Knit GSM", data: "KGsm",
               render: function (data) {

                   return '<input type="text" id="txtKnitgsm" class="calcknitgsm form-control" style="width: 50px;text-align: center;" value=' + data + ' >';

               },
           },
            {
                title: "Loop Len", data: "LoopLen",
                render: function (data) {

                    return '<input type="text" id="txtlooplen" class="calclooplen form-control" style="width: 50px;text-align: center;" value=' + data + ' >';

                },
            },
             {
                 title: "Texture", data: "texture",
                 render: function (data) {

                     return '<input type="text" id="txtTexture" class="calcTexture form-control" style="width: 50px;text-align: center;" value=' + data + ' >';

                 },
             },
              {
                  title: "Content", data: "content",
                  render: function (data) {

                      return '<input type="text" id="txtContent" class="CalcContent form-control" style="width: 50px;text-align: center;" value=' + data + ' >';

                  },
              },
               {
                   title: "Gauge", data: "guage",
                   render: function (data) {

                       return '<input type="text" id="txtGauge" class="CalcGauge form-control" style="width: 50px;text-align: center;" value=' + data + ' >';

                   },
               },

               {
                   title: "Stock", "mDataProp": null,
                   "sDefaultContent": '<button type="button" data-toggle="tooltip" data-placement="top" title="View" style="width: 20px;padding:0px;height: 20px;border-radius: 10px;" class="btnshowstock btn btn-round btn-info"> <i class="fa fa-eye"></i> </button>'
                   //"sDefaultContent": '<button type="button" class="btncompLossedit"> Edit </button> <button type="button" class="btncompLossremove"> Remove </button>'
               },
        ]
    });



    totwght();

    $("#tCDbody tr").click(function () {
        var selected = $(this).hasClass("selected");
        $("#tCDbody tr").removeClass("selected");
        if (!selected)
            $(this).addClass("selected");
    });


    CheckfabricStock();


}




function loadCompFabSaveTable(data) {
    //$('#tblcompfabdetails').DataTable().destroy();

    var inputcount = 0;
    $('#tblcompfabdetails tr').each(function () {
        inputcount++;
    });

    if (inputcount > 0) {
        $('#tblcompfabdetails').DataTable().destroy();
    }
    $('#tblcompfabdetails').empty();

    data.sort(function (a, b) {
        return a.snumb - b.snumb;
    });

    $('#tblcompfabdetails').DataTable({

        //"order": [[1, "asc"]],
        data: data,
        scrollY: 100,
        scrollCollapse: true,
        paging: false,
        fixedColumns: false,
        select: false,
        scrollX: "100%",
        scrollXInner: "100%",
        scroller: false,
        scrollY: "300px",
        scrollX: true,
        scrollCollapse: true,
        paging: false,
        fixedColumns: {
            heightMatch: 'none'
        },

        columns: [
            { title: "SNo", data: "snumb" },
            { title: "FPlId", data: "FPlanId" },
            { title: "ColorID", data: "ColorID" },
            { title: "Color", data: "Color" },
            { title: "SizeId", data: "SizeId" },
            { title: "Size", data: "Size" },
            { title: "PQty", data: "Prdn_Qty" },
             { title: "ActWeight", data: "ActWeight" },
            { title: "Wht", data: "Weight" },
             { title: "Nos.", data: "Woven_Req_InMtrs" },
            { title: "Gram", data: "Grammage" },
            { title: "FabID", data: "FabricID" },
            { title: "GWidID", data: "GreyWidthID" },
            { title: "FWidID", data: "FinishWidthID" },
            { title: "FType", data: "FabricType" },
            { title: "PlID", data: "PlanID" },
            { title: "CoSNo", data: "CompSlNo" },
            { title: "BColor", data: "BColorID" },
            { title: "PurQty", data: "BColorPQty" },
            { title: "FColor", data: "FColorID" },
            { title: "PuQty", data: "FColorPQty" },
            { title: "PrColor", data: "PColorID" },
            { title: "FGsm", data: "FGsm" },
        ]
    });



}

//function loadbasecolor(val) {
//    debugger;
//    Fabindex;
//    var oldind = -1;
//    var currentrow = PlanCompFabricDet.slice(Fabindex);
//    var s = currentrow[0].CompSlNo;
//    var sno = currentrow[0].snumb;
//    var fd = currentrow[0].FabricID;
//    var bcl = '';

//    var bclrqty = currentrow[0].BColorPQty;
//    var finclrqty = currentrow[0].FColorPQty;

//    for (var d = 0; d < Colorlist.length; d++) {
//        if (Colorlist[d].ColorID == val) {
//            bcl = Colorlist[d].Color;
//            oldind = d;
//        }
//    }
//    $.each(PlanCompFabricDet, function () {
//        if (this.CompSlNo == s && this.snumb == sno) {
//            this.BColorID = val;
//            this.Bcolor = bcl;
//        }
//    });

//    $.each(PlanCompFabricDetSave, function () {
//        if (this.CompSlNo == s && this.snumb == sno) {
//            this.BColorID = val;
//            this.Bcolor = bcl;
//        }
//    });


//    //array_move(Colorlist, oldind, 0)
//    //loadFabAddTable(PlanFabricDet);

//    loadCompFabSaveTable(PlanCompFabricDetSave);
//    //loadCompFabTable(PlanCompFabricDet);



//    var result = [];
//    $.each(PlanCompFabricDet, function (i, e) {
//        var matchingItems = $.grep(result, function (item) {
//            return item.BColorID === e.BColorID;
//        });
//        if (matchingItems.length === 0) {
//            result.push(e);
//        }
//    });

//    if (result.length > 0) {
//        //PlanYarnSave = [];

//        PlanYarnSave = jQuery.grep(PlanYarnSave, function (value) {
//            return value.FabricID != fd;
//        });

//        var Cs = result[0].CompSlNo;
//        var ComponentId = 0;
//        var Component = '';
//        for (var t = 0; t < compList.length; t++) {
//            if (compList[t].CompSlNo == Cs) {
//                ComponentId = compList[t].ComponentID;
//                Component = compList[t].ComponentName;
//            }
//        }

//        //result = jQuery.grep(result, function (value) {
//        //    return value.Weight == 0;
//        //});
//        for (var j = 0; j < result.length; j++) {


//            if (PlanYarnSave.length == 0) {
//                leng = 1;

//            }
//            else {
//                leng = PlanYarnSave.length + 1;

//            }

//            var bd = result[j].BColorID;
//            var snumb = result[j].snumb;
//            var csln = result[j].CompSlNo;
//            var totalqty = 0;
//            for (var w = 0; w < PlanCompFabricDetSave.length; w++) {
//                if (PlanCompFabricDetSave[w].BColorID == bd && PlanCompFabricDetSave[w].CompSlNo == csln) {

//                    var qty = PlanCompFabricDetSave[w].Weight;
//                    totalqty = totalqty + parseFloat(qty);
//                }
//            }


//            var bcqty = 0;
//            for (var w = 0; w < PlanCompFabricDetSave.length; w++) {
//                if (PlanCompFabricDetSave[w].BColorID == bd && PlanCompFabricDetSave[w].CompSlNo == s) {

//                    var qty = PlanCompFabricDetSave[w].BColorPQty;
//                    bcqty = bcqty + parseFloat(qty);
//                }
//            }


//            var finqty = 0;
//            for (var w = 0; w < PlanCompFabricDetSave.length; w++) {
//                if (PlanCompFabricDetSave[w].BColorID == bd && PlanCompFabricDetSave[w].CompSlNo == s) {

//                    var qty = PlanCompFabricDetSave[w].FColorPQty;
//                    finqty = finqty + parseFloat(qty);
//                }
//            }


//            var totclrqty = parseFloat(bcqty) + parseFloat(finqty);

//            for (var w = 0; w < PlanCompFabricDet.length; w++) {
//                if (PlanCompFabricDet[w].BColorID == bc && PlanCompFabricDet[w].snumb == sno) {

//                    totalqty = totalqty - totclrqty;
//                }
//            }

//            var yarnlistobj = {
//                PlanId: 0,
//                Fabric: result[j].Fabric,
//                FabricID: result[j].FabricID,
//                Fabric_ColorId: result[j].BColorID,
//                Fabric_Weight: totalqty,
//                Fabric_type: result[j].FabricType,
//                EntryDate: new Date($('#txtEntryDate').val()),
//                BColor: result[j].Bcolor,
//                SlNo: result[j].CompSlNo,
//                YPlanmasID: 0,
//                YSlno: leng,
//                ComponentId: ComponentId,
//                Component: Component
//            }



//            PlanYarnSave.push(yarnlistobj);
//        }
//    }

//    //loadYarndetTab
//    PlanYarnSave = jQuery.grep(PlanYarnSave, function (value) {
//        return value.Fabric_Weight != 0;
//    });
//    loadYarnSavedetTab(PlanYarnSave);

//    var ctry = [];
//    ctry = PlanYarnSave;
//    ctry = $.grep(ctry, function (e) {
//        if (e.SlNo == s) {
//            return e;
//        }
//    });
//    PlanYarn = ctry;

//    loadYarndetTab(PlanYarn);
//}

function loadfgsm(val) {
    debugger;
    Fabindex;
    indexforfabfill = Fabindex;
    fabfillvar = 'FGSM';
    var currentrow = PlanCompFabricDet.slice(Fabindex);
    var s = currentrow[0].CompSlNo;
    var sno = currentrow[0].snumb;

    $.each(PlanCompFabricDet, function () {
        if (this.CompSlNo == s && this.snumb == sno) {
            this.FGsm = val;

        }
    });

    $.each(PlanCompFabricDetSave, function () {
        if (this.CompSlNo == s && this.snumb == sno) {
            this.FGsm = val;

        }
    });
    loadCompFabSaveTable(PlanCompFabricDetSave);
}
function loadfinishcolor(val) {

    Fabindex;
    var currentrow = PlanCompFabricDet.slice(Fabindex);
    var s = currentrow[0].CompSlNo;
    var sno = currentrow[0].snumb;
    var cname = "";
    var oldind = -1;
    for (var d = 0; d < Colorlist.length; d++) {
        if (Colorlist[d].ColorID == val) {
            cname = Colorlist[d].Color;
            oldind = d;
        }
    }

    $.each(PlanCompFabricDet, function () {
        if (this.CompSlNo == s && this.snumb == sno) {
            this.FColorID = val;
            this.Fcolor = cname;
        }
    });

    $.each(PlanCompFabricDetSave, function () {
        if (this.CompSlNo == s && this.snumb == sno) {
            this.FColorID = val;
            this.Fcolor = cname;
        }
    });
    loadCompFabSaveTable(PlanCompFabricDetSave);
    // array_move(Colorlist, oldind, 0)
    //loadFabAddTable(PlanFabricDet);
}

function array_move(arr, old_index, new_index) {

    if (new_index >= arr.length) {
        var k = new_index - arr.length + 1;
        while (k--) {
            arr.push(undefined);
        }
    }
    arr.splice(new_index, 0, arr.splice(old_index, 1)[0]);
    return arr; // for testing
};


//function loadprintcolor(val) {
//    debugger;
//    Fabindex;
//    var oldind = -1;
//    var currentrow = PlanCompFabricDet.slice(Fabindex);
//    var s = currentrow[0].CompSlNo;
//    var sno = currentrow[0].snumb;
//    var cname = "";
//    for (var d = 0; d < Colorlist.length; d++) {
//        if (Colorlist[d].ColorID == val) {
//            oldind = d;
//            cname = Colorlist[d].Color;
//        }
//    }
//    $.each(PlanCompFabricDet, function () {
//        if (this.CompSlNo == s && this.snumb == sno) {
//            this.PColorID = val;


//        }
//    });

//    $.each(PlanCompFabricDetSave, function () {
//        if (this.CompSlNo == s && this.snumb == sno) {
//            this.PColorID = val;
//        }
//    });
//    loadCompFabSaveTable(PlanCompFabricDetSave);
//    //array_move(Colorlist, oldind, 0)
//    //loadFabAddTable(PlanFabricDet);
//}

function loadpqty(val) {

    Fabindex;
    indexforfabfill = Fabindex;
    fabfillvar = 'BCQT';
    var currentrow = PlanCompFabricDet.slice(Fabindex);
    var s = currentrow[0].CompSlNo;
    var sno = currentrow[0].snumb;
    var bc = currentrow[0].BColorID;
    var finclrqty = currentrow[0].FColorPQty;
    var wt = currentrow[0].Weight;
    var fq = currentrow[0].FColorPQty;
    var fd = currentrow[0].FabricID;

    var tot = parseFloat(fq) + parseFloat(val);
    if (tot > wt) {
        //alert('Sum of PurQty should not exceed actual weight');
        var msg = 'Sum of Purchase Quantity should not exceed actual weight...';
        var flg = 4;
        var mo = 1;
        AlartMessage(msg, flg, mo);
        $.each(PlanCompFabricDet, function () {
            if (this.CompSlNo == s && this.snumb == sno) {
                this.BColorPQty = 0;

            }
        });
        return true;
    }
    $.each(PlanCompFabricDet, function () {
        if (this.CompSlNo == s && this.snumb == sno) {
            this.BColorPQty = val;

        }
    });

    // loadCompFabTable(PlanCompFabricDet);

    $.each(PlanCompFabricDetSave, function () {
        if (this.CompSlNo == s && this.snumb == sno) {
            this.BColorPQty = val;

        }
    });
    loadCompFabSaveTable(PlanCompFabricDetSave);

    //var totclrqty = parseFloat(val) + parseFloat(finclrqty);

    var result = [];
    $.each(PlanCompFabricDet, function (i, e) {
        var matchingItems = $.grep(result, function (item) {
            return item.BColorID === e.BColorID;
        });
        if (matchingItems.length === 0) {
            result.push(e);
        }
    });

    if (result.length > 0) {
        //PlanYarnSave = [];

        //PlanYarnSave = jQuery.grep(PlanYarnSave, function (value) {
        //    return value.FabricID != fd;
        //});


        PlanYarnSave = jQuery.grep(PlanYarnSave, function (value) {
            return value.SlNo != CompSlNo;
        });
        var Cs = result[0].CompSlNo;
        var ComponentId = 0;
        var Component = '';
        for (var t = 0; t < compList.length; t++) {
            if (compList[t].CompSlNo == Cs) {
                ComponentId = compList[t].ComponentID;
                Component = compList[t].ComponentName;
            }
        }

        //result = jQuery.grep(result, function (value) {
        //    return value.Weight == 0;
        //});
        for (var j = 0; j < result.length; j++) {


            if (PlanYarnSave.length == 0) {
                leng = 1;

            }
            else {
                leng = PlanYarnSave.length + 1;

            }

            var bd = result[j].BColorID;
            var snumb = result[j].snumb;
            var csln = result[j].CompSlNo;
            var totalqty = 0;
            for (var w = 0; w < PlanCompFabricDetSave.length; w++) {
                if (PlanCompFabricDetSave[w].BColorID == bd && PlanCompFabricDetSave[w].CompSlNo == csln) {

                    var qty = PlanCompFabricDetSave[w].Weight;
                    totalqty = totalqty + parseFloat(qty);
                }
            }

            var bcqty = 0;
            for (var w = 0; w < PlanCompFabricDetSave.length; w++) {
                if (PlanCompFabricDetSave[w].BColorID == bd && PlanCompFabricDetSave[w].CompSlNo == csln) {

                    var qty = PlanCompFabricDetSave[w].BColorPQty;
                    bcqty = bcqty + parseFloat(qty);
                }
            }


            var finqty = 0;
            for (var w = 0; w < PlanCompFabricDetSave.length; w++) {
                if (PlanCompFabricDetSave[w].BColorID == bd && PlanCompFabricDetSave[w].CompSlNo == csln) {

                    var qty = PlanCompFabricDetSave[w].FColorPQty;
                    finqty = finqty + parseFloat(qty);
                }
            }


            var totclrqty = parseFloat(bcqty) + parseFloat(finqty);

            for (var w = 0; w < PlanCompFabricDet.length; w++) {
                if (PlanCompFabricDet[w].BColorID == bc && PlanCompFabricDet[w].snumb == sno) {

                    totalqty = totalqty - totclrqty;
                }
            }
            totalqty = totalqty.toFixed(3);
            var yarnlistobj = {
                PlanId: 0,
                Fabric: result[j].Fabric,
                FabricID: result[j].FabricID,
                Fabric_ColorId: result[j].BColorID,
                Fabric_Weight: totalqty,
                Fabric_type: result[j].type,//result[j].FabricType,
                EntryDate: new Date($('#txtEntryDate').val()),
                BColor: result[j].Bcolor,
                SlNo: result[j].CompSlNo,
                YPlanmasID: 0,
                YSlno: leng,
                ComponentId: ComponentId,
                Component: Component
            }



            PlanYarnSave.push(yarnlistobj);
        }
    }

    //loadYarndetTab
    PlanYarnSave = jQuery.grep(PlanYarnSave, function (value) {
        return value.Fabric_Weight != 0;
    });
    loadYarnSavedetTab(PlanYarnSave);

    var ctry = [];
    ctry = PlanYarnSave;
    ctry = $.grep(ctry, function (e) {
        if (e.SlNo == s) {
            return e;
        }
    });
    PlanYarn = ctry;

    loadYarndetTab(PlanYarn);
}

function loadfcpqty(val) {

    Fabindex;
    indexforfabfill = Fabindex;
    fabfillvar = 'FIQT';
    var currentrow = PlanCompFabricDet.slice(Fabindex);
    var s = currentrow[0].CompSlNo;
    var sno = currentrow[0].snumb;
    var wt = currentrow[0].Weight;
    var bq = currentrow[0].BColorPQty;
    var bclrqty = currentrow[0].BColorPQty;
    // var finclrqty = currentrow[0].FColorPQty;
    var fd = currentrow[0].FabricID;
    var bc = currentrow[0].BColorID;

    var tot = parseFloat(bq) + parseFloat(val);
    if (tot > wt) {
        //alert('Sum of PurQty should not exceed actual weight');
        var msg = 'Sum of Purchase Quantity should not exceed actual weight...';
        var flg = 4;
        var mo = 1;
        AlartMessage(msg, flg, mo);
        $.each(PlanCompFabricDet, function () {
            if (this.CompSlNo == s && this.snumb == sno) {
                this.FColorPQty = 0;

            }
        });
        return true;
    }

    $.each(PlanCompFabricDet, function () {
        if (this.CompSlNo == s && this.snumb == sno) {
            this.FColorPQty = val;

        }
    });
    //loadCompFabTable(PlanCompFabricDet);
    $.each(PlanCompFabricDetSave, function () {
        if (this.CompSlNo == s && this.snumb == sno) {
            this.FColorPQty = val;

        }
    });
    loadCompFabSaveTable(PlanCompFabricDetSave);



    var result = [];
    $.each(PlanCompFabricDet, function (i, e) {
        var matchingItems = $.grep(result, function (item) {
            return item.BColorID === e.BColorID;
        });
        if (matchingItems.length === 0) {
            result.push(e);
        }
    });

    if (result.length > 0) {
        //PlanYarnSave = [];

        //PlanYarnSave = jQuery.grep(PlanYarnSave, function (value) {
        //    return value.FabricID != fd;
        //});

        PlanYarnSave = jQuery.grep(PlanYarnSave, function (value) {
            return value.SlNo != CompSlNo;
        });


        var Cs = result[0].CompSlNo;
        var ComponentId = 0;
        var Component = '';
        for (var t = 0; t < compList.length; t++) {
            if (compList[t].CompSlNo == Cs) {
                ComponentId = compList[t].ComponentID;
                Component = compList[t].ComponentName;
            }
        }

        //result = jQuery.grep(result, function (value) {
        //    return value.Weight == 0;
        //});
        for (var j = 0; j < result.length; j++) {


            if (PlanYarnSave.length == 0) {
                leng = 1;

            }
            else {
                leng = PlanYarnSave.length + 1;

            }

            var bd = result[j].BColorID;
            var snumb = result[j].snumb;
            var csln = result[j].CompSlNo;
            var totalqty = 0;
            for (var w = 0; w < PlanCompFabricDetSave.length; w++) {
                if (PlanCompFabricDetSave[w].BColorID == bd && PlanCompFabricDetSave[w].CompSlNo == csln) {

                    var qty = PlanCompFabricDetSave[w].Weight;
                    totalqty = totalqty + parseFloat(qty);
                }
            }

            var bcqty = 0;
            for (var w = 0; w < PlanCompFabricDetSave.length; w++) {
                if (PlanCompFabricDetSave[w].BColorID == bd && PlanCompFabricDetSave[w].CompSlNo == csln) {

                    var qty = PlanCompFabricDetSave[w].BColorPQty;
                    bcqty = bcqty + parseFloat(qty);
                }
            }


            var finqty = 0;
            for (var w = 0; w < PlanCompFabricDetSave.length; w++) {
                if (PlanCompFabricDetSave[w].BColorID == bd && PlanCompFabricDetSave[w].CompSlNo == csln) {

                    var qty = PlanCompFabricDetSave[w].FColorPQty;
                    finqty = finqty + parseFloat(qty);
                }
            }


            var totclrqty = parseFloat(bcqty) + parseFloat(finqty);

            for (var w = 0; w < PlanCompFabricDet.length; w++) {
                if (PlanCompFabricDet[w].BColorID == bc && PlanCompFabricDet[w].snumb == sno) {

                    totalqty = totalqty - totclrqty;
                }
            }
            totalqty = totalqty.toFixed(3);


            var yarnlistobj = {
                PlanId: 0,
                Fabric: result[j].Fabric,
                FabricID: result[j].FabricID,
                Fabric_ColorId: result[j].BColorID,
                Fabric_Weight: totalqty,
                Fabric_type: result[j].type,//result[j].FabricType,
                EntryDate: new Date($('#txtEntryDate').val()),
                BColor: result[j].Bcolor,
                SlNo: result[j].CompSlNo,
                YPlanmasID: 0,
                YSlno: leng,
                ComponentId: ComponentId,
                Component: Component
            }



            PlanYarnSave.push(yarnlistobj);
        }
    }

    //loadYarndetTab
    PlanYarnSave = jQuery.grep(PlanYarnSave, function (value) {
        return value.Fabric_Weight != 0;
    });
    loadYarnSavedetTab(PlanYarnSave);

    var ctry = [];
    ctry = PlanYarnSave;
    ctry = $.grep(ctry, function (e) {
        if (e.SlNo == s) {
            return e;
        }
    });
    PlanYarn = ctry;

    loadYarndetTab(PlanYarn);

}

function loadcolor() {
    debugger;
    $.ajax({
        //url: "/PlanningFabric/ColorList",
        //data: JSON.stringify({}),
        //type: "GET",
        //contentType: "application/json;charset=utf-8",
        //dataType: "json",
        url: "/PlanningFabric/ColorList",
        data: JSON.stringify({}),
        type: "POST",
        contentType: "application/json; charset=utf-8",
        dataType: "json",
        success: function (json) {

            
            BaseColorlist = json;
            FinishColorlist = json;
            for (var t = 0; t < BaseColorlist.length; t++) {
                if (basecolorid > 0) {
                    if (BaseColorlist[t].ColorID == basecolorid) {
                        bcid = BaseColorlist[t].ColorID;
                        bc = BaseColorlist[t].Color;
                    }
                } else {
                    if (BaseColorlist[t].Color == "GREY") {
                        bcid = BaseColorlist[t].ColorID;
                        bc = BaseColorlist[t].Color;
                    }
                }
            }


        },
        failure: function (errMsg) {
            alert(errMsg);
        }
    });
}
function loadprintlistcolor() {
    debugger;
    $.ajax({
        url: "/PlanningFabric/PrintColorList",
        data: JSON.stringify({}),
        type: "POST",
        contentType: "application/json;charset=utf-8",
        dataType: "json",
        success: function (result) {
            debugger;
            PrintColorlist = result;

            if (Mod == 1) {


                //  $('#btnUpdate').show();
                $('#btnAdd').hide();
                $('#btnDelete').hide();

                CmNo = 1;
                CompNo = 1;
                //EditDetCompPlanList(ItemId, StyleRId, PLID);
                //EditCompFabricLossPlanList(PLID, CmNo);
                //EditCompYarnLossPlanList();
                //var FID = 0;
                //EditDetPlanYarnDyeingList(PLID, ItemId, FID, StyleRId);
            }


            if (Mod == 2) {


                $('#btnUpdate').hide();
                $('#btnAdd').hide();
                $('#btnDelete').show();

                CmNo = 1;
                CompNo = 1;
                //EditDetCompPlanList(ItemId, StyleRId, PLID);
                //EditCompFabricLossPlanList(PLID, CmNo);
                //EditCompYarnLossPlanList();
                //var FID = 0;
                //EditDetPlanYarnDyeingList(PLID, ItemId, FID, StyleRId);
            }
            if (OrdApp == "Y") {
                $('#btnAdd').hide();
                $('#btnUpdate').hide();
                $('#btnDelete').hide();

            }

        },
        failure: function (errMsg) {
            alert(errMsg);
        }
    });



}

//Edit Case
function Loadtotfabriceditdet(PlId) {

    $.ajax({
        url: "/PlanningConsumption/ListConFabricEdittotDetails",
        data: JSON.stringify({ PlanID: PlId }),
        type: "POST",
        contentType: "application/json;charset=utf-8",
        dataType: "json",
        async: false,
        success: function (result) {
            debugger;
            var obj = result;
            //$.each(obj, function () {
            //    //this.BColorID = bcid;
            //    //this.Bcolor = bc;
            //    this.FabricID = FabricId;
            //    this.Fabric = Fabric;
            //});
            if (BaseColorlist.length > 0 && BaseColorlist != undefined) {
                for (var f = 0; f < obj.length; f++) {
                    var fid = obj[f].FabricID;
                    for (var n = 0; n < compList.length; n++) {
                        if (compList[n].FabricID == fid) {
                            obj[f].Fabric = compList[n].FabricName;
                        }
                    }
                }
                for (var c = 0; c < obj.length; c++) {
                    var bcl = obj[c].BColorID;
                    for (var n = 0; n < BaseColorlist.length; n++) {
                        if (BaseColorlist[n].ColorID == bcl) {
                            obj[c].Bcolor = BaseColorlist[n].Color;
                        }
                    }
                }
                for (var t = 0; t < obj.length; t++) {
                    var fci = obj[t].FColorID;
                    for (var n = 0; n < FinishColorlist.length; n++) {
                        if (FinishColorlist[n].ColorID == fci) {
                            obj[t].Fcolor = FinishColorlist[n].Color;
                        }
                    }
                }
                for (var e = 0; e < obj.length; e++) {
                    if (obj[e].BColorID == 0) {
                        obj[e].BColorID = bcid;
                        obj[e].Bcolor = bc;
                    }
                }
                for (var t = 0; t < obj.length; t++) {
                    var pci = obj[t].PColorID;
                    for (var n = 0; n < FinishColorlist.length; n++) {
                        if (FinishColorlist[n].ColorID == pci) {
                            obj[t].PColor = FinishColorlist[n].Color;
                        }
                    }
                }
                PlanCompFabricDetSave = obj;
                chklist = PlanCompFabricDetSave;
                var totconwgt = 0;
                for (i = 0; chklist.length > i; i++) {
                    totconwgt = totconwgt + chklist[i].Weight;
                }
                var diffsno = 0;
                var chksno = 0;
                for (i = 0; PlanCompFabricDetSave.length > i; i++) {
                    diffsno = PlanCompFabricDetSave[i].CompSlNo;
                    if (diffsno > 0 && diffsno != chksno) {
                        fcompno = PlanCompFabricDetSave[i].CompSlNo;
                        loadfillloss();
                    }
                    chksno = diffsno;
                }


                //var totfabwgt = 0;

                //for (j = 0; PlanCompFabricDetSave.length > j; j++) {
                //    totfabwgt = totfabwgt + PlanCompFabricDetSave[j].Weight;
                //}

                //if (Math.round(totconwgt) != Math.round(totfabwgt)) {
                //    $('#profile-tab1').attr('style', 'background-color : #acf2c1');
                //    $('#profile-tab2').attr('style', 'background-color : #acf2c1');
                //}

                loadCompFabSaveTable(PlanCompFabricDetSave);

                //var color = [];
                //color = PlanCompFabricDetSave;
                fcompno = CompSlNo;
                PlanCompFabricDet = $.grep(PlanCompFabricDetSave, function (v) {
                    return (v.CompSlNo == CompSlNo && v.ColorID == FGarcolorid);
                });



                if (PlanCompFabricDet.length > 0) {
                    $('#txtFabShow').val(PlanCompFabricDet[0]['Fabric']);
                    $('#txtFinishShow').val(PlanCompFabricDet[0]['FinishWidth']);
                    $('#txtGreyShow').val(PlanCompFabricDet[0]['GreyWidth']);
                    //PlanCompFabricDet = color;
                    //loadCompFabTable(PlanCompFabricDet);

                    if ($('#tCDbody').DataTable().rows().count() > 0) {
                        var listlen=PlanCompFabricDet.length;
                        var tbllen=$('#tCDbody').DataTable().rows().count();
                        if (listlen != tbllen) {
                            loadCompFabTable(PlanCompFabricDet);
                        } else {
                            fillfabrictbl(PlanCompFabricDet);
                        }
                    }
                    else {
                        loadCompFabTable(PlanCompFabricDet);
                    }

                }

                    if (PlanCompFabricDet.length > 0) {
                        Fplid = PlanCompFabricDet[0].FPlanId;
                    }

                    if (PlanCompFabricDetSave.length > 0) {

                        LoadPlanFabric(PLID);
                    }

               
            }
            LoadPlanFabric(PLID);
            ListYarnEditDetDetails(PLID);
        },
        failure: function (errMsg) {
            alert(errMsg);
        }
    });
}

function Loadtotcopyfabriceditdet(PlId) {

    $.ajax({
        url: "/PlanningConsumption/ListConCopyFabricEdittotDetails",
        data: JSON.stringify({ PlanID: PlId, CopyStyRowID: StyleRId, CopyItemID: ItemId }),
        type: "POST",
        contentType: "application/json;charset=utf-8",
        dataType: "json",
        success: function (result) {
            debugger;
            var obj = result;
            //$.each(obj, function () {
            //    //this.BColorID = bcid;
            //    //this.Bcolor = bc;
            //    this.FabricID = FabricId;
            //    this.Fabric = Fabric;
            //});
            if (BaseColorlist.length > 0 && BaseColorlist != undefined) {
                for (var f = 0; f < obj.length; f++) {
                    var fid = obj[f].FabricID;
                    for (var n = 0; n < compList.length; n++) {
                        if (compList[n].FabricID == fid) {
                            obj[f].Fabric = compList[n].FabricName;
                        }
                    }
                }
                for (var c = 0; c < obj.length; c++) {
                    var bcl = obj[c].BColorID;
                    for (var n = 0; n < BaseColorlist.length; n++) {
                        if (BaseColorlist[n].ColorID == bcl) {
                            obj[c].Bcolor = BaseColorlist[n].Color;
                        }
                    }
                }


                for (var t = 0; t < obj.length; t++) {
                    var fci = obj[t].FColorID;
                    for (var n = 0; n < FinishColorlist.length; n++) {
                        if (FinishColorlist[n].ColorID == fci) {
                            obj[t].Fcolor = FinishColorlist[n].Color;
                        }
                    }
                }


                for (var e = 0; e < obj.length; e++) {
                    if (obj[e].BColorID == 0) {
                        obj[e].BColorID = bcid;
                        obj[e].Bcolor = bc;
                    }
                }

                PlanCompFabricDetSave = obj;
                loadCompFabSaveTable(PlanCompFabricDetSave);



                //var color = [];
                //color = PlanCompFabricDetSave;

                PlanCompFabricDet = $.grep(PlanCompFabricDetSave, function (v) {
                    return (v.CompSlNo == CompSlNo && v.ColorID == FGarcolorid);
                });

                //PlanCompFabricDet = color;


              


                //loadCompFabTable(PlanCompFabricDet);
                if (PlanCompFabricDet.length > 0) {


                    var listlen = PlanCompFabricDet.length;
                    var tbllen = $('#tCDbody').DataTable().rows().count();
                    if (listlen != tbllen) {
                        loadCompFabTable(PlanCompFabricDet);
                    } else {
                        fillfabrictbl(PlanCompFabricDet);
                    }


                    Fplid = PlanCompFabricDet[0].FPlanId;
                }
                if (PlanCompFabricDetSave.length > 0) {

                    LoadPlanCopyFabric(PlId);
                }
            }

        },
        failure: function (errMsg) {
            alert(errMsg);
        }
    });
}

function EditCompFabricLossPlanList(PlId, CompNo) {


    $.ajax({
        url: "/PlanningConsumption/ListCompFabricLossDetails",
        data: JSON.stringify({ PlanID: PlId, CNo: CompNo }),
        type: "POST",
        contentType: "application/json;charset=utf-8",
        dataType: "json",
        async: false,
        success: function (result) {


            PlanLossSave = result;
            if (PlanLossSave.length == 0) {
                $('#FabricLossId').hide();
            }
            PlanLoss = $.grep(PlanLossSave, function (e) {
                return e.CompSNo == CompSlNo;
            });
            debugger;
            loadFabricLossTable(PlanLoss);

            loadFabricLossSaveTable(PlanLossSave);


            if (Fplan == "N") {

                //LoadPlanFabriCompDetails(PlId, CNo);
                LoadPlanFabriComp(PLID);
                LoadPlanFabriCompDetails(PlId, CompNo);
            } else {
                //if (connewadd != 1) {
                Loadtotfabriceditdet(PLID);
                var FID = 0;
                LoadPlanFabric(PLID);
                ListYarnEditDetDetails(PLID);
                EditDetPlanYarnDyeingList(PLID, ItemId, FID, StyleRId);
                // }

            }



        },
        failure: function (errMsg) {
            alert(errMsg);
        }
    });


}
//

//////////////////////////////////////////////////////////
/////////////////////////////////YARN/////////////////////
$(document).ready(function () {
    $("#tFYDbody ").dataTable().find("tbody").on('click', 'tr', function () {
        index = (this.rowIndex) - 1;
    });
});

$(document).ready(function () {
  
    
    //component details
    $('#btnYarnViewAdd').click(function () {
        debugger;
        $("#YarnDetId").show();

        var d = $("#ddlYarn option:selected").text();
        var S = $("#ddlCount option:selected").text();
        var c = $("#ddlColor option:selected").text();
        if (PlanYarnDet.length > 0) {
            for (var q = 0; q < PlanYarnDet.length; q++) {
                if (PlanYarnDet[q].BaseColorID == BCLID && PlanYarnDet[q].FabricID == FBRID) {
                    if (PlanYarnDet[q].Yarn == d && PlanYarnDet[q].Size == S && PlanYarnDet[q].Color == c) {
                        //alert('Must be different yarn...');
                        var msg = 'Must be different yarn...';
                        var flg = 4;
                        var mo = 1;
                        AlartMessage(msg, flg, mo);
                        return true;
                    }
                }
            }
        }
       

        var totalper = 0;
        for (var s = 0; s < PlanYarnDet.length; s++) {
            if (PlanYarnDet[s].YBaseColorID == BCLID && PlanYarnDet[s].FabricID == FBRID) {
                var per = PlanYarnDet[s].Knit_In_Per;
                totalper = totalper + parseFloat(per);
            }
        }
        Bper = 100 - totalper;
        if (Bper == 0) {
            //alert("Already Weight has been Exists");
            var msg = 'Already Weight has been Exists...';
            var flg = 4;
            var mo = 1;
            AlartMessage(msg, flg, mo);
            fnClearYarnDetailsControls();
            return true;

        }
        if (Mod == 0) {
            ///////hide the loss table
            $("#CList1").show();
            ///////
        }

        var Dye = 0;

        if ($('#Dyeing').is(":checked")) {
            Dye = 1;
        }
        else {
            Dye = 0;
        }


        Eweight = $('#txtWeight').val();
        AWeight = $('#txtActualWeight').val();
        TEWeight = parseInt(TEWeight) + parseInt(Eweight);



        var lengdp = 0;
        var isAllValid = true;



        if ($('#ddlYarn').val() == "0") {
            isAllValid = false;
            $('#ddlYarn').siblings(".select2-container").css('border', '1px solid red');
        }
        else {
            $('#ddlYarn').siblings(".select2-container").css('border', '1px solid lightgrey');
        }

        if ($('#ddlCount').val() == "0") {
            isAllValid = false;
            $('#ddlCount').siblings(".select2-container").css('border', '1px solid red');
        }
        else {
            $('#ddlCount').siblings(".select2-container").css('border', '1px solid lightgrey');
        }

        if ($('#ddlColor').val() == "0") {
            isAllValid = false;
            $('#ddlColor').siblings(".select2-container").css('border', '1px solid red');
        }
        else {
            $('#ddlColor').siblings(".select2-container").css('border', '1px solid lightgrey');
        }


        if ($('#txtPer').val() == "") {
            isAllValid = false;
            $('#txtPer').css('border-color', 'Red');
        }
        else {
            $('#txtPer').css('border-color', 'lightgrey');
        }
        if ($('#txtWeight').val() == 0) {
            isAllValid = false;
            $('#txtWeight').css('border-color', 'Red');
        }
        else {
            $('#txtWeight').css('border-color', 'lightgrey');
        }

        if ($('#txtActualWeight').val() == 0) {
            isAllValid = false;
            $('#txtActualWeight').css('border-color', 'Red');
            //alert("Please Check the Fabric Weight...");
            var msg = 'Please Check the Fabric Weight...';
            var flg = 4;
            var mo = 1;
            AlartMessage(msg, flg, mo);
        }
        else {
            $('#txtActualWeight').css('border-color', 'lightgrey');
        }


        var slno = [];
        $.each(PlanYarnDetSave, function () {
            var sl = this.SlNo;
            slno.push(sl);
        });
        var largest = 0;

        for (var i = 0; i < slno.length; i++) {
            if (slno[i] > largest) {
                var largest = slno[i];
            }
        }


        if (isAllValid) {
            var I_id = $('#ddlYarn').val();
            var S_id = $('#ddlCount').val();
            var c_id = $('#ddlColor').val();
            var ChkStock = 0;
            $.ajax({
                url: "/PlanningConsumption/LoadStockDetails",
                data: JSON.stringify({ Itemid: I_id, Sizeid: S_id, Colorid: c_id }),
                type: "POST",
                async: false,
                contentType: "application/json;charset=utf-8",
                dataType: "json",
                success: function (result) {
                    debugger;
                    var obj = result;
                    //var stkdet = [];
                    //stkdet = result;
                    //$('#lblstk').show;
                    //LoadStockDetTable(stkdet);
                    if (obj != "") {
                        ChkStock = 1;
                    }
                },
                failure: function (errMsg) {
                    alert(errMsg);
                }
            });

            var YarnDetObj = {
                Yarn: $("#ddlYarn option:selected").text(),
                Knit_In_ItemId: $('#ddlYarn').val(),
                Size: $("#ddlCount option:selected").text(),
                Knit_In_SizeID: $('#ddlCount').val(),
                Color: $("#ddlColor option:selected").text(),
                Knit_in_ColorID: $('#ddlColor').val(),
                Knit_In_Per: $('#txtPer').val(),
                Knit_In_Qty: $('#txtWeight').val(),
                Knit_In_ActQty: $('#txtActualWeight').val(),
                Loss_per: $('#txtLossPer').val(),
                Dyeing_Req: Dye,
                // txtPer: $('#txtActualWeight').val(),
                YSlNo: YlNo,//YarnMasSerno
                YplanDetID: 0,
                YPlanMasID: 0,
                SlNo: largest + 1,
                FabricID: FBRID,
                BaseColorID: BCLID,
                CompSno: CompSlNo,
                stockTrans:ChkStock,
                Status: ['<img src="images/first.png" class="btnSave"><img src="images/delete.png" class="btnDelete"/>']
            };

            var b = $('#txtWeight').val();
            Weight = Weight - b;

            //if (Weight == 0) {


            //    $("#ddlYarn").prop("disabled", true);
            //    $("#ddlColor").prop("disabled", true);
            //    $("#ddlCount").prop("disabled", true);
            //} else {
            //    $("#ddlYarn").prop("disabled", false);
            //    $("#ddlColor").prop("disabled", false);
            //    $("#ddlCount").prop("disabled", false);
            //}
            var Percnt = YarnDetObj.Knit_In_Per;

            PlanYarnDetSave.push(YarnDetObj);
            yarndet = [];

            for (var x = 0; x < PlanYarnDetSave.length; x++) {
                //if (PlanYarnDetSave[x].YSlNo == YlNo && PlanYarnDetSave[x].CompSno == SlNo) {
                //    yarndet.push(PlanYarnDetSave[x]);
                //}

                if (PlanYarnDetSave[x].BaseColorID == BCLID && PlanYarnDetSave[x].FabricID == FBRID) {
                    yarndet.push(PlanYarnDetSave[x]);
                }
            }
            PlanYarnDet = yarndet;
            Loadsepyarn(PlanYarnDet);
            LoadsepSaveyarn(PlanYarnDetSave);
            

            totyarn();
            fnClearYarnDetailsControls();

            if (PlanYarnDet.length > 0) {
                Bper = 0;

                var totalper = 0;
                for (var s = 0; s < PlanYarnDet.length; s++) {
                    if (PlanYarnDet[s].BaseColorID == BCLID && PlanYarnDet[s].FabricID == FBRID) {
                        var per = PlanYarnDet[s].Knit_In_Per;
                        totalper = totalper + parseFloat(per);
                    }
                }
                Bper = 100 - totalper;
            }



            var PerQty = $('#txtPer').val();



            if (Bper > 0) {
                $("#txtPer").val(Bper);
                var NAweight = Bper / 100 * wt;
                NAweight = NAweight.toFixed(3);
                $('#txtWeight').val(NAweight);
                $('#txtActualWeight').val(NAweight);
                //$("#ddlYarn").prop("disabled", false);
                //$("#ddlColor").prop("disabled", false);
                //$("#ddlCount").prop("disabled", false);
                Bper = 0;


            }
                //else if (Bper == 0 && KQty > 0 && VYSlNo == YlNo) {
            else if (Bper == 0) {

                //yarndet = [];
                //alert("Already Weight has been Exists");
                $('#txtWeight').val(0);
                $('#txtActualWeight').val(0);


                // if (Weight == 0) {


                $("#ddlYarn").prop("disabled", true);
                $("#ddlColor").prop("disabled", true);
                $("#ddlCount").prop("disabled", true);
                //} else {

                //}

            } else {
                wt = wt.toFixed(3);
                $('#txtWeight').val(wt);
                $('#txtActualWeight').val(wt);
                //$("#ddlYarn").prop("disabled", false);
                //$("#ddlColor").prop("disabled", false);
                //$("#ddlCount").prop("disabled", false);
            }

            //valid
            Loadsepyarn(yarndet);

            // }


            //PlanYarnDyeingSave = YarnDyeingSave;
            if (Dye == 1) {

                var test = [];
                if (PlanYarnDyeingSave.length > 0) {

                    for (var f = 0; f < PlanYarnDyeingSave.length; f++) {
                        if (PlanYarnDyeingSave[f].YDSlNo == lengdp) {
                            test.push(PlanYarnDyeingSave[f]);
                        }
                    }

                }
                var totgc = [];
                var totgc2 = [];
                if (YarnDyeing.length > 0) {
                    var garidlist = [];
                    var garclid = 0;
                    for (var e = 0; e < YarnDyeing.length; e++) {
                        var gid = YarnDyeing[e].Garment_ColorID;

                        var totalqty = 0;

                        for (var q = 0; q < PlanCompFabricDetSave.length; q++) {
                            if (PlanCompFabricDetSave[q].ColorID == gid && PlanCompFabricDetSave[q].BColorID == BCLID && PlanCompFabricDetSave[q].FabricID == FBRID) {
                                garidlist.push(PlanCompFabricDetSave[q].ColorID);
                                var qty = PlanCompFabricDetSave[q].Weight;
                                totalqty = totalqty + parseFloat(qty);
                            }
                        }
                        var bcqty = 0;
                        for (var w = 0; w < PlanCompFabricDetSave.length; w++) {
                            if (PlanCompFabricDetSave[w].ColorID == gid && PlanCompFabricDetSave[w].BColorID == BCLID && PlanCompFabricDetSave[w].FabricID == FBRID) {
                                var qty = PlanCompFabricDetSave[w].BColorPQty;
                                bcqty = bcqty + parseFloat(qty);
                            }
                        }
                        var finqty = 0;
                        for (var p = 0; p < PlanCompFabricDetSave.length; p++) {
                            if (PlanCompFabricDetSave[p].ColorID == gid && PlanCompFabricDetSave[p].BColorID == BCLID && PlanCompFabricDetSave[p].FabricID == FBRID) {

                                var qty = PlanCompFabricDetSave[p].FColorPQty;
                                finqty = finqty + parseFloat(qty);
                            }
                        }

                        var totclrqty = parseFloat(bcqty) + parseFloat(finqty);

                        var tot = parseFloat(totalqty - totclrqty);

                        totgc.push(tot);
                        if (garclid != gid) {
                            totgc2.push(tot);
                        }
                        else {
                            tot = 0;
                            totgc2.push(tot);
                        }
                        garclid = gid;
                    }

                    if (totgc.length > 0) {
                        for (var p = 0; p < totgc.length; p++) {
                            var g = totgc[p];
                            totgc[p] = parseFloat((Percnt * g) / 100).toFixed(3);
                        }
                    }
                    if (totgc2.length > 0) {
                        for (var p = 0; p < totgc2.length; p++) {
                            var g = totgc2[p];
                            totgc2[p] = parseFloat((Percnt * g) / 100).toFixed(3);
                        }
                    }
                }
                $.unique(garidlist);
                if (test.length == 0) {
                    for (var l = 0; l < YarnDyeing.length; l++) {
                        var gcl = YarnDyeing[l].Garment_ColorID;
                        for (var r = 0; r < garidlist.length; r++) {
                            if (garidlist[r] == gcl) {
                                var lengp = 0;
                                if (PlanYarnDyeingSave.length == 0) {
                                    lengp = 1;
                                }
                                else {
                                    lengp = PlanYarnDyeingSave.length + 1;
                                }
                                var obj = {
                                    CColor: YarnDyeing[l].CColor,
                                    CColorID: YarnDyeing[l].CColorID,
                                    GColor: YarnDyeing[l].GColor,
                                    Garment_ColorID: YarnDyeing[l].Garment_ColorID,
                                    SlNo: lengp,
                                    CompSlNo: CompSlNo,// currentro1[0]['CompSno'],
                                    YDSlNo: lengdp,// currentro1[0]['SlNo'],
                                    ActWeight: totgc[l],
                                    Weight: 0,
                                    FabId: FID,//currentro1[0]['FabricID'],
                                    GWeight: totgc[l],
                                    Yarn_DyeColorID: YarnDyeing[l].CColorID,
                                    Qty_Per: 0,
                                    Purchase_Qty: 0,
                                    Loss: 0,
                                    ColorSeq: 0,
                                    PerWeight: 0,
                                    YPlanDetID: 0,
                                    YPlanDyeID: 0,
                                    Courses: 0

                                }
                                PlanYarnDyeingSave.push(obj);
                            }
                        }
                    }
                    loadYarnDyeAddTableSave(PlanYarnDyeingSave);
                }

                var ctry = [];
                ctry = PlanYarnDyeingSave;

                ctry = $.grep(ctry, function (e) {
                    if (e.YDSlNo == lengdp) {
                        return e;
                    }
                });
                PlanYarnDyeing = ctry;

                loadYarnDyeAddTable(PlanYarnDyeing);
            }
            else {
                var ctry = [];
                PlanYarnDyeing = ctry;
                loadYarnDyeAddTable(PlanYarnDyeing);
            }

        }
        var tbl = $('#tblyarnDetails');
        tbl.DataTable().column(19).visible(false);
    });

    
    function fnClearYarnDetailsControls() {

        $('#ddlYarn').val('0').trigger('change');
        $('#ddlColor').val('0').trigger('change');
        $('#ddlCount').val('0').trigger('change');

        $('#txtPer').val('');
        $('#txtWeight').val('');
        $('#txtActualWeight').val('');
        $('#txtLossPer').val('');
        document.getElementById("Dyeing").checked = false;

    }

    $(document).on('click', '.btnYarnedit', function () {

        Mode = 1;
        //if (YlNo == 0) {
        //    alert('Please select any one yarn...');
        //    return true;
        //}
        rowindex = $(this).closest('tr').index();

        var cur1 = PlanYarnDet.slice(rowindex);

        if (Mod == 0) {

            $('#ddlYarn').val(cur1[0]['Knit_In_ItemId']).trigger('change');
            $('#txtPer').val(cur1[0]['Knit_In_Per']);
            $('#ddlCount').val(cur1[0]['Knit_In_SizeID']).trigger('change');
            $('#txtWeight').val(cur1[0]['Knit_In_Qty']);
            $('#ddlColor').val(cur1[0]['Knit_in_ColorID']).trigger('change'); 
            $('#txtLossPer').val(cur1[0]['Loss_per']);
            $('#txtActualWeight').val(cur1[0]['Knit_In_Qty']);
            yneditslno = cur1[0]['SlNo'];
        } else {

            $('#ddlYarn').val(cur1[0]['Knit_In_ItemId']).trigger('change');
            $('#txtPer').val(cur1[0]['Knit_In_Per']);
            $('#ddlCount').val(cur1[0]['Knit_In_SizeID']).trigger('change');
            $("#txtWeight").val(cur1[0]['Knit_In_Qty']);
            $('#ddlColor').val(cur1[0]['Knit_in_ColorID']).trigger('change');
            $('#txtLossPer').val(cur1[0]['Loss_per']);
            $('#txtActualWeight').val(cur1[0]['Knit_In_Qty']);

            Yplanmasid = cur1[0]['YSlNo'];

            yneditslno = cur1[0]['SlNo'];

            var CItemId = cur1[0]['Knit_In_ItemId'];
            var CSizeId = cur1[0]['Knit_In_SizeID'];
            var CColorId = cur1[0]['Knit_in_ColorID'];

            for (var t = 0; t < PlanYarnSave.length; t++) {
                if (PlanYarnSave[t].YSlno == Yplanmasid) {
                    Weight = PlanYarnSave[t].Fabric_Weight;
                }
            }


            CheckPoMadeEntry(CItemId, CColorId, CSizeId);

        }
        var Chk = cur1[0]['Dyeing_Req'];

        if (Chk == 0) {
            document.getElementById("Dyeing").checked = false;
        } else if (Chk == 1) {
            document.getElementById("Dyeing").checked = true;
        }

        $('#btnYarnViewAdd').hide();
        $('#btnYarnViewUpdate').show();
    });



    //Yarn Loss
    $(document).on('click', '.btnYarnDetLoss', function () {

        $("#YarnLossId").show();
        rowindex = $(this).closest('tr').index();
        var cur1 = PlanYarnDet.slice(rowindex);
        YDetSlNo = cur1[0].SlNo;
        var CompSLNo = cur1[0].CompSno;

        //Yarn Loss

        if (PlanYarnLossSave.length > 0) {

            PlanYarnLoss = $.grep(PlanYarnLossSave, function (e) {
                return e.SNo == YDetSlNo && e.CompSNo == CompSLNo;

            });
            loadyarnLossTable(PlanYarnLoss);
        }




    });
    //



    $('#btnYarnViewUpdate').click(function () {
        debugger;
        var currentrowsel = PlanYarnDet.slice(rowindex);

        currentrowsel[0]['Knit_In_ItemId'] = $("#ddlYarn").val();
        currentrowsel[0]['Yarn'] = $("#ddlYarn option:selected").text();

        currentrowsel[0]['Knit_In_SizeID'] = $("#ddlCount").val();
        currentrowsel[0]['Size'] = $("#ddlCount option:selected").text();

        currentrowsel[0]['Knit_in_ColorID'] = $("#ddlColor").val();
        currentrowsel[0]['Color'] = $("#ddlColor option:selected").text();
        currentrowsel[0]['Loss_per'] = $("#txtLossPer").val();
        currentrowsel[0]['Knit_In_Qty'] = $("#txtWeight").val();
        currentrowsel[0]['Knit_In_ActQty'] = $("#txtActualWeight").val();
        currentrowsel[0]['Knit_In_Per'] = $("#txtPer").val();

        var Percnt = $("#txtPer").val();
        var Dye = 0;
        //CompSlNo = currentrowsel[0]['CompSno'];
        var ysno = currentrowsel[0]['SlNo'];
        //var detid = currentrowsel[0]['CompSno'];
        var ysl = currentrowsel[0]['YSlNo'];

        if ($('#Dyeing').is(":checked")) {
            currentrowsel[0]['Dyeing_Req'] = 1;
            Dye = 1;
        }
        else {
            currentrowsel[0]['Dyeing_Req'] = 0;
            Dye = 0;
        }

        var I_id = $('#ddlYarn').val();
        var S_id = $('#ddlCount').val();
        var c_id = $('#ddlColor').val();
        var ChkStock = 0;
        $.ajax({
            url: "/PlanningConsumption/LoadStockDetails",
            data: JSON.stringify({ Itemid: I_id, Sizeid: S_id, Colorid: c_id }),
            type: "POST",
            async: false,
            contentType: "application/json;charset=utf-8",
            dataType: "json",
            success: function (result) {
                debugger;
                var obj = result;
                if (obj != "") {
                    ChkStock = 1;
                }
            },
            failure: function (errMsg) {
                alert(errMsg);
            }
        }); 
        currentrowsel[0]['stockTrans'] = ChkStock;
        PlanYarnDet[rowindex] = currentrowsel[0];
        for (var d = 0; d < PlanYarnDetSave.length; d++) {
            //if (PlanYarnDetSave[d].SlNo == ysno && PlanYarnDetSave[d].CompSno == detid) {
            //    PlanYarnDetSave[d] = currentrowsel[0];;

            //}
            if (PlanYarnDetSave[d].SlNo == ysno && PlanYarnDetSave[d].YSlNo == ysl) {
                PlanYarnDetSave[d] = currentrowsel[0];

            }
        }
        yarndet = PlanYarnDet;
        Loadsepyarn(PlanYarnDet);
        LoadsepSaveyarn(PlanYarnDetSave);
        $('#btnYarnViewUpdate').hide();
        $('#btnYarnViewAdd').show();
        var YarnDyeingSave = [];
        for (i = 0; PlanYarnDetSave.length > i; i++) {
            if (PlanYarnDetSave[i].Dyeing_Req == true || PlanYarnDetSave[i].Dyeing_Req == 1) {
                for (j = 0; PlanYarnDyeingSave.length > j; j++) {
                    if (PlanYarnDetSave[i].SlNo == PlanYarnDyeingSave[j].YDSlNo) {
                        YarnDyeingSave.push(PlanYarnDyeingSave[j]);
                    }
                }
            }
        }

        PlanYarnDyeingSave = YarnDyeingSave;
        var b = $('#txtWeight').val();

        Weight = Weight - b;

        if (PlanYarnDet.length > 0) {
            Bper = 0;

            var totalper = 0;
            for (var s = 0; s < PlanYarnDet.length; s++) {
                if (PlanYarnDet[s].YSlNo == ysl) {
                    var per = PlanYarnDet[s].Knit_In_Per;
                    totalper = totalper + parseFloat(per);
                }
            }
            Bper = 100 - totalper;
        }


        //  if (Mod == 0) {

        var PerQty = $('#txtPer').val();
        fnClearYarnDetailsControls();


        if (Bper > 0) {
            $("#txtPer").val(Bper);
            var NAweight = Bper / 100 * wt;
            NAweight = NAweight.toFixed(3);
            $('#txtWeight').val(NAweight);
            $('#txtActualWeight').val(NAweight);
            Bper = 0;

            //var Tweight = 0;

            //Tweight = Tweight + NAweight;

            //alert(Tweight);

        }

        else if (Bper == 0) {

            //yarndet = [];
            //alert("Already Weight has been Exists");
            $('#txtWeight').val(0);
            $('#txtActualWeight').val(0);


        } else {
            $('#txtWeight').val(wt);
            $('#txtActualWeight').val(wt);
        }

        //valid
        Loadsepyarn(yarndet);

        //Delete Yarn dyeing if any
        //if (PlanYarnDyeingSave.length > 0) {

        //    if (Mod == 0) {
        //        PlanYarnDyeingSave = $.grep(PlanYarnDyeingSave, function (e) {
        //            return e.YDSlNo != ysl || e.CompSlNo != detid;
        //        });

        //        PlanYarnDyeing = $.grep(PlanYarnDyeing, function (e) {
        //            return e.YDSlNo != ysl || e.CompSlNo != detid;
        //        });
        //    }
        //    else {
        //        PlanYarnDyeingSave = $.grep(PlanYarnDyeingSave, function (e) {
        //            return e.YDSlNo != ysno || e.CompSlNo != detid;
        //        });

        //        PlanYarnDyeing = $.grep(PlanYarnDyeing, function (e) {
        //            return e.YDSlNo != ysno || e.CompSlNo != detid;
        //        });
        //    }
        //    loadYarnDyeAddTableSave(PlanYarnDyeingSave);
        //    loadYarnDyeAddTable(PlanYarnDyeing);
        totyarn();
        if (Dye == 1) {

            var test = [];
            if (PlanYarnDyeingSave.length > 0) {
                var dtry = [];
                dtry = PlanYarnDyeingSave;

                dtry = $.grep(dtry, function (e) {
                    if (e.YDSlNo != ysno) {
                        return e;
                    }
                });
                PlanYarnDyeingSave = dtry;
            }
            var totgc = [];
            var totgc2 = [];
            if (YarnDyeing.length > 0) {
                var garidlist = [];
                var garclid = 0;
                for (var e = 0; e < YarnDyeing.length; e++) {
                    var gid = YarnDyeing[e].Garment_ColorID;
                    var totalqty = 0;

                    for (var q = 0; q < PlanCompFabricDetSave.length; q++) {
                        if (PlanCompFabricDetSave[q].ColorID == gid && PlanCompFabricDetSave[q].BColorID == BCLID && PlanCompFabricDetSave[q].FabricID == FBRID) {
                            garidlist.push(PlanCompFabricDetSave[q].ColorID);
                            var qty = PlanCompFabricDetSave[q].Weight;
                            totalqty = totalqty + parseFloat(qty);
                        }
                    }
                    var bcqty = 0;
                    for (var w = 0; w < PlanCompFabricDetSave.length; w++) {
                        if (PlanCompFabricDetSave[w].ColorID == gid && PlanCompFabricDetSave[w].BColorID == BCLID && PlanCompFabricDetSave[w].FabricID == FBRID) {
                            var qty = PlanCompFabricDetSave[w].BColorPQty;
                            bcqty = bcqty + parseFloat(qty);
                        }
                    }
                    var finqty = 0;
                    for (var p = 0; p < PlanCompFabricDetSave.length; p++) {
                        if (PlanCompFabricDetSave[p].ColorID == gid && PlanCompFabricDetSave[p].BColorID == BCLID && PlanCompFabricDetSave[p].FabricID == FBRID) {

                            var qty = PlanCompFabricDetSave[p].FColorPQty;
                            finqty = finqty + parseFloat(qty);
                        }
                    }

                    var totclrqty = parseFloat(bcqty) + parseFloat(finqty);

                    var tot = parseFloat(totalqty - totclrqty);

                    totgc.push(tot);
                    if (garclid != gid) {
                        totgc2.push(tot);
                    }
                    else {
                        tot = 0;
                        totgc2.push(tot);
                    }
                    garclid = gid;
                }

                if (totgc.length > 0) {
                    for (var p = 0; p < totgc.length; p++) {
                        var g = totgc[p];
                        totgc[p] = parseFloat((Percnt * g) / 100).toFixed(3);
                    }
                }
                if (totgc2.length > 0) {
                    for (var p = 0; p < totgc2.length; p++) {
                        var g = totgc2[p];
                        totgc2[p] = parseFloat((Percnt * g) / 100).toFixed(3);
                    }
                }
            }
            $.unique(garidlist);
            //if (test.length == 0) {
            for (var l = 0; l < YarnDyeing.length; l++) {
                var gcl = YarnDyeing[l].Garment_ColorID;
                for (var r = 0; r < garidlist.length; r++) {
                    if (garidlist[r] == gcl) {
                        var lengp = 0;
                        if (PlanYarnDyeingSave.length == 0) {
                            lengp = 1;
                        }
                        else {
                            lengp = PlanYarnDyeingSave.length + 1;
                        }
                        var obj = {
                            CColor: YarnDyeing[l].CColor,
                            CColorID: YarnDyeing[l].CColorID,
                            GColor: YarnDyeing[l].GColor,
                            Garment_ColorID: YarnDyeing[l].Garment_ColorID,
                            SlNo: lengp,
                            CompSlNo: CompSlNo,// currentro1[0]['CompSno'],
                            YDSlNo: ysno,// currentro1[0]['SlNo'],
                            ActWeight: totgc[l],
                            Weight: 0,
                            FabId: FID,//currentro1[0]['FabricID'],
                            GWeight: totgc[l],
                            Yarn_DyeColorID: YarnDyeing[l].CColorID,
                            Qty_Per: 0,
                            Purchase_Qty: 0,
                            Loss: 0,
                            ColorSeq: 0,
                            PerWeight: 0,
                            YPlanDetID: 0,
                            YPlanDyeID: 0,
                            Courses: 0

                        }
                        PlanYarnDyeingSave.push(obj);
                    }
                }
            }
            loadYarnDyeAddTableSave(PlanYarnDyeingSave);
            // }

            var ctry = [];
            ctry = PlanYarnDyeingSave;

            ctry = $.grep(ctry, function (e) {
                if (e.YDSlNo == ysno) {
                    return e;
                }
            });
            PlanYarnDyeing = ctry;

            loadYarnDyeAddTable(PlanYarnDyeing);
        }
        else {
            var ctry = [];
            PlanYarnDyeing = ctry;
            loadYarnDyeAddTable(PlanYarnDyeing);
        }
        // }


    });

    $(document).on('click', '.btnYarnremove', function () {

        rowindex = $(this).closest('tr').index();
        var currentrowsel = PlanYarnDet.slice(rowindex);


        var CItemId = currentrowsel[0]['Knit_In_ItemId'];
        var CSizeId = currentrowsel[0]['Knit_In_SizeID'];
        var CColorId = currentrowsel[0]['Knit_in_ColorID'];



        CheckPoMadeEntry(CItemId, CColorId, CSizeId);

        if (CEPItemList.length == 0) {

            var compsn = currentrowsel[0]['CompSno'];
            var sno = currentrowsel[0]['SlNo'];
            PlanYarnDet.splice(rowindex, 1);
            for (var f = 0; f < PlanYarnDetSave.length; f++) {
                if (PlanYarnDetSave[f].CompSno == compsn && PlanYarnDetSave[f].SlNo == sno) {
                    PlanYarnDetSave.splice(f, 1);
                }
            }
            document.getElementById("tblyarnDetails").deleteRow(rowindex + 1);

            LoadsepSaveyarn(PlanYarnDetSave);
        }
    });




    //


});


//function MsgModalconfirm() {
//    debugger;

//    MsgModalclose();
//    var tbl = $('#tblyarnDetails');
//    tbl.DataTable().column(19).visible(false);
    
//}
function Loadsepyarn(list) {
    debugger;
    //var cur1 = PlanYarnDet.slice(0);
    ////KQty = cur1[0]['Knit_In_Qty'];
    //$('#tblyarnDetails').DataTable().destroy();
    var inputcount = 0;
    $('#tblyarnDetails tr').each(function () {
        inputcount++;
    });

    if (inputcount > 0) {
        $('#tblyarnDetails').DataTable().destroy();
    }
    $('#tblyarnDetails').empty();
    $('#tblyarnDetails').DataTable({
        data: list,
        scrollY: 300,
        scrollCollapse: true,
        paging: false,
        fixedColumns: false,
        select: false,
        scrollX: "100%",
        scrollXInner: "100%",
        scroller: false,
        "bSort": false,
        "rowCallback": function (row, data, index) {
            if (data.OrdQty > "0") {
                $('td', row).css('background-color', '#FCF3CF');
            }

        },
        columns: [
                   { title: "SlNo", data: "SlNo", "visible": false },
                    { title: "CompSlNo", data: "CompSno", "visible": false },
                   { title: "YplanDetID", data: "YplanDetID", "visible": false },
                   { title: "Knit_In_ItemId", data: "Knit_In_ItemId", "visible": false },
                   { title: "Yarn", data: "Yarn" },
                   { title: "Knit_In_SizeID", data: "Knit_In_SizeID", "visible": false },
                   { title: "Counts", data: "Size" },
                   { title: "Knit_in_ColorID", data: "Knit_in_ColorID", "visible": false },
                   { title: "Color", data: "Color" },
                   { title: "%", data: "Knit_In_Per" },
                   //{ title: "Weight(Kgs)", data: "Knit_In_Qty" },
                   {
                       title: "Weight(Kgs)", data: "Knit_In_Qty",
                       render: function (data) {

                           return '<input type="text" id="txtWght" class="form-control"  style="width: 50px;text-align: center;" value=' + data + ' disabled >';

                       },
                   },
                   { title: "Loss%", data: "Loss_per" },
                   { title: "Actual Weight", data: "Knit_In_ActQty" },
                   { title: "YD SlNo", data: "YSlNo", "visible": false },
                   { title: "FabricID", data: "FabricID", "visible": false },
                   { title: "BaseCID", data: "BaseColorID", "visible": false },
                   { title: "YMasID", data: "YPlanMasID", "visible": false },
                   { title: "Dyeing", data: "Dyeing_Req" },

               {
                   title: "Action", data: "OrdQty",
                   render: function (data) {
                       if (data != 0) {
                           return '<div style="display:inline-flex;"><button  type="button" data-toggle="tooltip" data-placement="top" title="Edit" style="width: 20px;padding: 0px;height: 20px;border-radius:10px;" class="btnYarnedit btn btn-round btn-warning"> <i class="fa fa-pencil-square-o"></i> </button> <button type="button" data-toggle="tooltip" data-placement="top" title="Remove" disabled="disabled" style="width: 20px;padding: 0px;height: 20px;border-radius:10px;" class="btnYarnremove btn btn-danger btn-round"> <i class="fa fa-times"></i> </button> </div>'
                       } else {
                           return '<div style="display:inline-flex;"><button type="button" data-toggle="tooltip" data-placement="top" title="Edit" style="width: 20px;padding: 0px;height: 20px;border-radius:10px;" class="btnYarnedit btn btn-round btn-warning"> <i class="fa fa-pencil-square-o"></i> </button> <button type="button" data-toggle="tooltip" data-placement="top" title="Remove" style="width: 20px;padding: 0px;height: 20px;border-radius:10px;" class="btnYarnremove btn btn-danger btn-round"> <i class="fa fa-times"></i> </button> </div>'
                       }
                   },
                   "sDefaultContent": '<div style="display:inline-flex;"><button type="button" data-toggle="tooltip" data-placement="top" title="Edit" style="width: 20px;padding: 0px;height: 20px;border-radius:10px;" class="btnYarnedit btn btn-round btn-warning"> <i class="fa fa-pencil-square-o"></i> </button> <button type="button" data-toggle="tooltip" data-placement="top" title="Remove" style="width: 20px;padding: 0px;height: 20px;border-radius:10px;" class="btnYarnremove btn btn-danger btn-round"> <i class="fa fa-times"></i> </button> </div>'
               },
               {
                   title: "Stock Trans", data: "stockTrans", "visible": false,
                   //"sDefaultContent": '<div style="display:inline-flex;"><button type="button" data-toggle="tooltip" data-placement="top" title="Edit" style="width: 20px;padding: 0px;height: 20px;border-radius:10px;margin-left:20px;" class=" btn btn-round btn-info"> <i class="gg-arrows-exchange"></i> </button>  </div>'
                   render: function (data) {
                       if (data == 1) {
                           return '<div style="display:inline-flex;"><button type="button" data-toggle="tooltip" data-placement="top" title="Stock Transfer" style="width: 20px;padding: 0px;height: 20px;border-radius:10px;margin-left:20px;" onclick="StockTransfer()" class=" btn btn-round btn-primary"> <i class="gg-arrows-exchange"></i> </button>  </div>'
                       } else {
                           return ''
                       }
                   },
               }
        ]

    });

    $("#tblyarnDetails tr").click(function () {
        var selected = $(this).hasClass("selected");
        $("#tblyarnDetails tr").removeClass("selected");
        if (!selected)
            $(this).addClass("selected");
    });
}

function LoadsepSaveyarn(list) {

    //var cur1 = PlanYarnDet.slice(0);
    //KQty = cur1[0]['Knit_In_Qty'];
    //$('#tblyarnSaveDetails').DataTable().destroy();
    var inputcount = 0;
    $('#tblyarnSaveDetails tr').each(function () {
        inputcount++;
    });

    if (inputcount > 0) {
        $('#tblyarnSaveDetails').DataTable().destroy();
    }
    $('#tblyarnSaveDetails').empty();
    $('#tblyarnSaveDetails').DataTable({
        data: list,
        scrollY: 300,
        scrollCollapse: true,
        paging: false,
        fixedColumns: false,
        select: false,
        scrollX: "100%",
        scrollXInner: "100%",
        scroller: false,
        "bSort": false,
        columns: [
                   { title: "SlNo", data: "SlNo" },
                    { title: "CompSlNo", data: "CompSno" },
                   { title: "YplanDetID", data: "YplanDetID" },
                   { title: "Knit_In_ItemId", data: "Knit_In_ItemId" },
                   { title: "Yarn", data: "Yarn" },
                   { title: "Knit_In_SizeID", data: "Knit_In_SizeID" },
                   { title: "Counts", data: "Size" },
                   { title: "Knit_in_ColorID", data: "Knit_in_ColorID" },
                   { title: "Color", data: "Color" },
                   { title: "%", data: "Knit_In_Per" },
                   { title: "Weight(Kgs)", data: "Knit_In_Qty" },
                   { title: "Loss%", data: "Loss_per" },
                   { title: "Actual Weight", data: "Knit_In_ActQty" },
                   { title: "YD SlNo", data: "YSlNo" },
                   { title: "FabricID", data: "FabricID" },
                   { title: "BaseCID", data: "BaseColorID" },
                   { title: "YMasID", data: "YPlanMasID" },
                   { title: "Dyeing", data: "Dyeing_Req" },


        ]

    });
}
function LoadPer(val) {
    debugger;
    if ($('#txtPer').val() > 100) {
        //alert('Percentage should below 100...');
        var msg = 'Percentage should below 100...';
        var flg = 4;
        var mo = 1;
        AlartMessage(msg, flg, mo);
        return true;
    }
    var totper = 0;
    for (var i = 0; PlanYarnDet.length > i; i++) {
        if (PlanYarnDet[i].SlNo != yneditslno) {
            totper = totper + parseFloat(PlanYarnDet[i].Knit_In_Per);
        }
    }
    totper = totper + parseFloat($('#txtPer').val());
    if (totper > 100) {
        //alert('Percentage total should be 100...');
        var msg = 'Percentage total should be 100...';
        var flg = 4;
        var mo = 1;
        AlartMessage(msg, flg, mo);
        $('#txtPer').val('0');
        $('#txtWeight').val('0');
        $('#txtActualWeight').val('0');
        return true;
    }

    var Wgt = wt;

    var Per = $('#txtPer').val();
    var AWght = (Per / 100) * Wgt;
    AWght = AWght.toFixed(3);
    $('#txtWeight').val(AWght);
    $('#txtActualWeight').val(AWght);

}


//$(document).on('click', '.btnYarn', function () {
//    debugger;
//    rowindex = $(this).closest('tr').index();
//    var currentrowp = PlanYarn.slice(rowindex);

//    FBRID = currentrowp[0]['FabricID'];
//    BCLID = currentrowp[0]['Fabric_ColorId'];
//    slno = currentrowp[0]['SlNo'];
//    wt = currentrowp[0]['Fabric_Weight'];




//    var table = $('#tYFbody').DataTable();
//    SlNo = table.row($(this).parents('tr')).data()["SlNo"];
//    YlNo = table.row($(this).parents('tr')).data()["YSlno"];
//    var wght = table.row($(this).parents('tr')).data()["Fabric_Weight"];
//    //YlNo = $(this).closest('tr').find('td:eq(1)').html();
//    //SlNo = $(this).closest('tr').find('td:eq(0)').html();
//    //var wght = $(this).closest('tr').find('td:eq(5)').html();
//    Weight = wght;
//    // YlNo = $(this).closest('tr').find('td:eq(0)').html();
//    //FID = $(this).closest('tr').find('td:eq(1)').html();
//    //BCID = $(this).closest('tr').find('td:eq(5)').html();
//    //Wght = $(this).closest('tr').find('td:eq(4)').html();

//    //rowindex = $(this).closest('tr').index();
//    var currentro1 = [];//PlanYarnDetSave.slice(rowindex);

//    for (var g = 0; g < PlanYarnDetSave.length; g++) {
//        //if (PlanYarnDetSave[g].CompSno == SlNo && PlanYarnDetSave[g].YSlNo == YlNo) {
//        //    currentro1.push(PlanYarnDetSave[g]);
//        //}

//        if (PlanYarnDetSave[g].YSlNo == YlNo) {
//            currentro1.push(PlanYarnDetSave[g]);
//        }
//    }

//    // if (PlanYarnDet.length > 0) {
//    if (Mod == 0) {
//        if (currentro1.length > 0) {
//            Bper = 0;
//            fid = currentro1[0]['FabricID'];
//            BCLID = currentro1[0]['BaseColorID'];
//            var Wgt = currentro1[0]['Knit_In_Qty'];

//            //var Ngt = Ngt + Wgt;
//            //alert(Ngt);
//            var totalper = 0;
//            for (var s = 0; s < PlanYarnDet.length; s++) {
//                if (PlanYarnDet[s].YSlNo == YlNo) {
//                    var per = PlanYarnDet[s].Knit_In_Per;
//                    totalper = totalper + parseFloat(per);
//                }
//            }
//            Bper = 100 - totalper;

//            Loadsepyarn(PlanYarnDet);
//        }
//        else {
//            $("#txtPer").val('');
//            $('#txtWeight').val(wght);
//            $('#txtActualWeight').val(wght);
//            PlanYarnDet = [];
//            Loadsepyarn(PlanYarnDet);
//            return true;

//        }
//    }
//    // }

//    if ((Mod == 1 && PlanYarnDet.length == 0) || YsBp == 1) {
//        $("#txtPer").val('');
//        $('#txtWeight').val(wght);
//        $('#txtActualWeight').val(wght);
//        $("#ddlYarn").prop("disabled", false);
//        $("#ddlColor").prop("disabled", false);
//        $("#ddlCount").prop("disabled", false);
//        yarndet = [];
//        for (var x = 0; x < PlanYarnDetSave.length; x++) {
//            //if (PlanYarnDetSave[x].YSlNo == YlNo && PlanYarnDetSave[x].CompSno == SlNo) {
//            //    yarndet.push(PlanYarnDetSave[x]);
//            //}

//            if (PlanYarnDetSave[x].YSlNo == YlNo) {
//                yarndet.push(PlanYarnDetSave[x]);
//            }
//        }
//        PlanYarnDet = yarndet;
//        Loadsepyarn(PlanYarnDet);
//        return true;
//    }

//    rowindex = $(this).closest('tr').index();
//    var currentrowpyarn = PlanYarn.slice(rowindex);
//    var YMID = currentrowpyarn[0]['YPlanmasID'];

//    //if (YMID > 0 && Mod == 1 || Mod == 2) {

//    //    var OrdNo = $('#txtOrderNo').val();
//    //    var StyleId = $('#txtHStyleId').val();
//    //    ListYarnEditDetDetails(YMID, OrdNo, StyleId);
//    //}

//    //if (Mod == 0) {

//    var PerQty = $('#txtPer').val();



//    if (Bper > 0) {
//        $("#txtPer").val(Bper);
//        var NAweight = Bper / 100 * wght;
//        $('#txtWeight').val(NAweight);
//        $('#txtActualWeight').val(NAweight);

//        $("#ddlYarn").prop("disabled", false);
//        $("#ddlColor").prop("disabled", false);
//        $("#ddlCount").prop("disabled", false);

//        Bper = 0;
//        yarndet = [];
//        for (var x = 0; x < PlanYarnDetSave.length; x++) {
//            //if (PlanYarnDetSave[x].YSlNo == YlNo && PlanYarnDetSave[x].CompSno == SlNo) {
//            //    yarndet.push(PlanYarnDetSave[x]);
//            //}

//            if (PlanYarnDetSave[x].YSlNo == YlNo) {
//                yarndet.push(PlanYarnDetSave[x]);
//            }
//        }
//        PlanYarnDet = yarndet;
//        Loadsepyarn(PlanYarnDet);
//        LoadsepSaveyarn(PlanYarnDetSave);
//        //var Tweight = 0;

//        //Tweight = Tweight + NAweight;

//        //alert(Tweight);

//    }
//        //else if (Bper == 0 && KQty > 0 && VYSlNo == YlNo) {
//    else if (Bper == 0) {
//        //$('#txtWeight').val(Wght);
//        //$('#txtActualWeight').val(Wght);
//        yarndet = [];
//        // alert("Already Weight has been Exists");
//        $('#txtWeight').val(0);
//        $('#txtActualWeight').val(0);
//        $("#ddlYarn").prop("disabled", true);
//        $("#ddlColor").prop("disabled", true);
//        $("#ddlCount").prop("disabled", true);
//        for (var x = 0; x < PlanYarnDetSave.length; x++) {
//            //if (PlanYarnDetSave[x].YSlNo == YlNo && PlanYarnDetSave[x].CompSno == SlNo) {
//            //    yarndet.push(PlanYarnDetSave[x]);
//            //}

//            if (PlanYarnDetSave[x].YSlNo == YlNo) {
//                yarndet.push(PlanYarnDetSave[x]);
//            }
//        }
//        PlanYarnDet = yarndet;
//        Loadsepyarn(PlanYarnDet);
//        LoadsepSaveyarn(PlanYarnDetSave);
//    } else {
//        $('#txtWeight').val(wght);
//        $('#txtActualWeight').val(wght);
//    }


//    if (PlanYarnDyeingSave.length > 0) {
//    }

//});


$(document).on('click', '.btnDUpdate', function () {


    rowindex = $(this).closest('tr').index();
    var cur3 = PlanYarnDyeing.slice(rowindex);


    var YPlanDetID = cur3[0]['YPlanDetID'];
    var SlNo = cur3[0]['SlNo'];
    var Garment_ColorID = cur3[0]['Garment_ColorID'];
    var GWeight = cur3[0]['GWeight'];
    var Yarn_DyeColorID = cur3[0]['CColorID'];
    var Qty_Per = cur3[0]['Qty_Per'];
    var Weight = cur3[0]['Weight'];
    var Purchase_Qty = $(this).closest('tr').find('#txtPurchase_Qty').val();
    //var Purchase_Qty = $(this).closest('tr').find('td:eq(4)').html();
    var Courses = cur3[0]['Courses'];
    var PerQty = $(this).closest('tr').find('#txtQty_Per').val();
    //var PerQty = $(this).closest('tr').find('td:eq(4)').html();
    var NWt = GWeight * PerQty / 100;
    var YDSlNo1 = cur3[0]['YDSlNo'];
    var YDyeID = cur3[0]['YPlanDyeID'];


    if (PerQty == 0) {
        //alert("Please Enter the Percentage..");
        var msg = 'Please Enter the Percentage...';
        var flg = 4;
        var mo = 1;
        AlartMessage(msg, flg, mo);
        return true;
    }

    if (Mod == 0) {

        var cnt = $("#tblcompyarndetails1 tr").length - 1;

        var Data = "";

        // PackItemList = [];
        for (var i = 1; i <= cnt; i++) {

            // var OCId = $("#tblcompyarndetails1 tr:eq(" + i + ") td:eq(2)").html();
            // var OSizeId = $("#tblcompyarndetails1 tr:eq(" + i + ") td:eq(5)").html();
            var SNo = $("#tblcompyarndetails1 tr:eq(" + i + ") td:eq(1)").html();
            //var OStyleRow = $("#tblcompdetails1 tr:eq(" + i + ") td:eq(4)").html();
            //var OQuantity = $("#tblcompdetails1 tr:eq(" + i + ") td:eq(7)").html();



        }

        if (PlanYarnDyeing.length > 0) {
            if (SNo == SlNo) {
                //alert("Already Exists..");
                var msg = 'Already Exists...';
                var flg = 4;
                var mo = 1;
                AlartMessage(msg, flg, mo);
                //$('#txtQty').keyup(function () {
                //    table.search($(this).val()).draw();
                //})
                return true;


            }
        }


    }

    if (PerQty == 0) {
        //alert("Please Enter Per for Yarn Dyeing:")
        var msg = 'Please Enter Per for Yarn Dyeing:';
        var flg = 4;
        var mo = 1;
        AlartMessage(msg, flg, mo);
        return true;
    }

    if (Purchase_Qty > Weight) {
        //alert("Purchase Qty are not exceed then weight:");
        var msg = 'Purchase Qty are not exceed then weight:';
        var flg = 4;
        var mo = 1;
        AlartMessage(msg, flg, mo);
        return true;
    }

    if (Dying == 0 && Mod == 0) {
        //alert("Dyeing are not Select For this Yarn");
        var msg = 'Dyeing are not Select For this Yarn...';
        var flg = 4;
        var mo = 1;
        AlartMessage(msg, flg, mo);
        return true;
    }


    if (Yarn_DyeColorID == 0) {
        //alert("Dyeing are not taken in Style Entry");
        var msg = 'Dyeing are not taken in Style Entry...';
        var flg = 4;
        var mo = 1;
        AlartMessage(msg, flg, mo);
        return true;
    }



    var confabdetListObj = {
        YPlanDetID: YPlanDetID,
        SlNo: SlNo,
        Garment_ColorID: Garment_ColorID,
        GWeight: GWeight,
        Yarn_DyeColorID: Yarn_DyeColorID,
        Qty_Per: PerQty,
        Weight: NWt,
        Purchase_Qty: Purchase_Qty,
        Courses: Courses,
        YDSlNo: YDSlNo1,
        YPlanDyeID: YDyeID,
    };

    NPlanYarnDyeing.push(confabdetListObj);
    loadconfpDetTable(confabdetListObj);
    //alert("Updated Sucessfully");
    var msg = 'Updated Sucessfully...';
    var flg = 4;
    var mo = 1;
    AlartMessage(msg, flg, mo);
    //}
});

function loadconfpDetTable(confabListObj) {
    // $('#tblcompyarndetails1').DataTable().destroy();
    var inputcount = 0;
    $('#tblcompyarndetails1 tr').each(function () {
        inputcount++;
    });

    if (inputcount > 0) {
        $('#tblcompyarndetails1').DataTable().destroy();
    }
    $('#tblcompyarndetails1').empty();
    $('#tblcompyarndetails1').DataTable({
        data: NPlanYarnDyeing,
        scrollY: 300,
        scrollCollapse: true,
        paging: false,
        fixedColumns: false,
        select: false,
        scrollX: "100%",
        scrollXInner: "100%",
        scroller: false,
        "bSort": false,
        columns: [



            { title: "YPlanDetID", data: "YPlanDetID" },
            { title: "Sl No", data: "SlNo" },
            { title: "Garment_ColorID", data: "Garment_ColorID", "visible": false },
            { title: "Grey Weight", data: "GWeight" },
            { title: "Yarn_DyeColorID", data: "Yarn_DyeColorID" },
            { title: "Qty Per", data: "Qty_Per" },
            { title: "Weight", data: "Weight" },
            { title: "Purchase Qty", data: "Purchase_Qty" },
            { title: "Courses", data: "Courses" },
            { title: "YD SlNo", data: "YDSlNo" },
            { title: "YPlanDyeID", data: "YPlanDyeID" },


        ]
    });
}

function CheckFab() {

    var Wgt = $('#txtWeight').val();

    if (Wgt == 0) {
        //alert("Please Select the Fabric Row:By click the Yarn Button");
    }
}
//Edit Case Yarn
function LoadPlanFabric(PLID) {



    $.ajax({
        url: "/PlanningConsumption/ListPlanningFabricYarn",
        data: JSON.stringify({ PlanID: PLID }),
        type: "POST",
        contentType: "application/json;charset=utf-8",
        dataType: "json",
        success: function (result) {
            debugger;
            PlanYarnSave = result;
            loadYarnSavedetTab(PlanYarnSave);


            //var yarn = [];
            //yarn = PlanYarnSave;

            //yarn = $.grep(yarn, function (v) {
            //    return (v.SlNo == CompSlNo);
            //});

            PlanYarn = PlanYarnSave;
            loadYarndetTab(PlanYarn);
            if (PlanYarn.length > 0) {
                FBRID = PlanYarn[0].FabricID;
                BCLID = PlanYarn[0].Fabric_ColorId;
                //fabid = PlanYarn[0].FabricID;

                //cl = PlanYarn[0].SlNo;
            }
            //if (PlanYarnSave.length > 0) {

            //    ListYarnEditDetDetails(PLID);

            //}

        },
        failure: function (errMsg) {
            alert(errMsg);
        }
    });


}

function LoadPlanCopyFabric(PLID) {



    $.ajax({
        url: "/PlanningConsumption/ListPlanningCopyFabricYarn",
        data: JSON.stringify({ PlanID: PLID, CopyStyRowID: StyleRId, CopyItemID: ItemId }),
        type: "POST",
        contentType: "application/json;charset=utf-8",
        dataType: "json",
        success: function (result) {
            debugger;
            PlanYarnSave = result;
            loadYarnSavedetTab(PlanYarnSave);


            var yarn = [];
            yarn = PlanYarnSave;

            yarn = $.grep(yarn, function (v) {
                return (v.SlNo == CompSlNo);
            });

            PlanYarn = yarn;
            loadYarndetTab(PlanYarn);
            if (PlanYarn.length > 0) {
                yslno = PlanYarn[0].YSlno;
                fabid = PlanYarn[0].FabricID;

                cl = PlanYarn[0].SlNo;
            }
            if (PlanYarnSave.length > 0) {

                ListYarnCopyEditDetDetails(PLID);

            }

        },
        failure: function (errMsg) {
            alert(errMsg);
        }
    });


}
function StockTransfer() {
    debugger;
    ViewStock = 1;
    StockTranferMode = 1;

    $('#stktransgoto').show();
    $('#stktrans').hide();





}
function ListYarnEditDetDetails(PlId) {
    debugger;
    $.ajax({
        url: "/PlanningConsumption/ListYarnEditDetDetails",
        data: JSON.stringify({ PlanID: PlId }),
        type: "POST",
        contentType: "application/json;charset=utf-8",
        dataType: "json",
        success: function (result) {
            debugger;
            PlanYarnDetSave = result;

            //var totyarnwgt = 0;
            //var totfabwgt = 0;
            //var totfabbwgt = 0;
            //var totfabFwgt = 0;
            //for (i = 0; PlanYarnDetSave.length > i; i++) {
            //    totyarnwgt = totyarnwgt + PlanYarnDetSave[i].Knit_In_Qty;
            //}
            //for (j = 0; PlanCompFabricDetSave.length > j; j++) {
            //    totfabwgt = totfabwgt + PlanCompFabricDetSave[j].Weight;
            //    totfabbwgt = totfabbwgt + PlanCompFabricDetSave[j].BColorPQty;
            //    totfabFwgt = totfabFwgt + PlanCompFabricDetSave[j].FColorPQty;
            //}

            //var tt = totfabbwgt + totfabFwgt;

            //var tt1 = totfabwgt - tt;

            //if (Math.round(tt1) != Math.round(totyarnwgt)) {
            //    $('#profile-tab2').attr('style', 'background-color : #acf2c1');
            //}

            var pyarndetsav = [];

            for (i = 0; PlanYarnSave.length > i; i++) {

                for (j = 0; PlanYarnDetSave.length > j; j++) {
                    if (PlanYarnSave[i].FabricID == PlanYarnDetSave[j].FabricID && PlanYarnSave[i].Fabric_ColorId == PlanYarnDetSave[j].BaseColorID) {
                        pyarndetsav.push(PlanYarnDetSave[j]);
                    }
                }
            }
            PlanYarnDetSave = pyarndetsav;
            for (m = 0; PlanYarnDetSave.length > m; m++) {
                var I_id = PlanYarnDetSave[m].Knit_In_ItemId;
                var S_id = PlanYarnDetSave[m].Knit_In_SizeID;
                var c_id = PlanYarnDetSave[m].Knit_in_ColorID;
                var ChkStock = 0;
                $.ajax({
                    url: "/PlanningConsumption/LoadStockDetails",
                    data: JSON.stringify({ Itemid: I_id, Sizeid: S_id, Colorid: c_id }),
                    type: "POST",
                    async: false,
                    contentType: "application/json;charset=utf-8",
                    dataType: "json",
                    success: function (result) {
                        debugger;
                        var obj = result;
                        //var stkdet = [];
                        //stkdet = result;
                        //$('#lblstk').show;
                        //LoadStockDetTable(stkdet);
                        if (obj != "") {
                            PlanYarnDetSave[m].stockTrans = 1;
                        }
                    },
                    failure: function (errMsg) {
                        alert(errMsg);
                    }
                });
            }
            
            LoadsepSaveyarn(PlanYarnDetSave);

            if (PlanYarnDetSave.length > 0) {
                //var ctry = [];
                //ctry = PlanYarnDetSave;
                //ctry = $.grep(ctry, function (e) {
                //    if (e.YSlNo == YlNo) {
                //        return e;
                //    }
                //});
                //PlanYarnDet = ctry;
                //Loadsepyarn(PlanYarnDet);
                //if (PlanYarnDet.length > 0) {
                //    YarndetCompsn = PlanYarnDet[0].CompSno;
                //    YarndetSlno = PlanYarnDet[0].SlNo;
                //}




                for (var h = 0; h < PlanYarn.length; h++) {

                    var ymslno = PlanYarn[h].YSlno;
                    var fabid = PlanYarn[h].FabricID;
                    var fabclid = PlanYarn[h].Fabric_ColorId;
                    var fabwgt = PlanYarn[h].Fabric_Weight;
                    for (var g = 0; g < PlanYarnDetSave.length; g++) {
                        var ydslno = PlanYarnDetSave[g].YSlNo;

                        if (PlanYarnDetSave[g].FabricID == fabid && PlanYarnDetSave[g].BaseColorID == fabclid) {
                            var kper = PlanYarnDetSave[g].Knit_In_Per;
                            // var Ir = PackItemList[g].ItemRatio;
                            //if (q > 0) {                              
                            //    var quan = assqty * Ir;
                            //} else {
                            //    var quan = 0;
                            //}
                            var quan = kper / 100 * fabwgt;
                            PlanYarnDetSave[g].Knit_In_Qty = parseFloat(quan).toFixed(3);
                            PlanYarnDetSave[g].Knit_In_ActQty = parseFloat(quan).toFixed(3);
                            //var percentagecal = PackItemList[g].Quantity;
                            //var percenval = Math.round((percentagecal * allow / 100));
                            //var allowval = percenval;
                            //PackItemList[g].AllowQty = Math.round(percenval);
                            //PackItemList[g].PQty = parseInt(percentagecal) + parseInt(PackItemList[g].AllowQty);

                        }

                        //var wtable = $('#tblyarnDetails').DataTable();
                        //var wdata = wtable.rows().data();

                        //$('input[id=txtWght]').each(function (ig) {
                        //    if (wdata[ig].FabricID == fabid && wdata[ig].BaseColorID == fabclid && wdata[ig].YSlNo == ymslno) {
                        //        var row = $(this).closest('tr');
                        //        row.find('#txtWght').val(quan);
                        //        //var res = Math.ceil(parseFloat((percentagecal * allow) / 100));
                        //        var res = quan;
                        //        row.find('#txtWght').val(res);
                        //        //var tr = parseInt(quan) + parseInt(res);
                        //        //row.find('#txtWght').val(tr);

                        //    }
                        //});
                    }

                }




                var ycolorempty = [];
                ycolorempty = PlanYarnDetSave;

                if (PlanYarnDetSave.length > 0 && PlanYarnDyeingSave.length > 0) {
                    for (var i = 0; PlanYarnDetSave.length > i; i++) {

                        for (var j = 0; PlanYarnDyeingSave.length > j; j++) {

                            if (PlanYarnDetSave[i].SlNo == PlanYarnDyeingSave[j].YDSlNo) {

                                PlanYarnDyeingSave[j].ActWeight = PlanYarnDetSave[i].Knit_In_Qty;
                                var actwt = PlanYarnDyeingSave[j].ActWeight;
                                var val = PlanYarnDyeingSave[j].Qty_Per;
                                var wt = parseFloat((val * actwt) / 100);
                                PlanYarnDyeingSave[j].Weight = wt;
                            }
                        }
                    }
                }

                ycolorempty = $.grep(ycolorempty, function (v) {
                    return (v.FabricID == FBRID && v.BaseColorID == BCLID);
                });

                PlanYarnDet = ycolorempty;
                var StkChk = 0;
                for (var S = 0; S < PlanYarnDet.length; S++) {
                    var d = PlanYarnDet[S].Yarn;
                    for (var t = 0; t < PlanYarnDetSaveStkChk.length; t++) {
                        if (PlanYarnDetSaveStkChk[t].Yarn == PlanYarnDet[S].Yarn && PlanYarnDetSaveStkChk[t].Color == PlanYarnDet[S].Color && PlanYarnDetSaveStkChk[t].Size == PlanYarnDet[S].Size) {
                            if (PlanYarnDetSaveStkChk[t].stockTrans == 1) {
                                PlanYarnDet[S].stockTrans = 1;
                            }
                        }
                    }
                }
                Loadsepyarn(PlanYarnDet);
                totyarn();
                //if (PlanYarnDet.length > 0) {
                //    var Fid = PlanYarnDet[0].FabricID;
                //    EditDetPlanYarnDyeingList(PlId, ItemId, Fid, StyleRId);
                //}

            }

        },
        failure: function (errMsg) {
            alert(errMsg);
        }
    });


}

function ListYarnCopyEditDetDetails(PlId) {

    $.ajax({
        url: "/PlanningConsumption/ListYarnEditDetDetailsCopy",
        data: JSON.stringify({ PlanID: PlId, CopyStyRowID: StyleRId, CopyItemID: ItemId }),
        type: "POST",
        contentType: "application/json;charset=utf-8",
        dataType: "json",
        success: function (result) {
            debugger;
            PlanYarnDetSave = result;
            LoadsepSaveyarn(PlanYarnDetSave);

            if (PlanYarnDetSave.length > 0) {
                var ctry = [];
                ctry = PlanYarnDetSave;
                ctry = $.grep(ctry, function (e) {
                    if (e.CompSno == cl && e.YSlNo == yslno) {
                        return e;
                    }
                });
                PlanYarnDet = ctry;
                Loadsepyarn(PlanYarnDet);
                if (PlanYarnDet.length > 0) {
                    YarndetCompsn = PlanYarnDet[0].CompSno;
                    YarndetSlno = PlanYarnDet[0].SlNo;
                }
            }

        },
        failure: function (errMsg) {
            alert(errMsg);
        }
    });


}

function EditDetPlanYarnDyeingList(PlanID, ItemID, FabricID, StyleRowID) {

    $.ajax({
        url: "/PlanningConsumption/ListYarnDyeingEditDetails",
        data: JSON.stringify({ PlId: PlanID, ItemID: ItemID, FabricID: FabricID, StyleRowID: StyleRowID }),
        type: "POST",
        contentType: "application/json;charset=utf-8",
        dataType: "json",
        success: function (result) {
            debugger;
            //PlanYarnDyeing = result;
            //loadYarnDyeAddTable(PlanYarnDyeing);

            PlanYarnDyeingSave = result;
            loadYarnDyeAddTableSave(PlanYarnDyeingSave);

            var ycolorempty = [];
            ycolorempty = PlanYarnDetSave;

            if (PlanYarnDetSave.length > 0 && PlanYarnDyeingSave.length > 0) {
                for (var i = 0; PlanYarnDetSave.length > i; i++) {

                    for (var j = 0; PlanYarnDyeingSave.length > j; j++) {

                        if (PlanYarnDetSave[i].SlNo == PlanYarnDyeingSave[j].YDSlNo) {

                            PlanYarnDyeingSave[j].ActWeight = PlanYarnDetSave[i].Knit_In_Qty;
                            var actwt = PlanYarnDyeingSave[j].ActWeight;
                            var val = PlanYarnDyeingSave[j].Qty_Per;
                            var wt = parseFloat((val * actwt) / 100);
                            PlanYarnDyeingSave[j].Weight = wt;
                        }
                    }
                }
            }

        },
        failure: function (errMsg) {
            alert(errMsg);
        }
    });


}
//Yarn Dyeing//





$(document).on('click', '.btnAddDyeing', function () {
    debugger;

    $('#tFYDbody').DataTable().destroy();


    //rowindex = $(this).closest('tr').index();
    //var currentro1 = PlanYarnDet.slice(rowindex);


    var table = $('#tblyarnDetails').DataTable();
    var FID = table.row($(this).parents('tr')).data()["FabricID"];
    var BCID = table.row($(this).parents('tr')).data()["BaseColorID"];
    var Qty = table.row($(this).parents('tr')).data()["Knit_In_Qty"];
    var CompId = table.row($(this).parents('tr')).data()["ComponentId"];
    var Percnt = table.row($(this).parents('tr')).data()["Knit_In_Per"];
    var YlNo = table.row($(this).parents('tr')).data()["YSlNo"];
    var SlNo = table.row($(this).parents('tr')).data()["SlNo"];
    var CompSlNo = table.row($(this).parents('tr')).data()["CompSno"];


    var dye = table.row($(this).parents('tr')).data()["Dyeing_Req"];




    //var FID = currentro1[0]['FabricID'];
    //var BCID = currentro1[0]['Fabric_ColorId'];
    //var Qty = currentro1[0]['Knit_In_Qty'];
    //var CompId = currentro1[0]['ComponentId'];
    //var Percnt = currentro1[0]['Knit_In_Per'];
    //var YlNo = currentro1[0]['YSlNo'];//Yarn Mas Serial number
    //var SlNo = currentro1[0]['SlNo']; //Yarn Det Serial number
    //var CompSlNo = currentro1[0]['CompSno'];//Component Serial number
    //var dye = currentro1[0]['Dyeing_Req'];

    if (dye == 0) {
        //alert('Check the dye value...');
        var msg = 'Check the dye value...';
        var flg = 4;
        var mo = 1;
        AlartMessage(msg, flg, mo);
        PlanYarnDyeing = [];
        loadYarnDyeAddTable(PlanYarnDyeing);
        return true;
    }


    var test = [];
    if (PlanYarnDyeingSave.length > 0) {
        // if (Mod == 0) {
        for (var f = 0; f < PlanYarnDyeingSave.length; f++) {
            if (PlanYarnDyeingSave[f].YDSlNo == SlNo && PlanYarnDyeingSave[f].CompSlNo == CompSlNo) {
                test.push(PlanYarnDyeingSave[f]);
            }
        }
        //}
        //else {
        //    for (var f = 0; f < PlanYarnDyeingSave.length; f++) {
        //        if (PlanYarnDyeingSave[f].YDSlNo == YlNo && PlanYarnDyeingSave[f].CompSlNo == CompSlNo) {
        //            test.push(PlanYarnDyeingSave[f]);
        //        }
        //    }
        //}

    }
    var totgc = [];
    //for (var e = 0; e < YarnDyeing.length; e++) {
    //    var gid = YarnDyeing[e].Garment_ColorID;
    //    var totalamnt = 0;
    //    for (var q = 0; q < PlanCompFabricDetSave.length; q++) {
    //        if (PlanCompFabricDetSave[q].CompSlNo == CompSlNo && PlanCompFabricDetSave[q].ColorID == gid) {
    //            var amount = PlanCompFabricDetSave[q].Weight;
    //            totalamnt = totalamnt + parseFloat(amount);
    //        }
    //    }
    //    totgc.push(totalamnt);
    //}
    //if (totgc.length > 0) {
    //    for (var p = 0; p < totgc.length; p++) {
    //        var g = totgc[p];
    //        totgc[p] = parseFloat((Percnt * g) / 100).toFixed(3);
    //    }
    //}

    if (YarnDyeing.length > 0) {
        var garidlist = [];
        for (var e = 0; e < YarnDyeing.length; e++) {
            var gid = YarnDyeing[e].Garment_ColorID;
            var totalqty = 0;

            for (var q = 0; q < PlanCompFabricDetSave.length; q++) {
                if (PlanCompFabricDetSave[q].CompSlNo == CompSlNo && PlanCompFabricDetSave[q].ColorID == gid && PlanCompFabricDetSave[q].BColorID == BCID) {
                    garidlist.push(PlanCompFabricDetSave[q].ColorID);
                    var qty = PlanCompFabricDetSave[q].Weight;
                    totalqty = totalqty + parseFloat(qty);
                }
            }
            var bcqty = 0;
            for (var w = 0; w < PlanCompFabricDetSave.length; w++) {
                if (PlanCompFabricDetSave[w].CompSlNo == CompSlNo && PlanCompFabricDetSave[w].ColorID == gid && PlanCompFabricDetSave[w].BColorID == BCID) {
                    var qty = PlanCompFabricDetSave[w].BColorPQty;
                    bcqty = bcqty + parseFloat(qty);
                }
            }
            var finqty = 0;
            for (var p = 0; p < PlanCompFabricDetSave.length; p++) {
                if (PlanCompFabricDetSave[p].CompSlNo == CompSlNo && PlanCompFabricDetSave[p].ColorID == gid && PlanCompFabricDetSave[p].BColorID == BCID) {

                    var qty = PlanCompFabricDetSave[p].FColorPQty;
                    finqty = finqty + parseFloat(qty);
                }
            }

            var totclrqty = parseFloat(bcqty) + parseFloat(finqty);

            var tot = parseFloat(totalqty - totclrqty);

            totgc.push(tot);
        }

        if (totgc.length > 0) {
            for (var p = 0; p < totgc.length; p++) {
                var g = totgc[p];
                totgc[p] = parseFloat((Percnt * g) / 100).toFixed(3);
            }
        }
    }
    $.unique(garidlist);
    if (test.length == 0) {
        for (var l = 0; l < YarnDyeing.length; l++) {
            var gcl = YarnDyeing[l].Garment_ColorID;
            for (var r = 0; r < garidlist.length; r++) {
                if (garidlist[r] == gcl) {
                    var lengp = 0;
                    if (PlanYarnDyeingSave.length == 0) {
                        lengp = 1;
                    }
                    else {
                        lengp = PlanYarnDyeingSave.length + 1;
                    }
                    var obj = {
                        CColor: YarnDyeing[l].CColor,
                        CColorID: YarnDyeing[l].CColorID,
                        GColor: YarnDyeing[l].GColor,
                        Garment_ColorID: YarnDyeing[l].Garment_ColorID,
                        SlNo: lengp,
                        CompSlNo: CompSlNo,// currentro1[0]['CompSno'],
                        YDSlNo: SlNo,// currentro1[0]['SlNo'],
                        ActWeight: totgc[l],
                        Weight: 0,
                        FabId: FID,//currentro1[0]['FabricID'],
                        GWeight: totgc[l],
                        Yarn_DyeColorID: YarnDyeing[l].CColorID,
                        Qty_Per: 0,
                        Purchase_Qty: 0,
                        Loss: 0,
                        ColorSeq: 0,
                        PerWeight: 0,
                        YPlanDetID: 0,
                        YPlanDyeID: 0,
                        Courses: 0

                    }
                    PlanYarnDyeingSave.push(obj);
                }
            }
        }
        loadYarnDyeAddTableSave(PlanYarnDyeingSave);
    }
    //else {
    //    for (var z = 0; z < PlanYarnDyeingSave.length; z++) {
    //        if (PlanYarnDyeingSave[z].YDSlNo == SlNo && PlanYarnDyeingSave[z].CompSlNo == CompSlNo) {
    //            PlanYarnDyeingSave[z].ActWeight = totgc[z];
    //        }
    //    }
    //}


    var ctry = [];
    ctry = PlanYarnDyeingSave;
    //if (Mod == 0) {
    //    ctry = $.grep(ctry, function (e) {
    //        if (e.CompSlNo == CompSlNo && e.YDSlNo == SlNo) {
    //            return e;
    //        }
    //    });
    //    PlanYarnDyeing = ctry;
    //}
    //else {
    ctry = $.grep(ctry, function (e) {
        if (e.CompSlNo == CompSlNo && e.YDSlNo == SlNo) {
            return e;
        }
    });
    PlanYarnDyeing = ctry;
    //}


    loadYarnDyeAddTable(PlanYarnDyeing);
});

function LoadYarnDyeing(StyleRowId, ItemId, BCID, FID, CompId, YlNo) {

    $.ajax({
        url: "/PlanningConsumption/ListPlanningFabricYarnDyeingDetails",
        data: JSON.stringify({ StyleRowId: StyleRowId, ItemId: ItemId, BColorId: BCID, FabricId: FID, ComponentId: CompId, YSlno: YlNo }),
        type: "POST",
        contentType: "application/json;charset=utf-8",
        dataType: "json",
        success: function (result) {


            YarnDyeing = result;


        },
        failure: function (errMsg) {
            alert(errMsg);
        }
    });
}
function loadYarnDyeAddTable(list) {

    //$('#tFYDbody').DataTable().destroy();
    var inputcount = 0;
    $('#tFYDbody tr').each(function () {
        inputcount++;
    });

    if (inputcount > 0) {
        $('#tFYDbody').DataTable().destroy();
    }
    $('#tFYDbody').empty();
    $('#tFYDbody').DataTable({
        data: list,
        scrollY: 300,
        scrollCollapse: true,
        paging: false,
        fixedColumns: false,
        select: false,
        scrollX: "100%",
        scrollXInner: "100%",
        scroller: false,
        "bSort": false,
        columns: [

            { title: "YPlanDetID", data: "YPlanDetID", "visible": false },
            { title: "Sl No", data: "SlNo", "visible": false },
            { title: "CompSlNo", data: "CompSlNo", "visible": false },
            { title: "Garment_ColorID", data: "Garment_ColorID", "visible": false },
            { title: "Garment Color", data: "GColor" },
            { title: "Weight(Kgs)", data: "ActWeight" },
            { title: "Yarn_DyeColorID", data: "CColorID", "visible": false },
            { title: "Dyeing Color", data: "CColor" },

          {
              title: "%", data: "Qty_Per",
              render: function (data) {

                  return '<input type="text" id="txtQty_Per" class="form-control txtQty_Per"  style="width: 50px;text-align: center;" value=' + data + '>';

              },
          },
          { title: "Weight(Kgs)", data: "Weight" },
          {
              title: "Purchase(Kgs)", data: "Purchase_Qty",
              render: function (data) {

                  return '<input type="text" id="txtPurchase_Qty" class="form-control txtPurchase_Qty"  style="width: 50px;text-align: center;" value=' + data + ' >';

              },
          },

           {
               title: "Courses", data: "Courses",
               render: function (data) {

                   return '<input type="text" id="txtCourses" class="form-control"  style="width: 50px;text-align: center;" value=' + data + ' >';

               },
           },
            { title: "YDSlNo", data: "YDSlNo", "visible": false },
            { title: "YPlanDyeID", data: "YPlanDyeID", "visible": false },



        ]
    });

}

function loadYarnDyeAddTableSave(list) {

    // $('#tFYDbodySave').DataTable().destroy();
    var inputcount = 0;
    $('#tFYDbodySave tr').each(function () {
        inputcount++;
    });

    if (inputcount > 0) {
        $('#tFYDbodySave').DataTable().destroy();
    }
    $('#tFYDbodySave').empty();

    $('#tFYDbodySave').DataTable({
        data: list,
        scrollY: 300,
        scrollCollapse: true,
        paging: false,
        fixedColumns: false,
        select: false,
        scrollX: "100%",
        scrollXInner: "100%",
        scroller: false,
        "bSort": false,
        columns: [

            { title: "YPlanDetID", data: "YPlanDetID" },
            { title: "Sl No", data: "SlNo" },
             { title: "CompSlNo", data: "CompSlNo" },
            { title: "Garment_ColorID", data: "Garment_ColorID" },
            { title: "Garment Color", data: "GColor" },
            { title: "Weight(Kgs)", data: "ActWeight" },
            { title: "Yarn_DyeColorID", data: "CColorID" },
            { title: "Dyeing Color", data: "CColor" },
            { title: "%", data: "Qty_Per" },
            { title: "Weight(Kgs)", data: "Weight" },
            { title: "Purchase(Kgs)", data: "Purchase_Qty" },
            { title: "Courses", data: "Courses" },
            { title: "YDSlNo", data: "YDSlNo" },
            { title: "YPlanDyeID", data: "YPlanDyeID" },


        ]
    });

}
function EditCompYarnLossPlanList() {





    $.ajax({
        url: "/PlanningConsumption/ListCompYarnLossDetails",
        data: JSON.stringify({ PlanID: PLID }),
        type: "POST",
        contentType: "application/json;charset=utf-8",
        dataType: "json",
        success: function (result) {

            PlanYarnLossSave = result;
            if (PlanYarnLossSave.length == 0) {
                $("#YarnLossId").hide();
            }
            loadyarnLossSaveTable(PlanYarnLossSave);

            PlanYarnLoss = PlanYarnLossSave;
            PlanYarnLoss = $.grep(PlanYarnLoss, function (e) {
                return e.CompSNo == YarndetCompsn && e.SNo == YarndetSlno;
            });
            loadyarnLossTable(PlanYarnLoss);
        },
        failure: function (errMsg) {
            alert(errMsg);
        }
    });


}
//
//
function CheckProgramMade() {

    var OrdNo = $('#txtOrderNo').val();
    var Styid = $('#txtHStyleId').val();


    $.ajax({
        url: "/PlanningConsumption/LoadCheckPrgMadeDetails",
        data: JSON.stringify({ StyleRowid: StyleRId }),
        type: "POST",
        contentType: "application/json;charset=utf-8",
        dataType: "json",
        success: function (result) {

            CPRGlist = result;
            if (CPRGlist.length > 0) {

                if (Mod == 1) {

                    for (var x = 0; x < CPRGlist.length; x++) {

                        //alert("Process Program has been made for " + CPRGlist[x].ProdPrgNo + ",Please Check it....")
                        var msg = "Process Program has been made for " + CPRGlist[x].ProdPrgNo + ",Please Check it...";
                        var flg = 4;
                        var mo = 1;
                        AlartMessage(msg, flg, mo);
                        $("#btnUpdate").attr('disabled', true);
                        $('#btnAdd').hide();
                        return true;
                    }

                }
                if (Mod == 2) {
                    for (var x = 0; x < CPRGlist.length; x++) {
                        //alert("Process Program has been made for " + CPRGlist[x].ProdPrgNo + ",Please Check it....")
                        var msg = "Process Program has been made for " + CPRGlist[x].ProdPrgNo + ",Please Check it...";
                        var flg = 4;
                        var mo = 1;
                        AlartMessage(msg, flg, mo);
                        $("#btnDelete").attr('disabled', true);
                        $('#btnAdd').hide();
                        $('#btnUpdate').hide();
                        return true;

                    }
                }
                if (OrdApp == "Y") {
                    $('#btnAdd').hide();
                    $('#btnUpdate').hide();
                    $('#btnDelete').hide();

                }
            }

            if (CPRGlist.length == 0 && CPItemList.length == 0) {
                var PId = PLID;
                var ans = confirm("Are you sure want to delete this Record?");
                if (ans) {
                    $("#YarnDelete").attr("disabled", true);
                    $("#btnDelete").attr("disabled", true);
                    LoadingSymb();
                    $.ajax({
                        url: "/PlanningAdd/YarnDelete/" + PId,
                        type: "POST",
                        contentType: "application/json;charset=UTF-8",
                        dataType: "json",
                        success: function (result) {

                            if (result.Value == true) {
                                AddUserEntryLog('Planning', 'Yarn Details', 'DELETE', $('#txtWorkOrderNo').val());
                                //alert("Yarn Deleted Sucessfully");
                                var msg = "Yarn Deleted Sucessfully...";
                                var flg = 2;
                                var mo = 0;
                                var url = "/PlanningMain/PlanningMainIndex";
                                AlartMessage(msg, flg, mo,url);
                                StyRowId = StyleRId;
                                //window.location.href = "/PlanningMain/PlanningMainIndex";
                            } else {

                                window.location.href = "/Error/Index";


                            }

                        },
                        error: function (errormessage) {
                            alert(errormessage.responseText);
                        }
                    });
                }
            }



        },

        failure: function (errMsg) {
            alert(errMsg);
        }
    });
}

function FCheckProgramMade() {

    var OrdNo = $('#txtOrderNo').val();
    var Styid = $('#txtHStyleId').val();


    $.ajax({
        url: "/PlanningConsumption/LoadCheckPrgMadeDetails",
        data: JSON.stringify({ StyleRowid: StyleRId }),
        type: "POST",
        contentType: "application/json;charset=utf-8",
        dataType: "json",
        success: function (result) {

            CPRGlist = result;
            if (CPRGlist.length > 0) {

                if (Mod == 1) {

                    for (var x = 0; x < CPRGlist.length; x++) {

                        //alert("Process Program has been made for " + CPRGlist[x].ProdPrgNo + ",Please Check it....")
                        var msg = "Process Program has been made for " + CPRGlist[x].ProdPrgNo + ",Please Check it....";
                        var flg = 4;
                        var mo = 1;
                        AlartMessage(msg, flg, mo);
                        $("#btnUpdate").attr('disabled', true);
                        $('#btnAdd').hide();
                        return true;
                    }

                }
                if (Mod == 2) {
                    for (var x = 0; x < CPRGlist.length; x++) {
                        //alert("Process Program has been made for " + CPRGlist[x].ProdPrgNo + ",Please Check it....")
                        var msg = "Process Program has been made for " + CPRGlist[x].ProdPrgNo + ",Please Check it...";
                        var flg = 4;
                        var mo = 1;
                        AlartMessage(msg, flg, mo);
                        $("#btnDelete").attr('disabled', true);
                        $('#btnAdd').hide();
                        $('#btnUpdate').hide();
                        return true;

                    }
                }
                if (OrdApp == "Y") {
                    $('#btnAdd').hide();
                    $('#btnUpdate').hide();
                    $('#btnDelete').hide();

                }
            }

            var cnt = 0;
            $.each(PlanYarnPurchase, function (i) {
               
                if (PlanYarnPurchase[i].ORDQuantity > 0) {
                            cnt++;
                }

            });
            if (cnt > 0) {
                var msg = 'Already Yarn Purchased,Please check it..'
                var flg = 4;
                var mo = 1;
                AlartMessage(msg, flg, mo);
              
                return true;
            }


            $.each(PlanFabricDC, function (i) {
               
                if (PlanFabricDC[i].ORDQuantity > 0) {
                            cnt++;
                }
            });


            if (cnt > 0) {
                var msg = 'Already Fabric issued to Process,Please check it..'
                var flg = 4;
                var mo = 1;
                AlartMessage(msg, flg, mo);
                
                return true;
            }


            $.each(PlanFabPurchase, function (i) {

                if (PlanFabPurchase[i].ORDQuantity > 0) {
                    cnt++;
                }


            });

            if (cnt > 0) {
                var msg = 'Already Fabric Purchased,Please check it..'
                var flg = 4;
                var mo = 1;
                AlartMessage(msg, flg, mo);

                return true;
            }


            if (CPRGlist.length == 0 && CPItemList.length == 0) {
                var PId = PLID;
                var ans = confirm("Are you sure want to delete this Record?");
                if (ans) {
                    $("#FabDelete").attr("disabled", true);
                    $("#btnDelete").attr("disabled", true);
                    LoadingSymb();
                    $.ajax({
                        url: "/PlanningAdd/FabDelete/" + PId,
                        type: "POST",
                        contentType: "application/json;charset=UTF-8",
                        dataType: "json",
                        success: function (result) {

                            if (result.Value == true) {
                                AddUserEntryLog('Planning', 'Fabric Details', 'DELETE', $('#txtWorkOrderNo').val());
                                //alert("Fabric Deleted Sucessfully");
                                var msg = "Fabric Deleted Sucessfully...";
                                var flg = 2;
                                var mo = 0;
                                var url = "/PlanningMain/PlanningMainIndex";
                                AlartMessage(msg, flg, mo,url);
                                StyRowId = StyleRId;
                                //window.location.href = "/PlanningMain/PlanningMainIndex";
                            } else {

                                window.location.href = "/Error/Index";


                            }

                        },
                        error: function (errormessage) {
                            alert(errormessage.responseText);
                        }
                    });
                }
            }



        },

        failure: function (errMsg) {
            alert(errMsg);
        }
    });
}

function checkdel() {

    CheckPoMade();
    CheckProgramMade();

}

function Fcheckdel() {

    FCheckPoMade();
    FCheckProgramMade();

}


function checkautogsm(Gquantity, GCPlan, Gsno, Glen, Galwlen, Gwid, Gpat, Galwwid, GColorid, GSizeid, GGsm) {



    var quantity = Gquantity;
    var CPlan = GCPlan;
    var sno = Gsno;
    var len = Glen;
    var alwlen = Galwlen;
    var wid = Gwid;
    var pat = Gpat;
    var alwwid = Galwwid;
    var Colorid = GColorid;
    var Sizeid = GSizeid;


    for (var t = 0; t < compList.length; t++) {
        if (compList[t].CompSlNo == sno) {
            var parts = compList[t].No_Of_Parts;
        }
    }
    var Val = GGsm;

    CGsm = Val;
    //fillvar = 'GS';
    //indexforfill = index;

    var IQty = 0;
    if (Val == 0) {
        IQty = 0;
    }
    else {
        IQty = Val;
    }

    var field = Val;
    if (!field.match(/^[\-\+]?[\d\,]*\.?[\d]*$/)) {
        $.each(ConItemList, function () {
            if (this.CPlanSlNo == CPlan) {
                this.Grammage = 0;
            }
        });
        //loadAdConTable(ConItemList);

        var table = $('#tCPIbody').DataTable();
        var data = table.rows().data();

        $('input[id=txtGram]').each(function (ig) {
            if (data[ig].CPlanSlNo == CPlan) {
                var row = $(this).closest('tr');
                row.find('#txtGram').val(0);

            }
        });
        return false;
    }

    if (pat == 0) {
        res1 = 0;
    }
    else {
        var totlen = parseFloat(len) + parseFloat(alwlen);
        var totwid = parseFloat(wid) + parseFloat(alwwid);
        var res1 = parseFloat(parseFloat(totlen * totwid) / pat);
    }

    res1 = res1.toFixed(3);
    var res = (res1 * CGsm) / 10000;
    Wght = quantity * res / 1000;

    var finalresult = res.toFixed(3);
    var finalwgt = (Wght * parts).toFixed(3);


    $.each(ConItemList, function () {
        if (this.CPlanSlNo == CPlan) {
            this.Length = len;
            this.AlloLen = alwlen;
            this.Width = wid;
            this.AllowWid = alwwid;
            this.GSM = CGsm;
            this.Grammage = finalresult;
            this.Weight = Wght;
        }
    });

    //loadAdConTable(ConItemList);


    var table = $('#tCPIbody').DataTable();
    var data = table.rows().data();

    $('input[id=txtGram]').each(function (ig) {
        if (data[ig].CPlanSlNo == CPlan) {
            var row = $(this).closest('tr');
            row.find('#txtLen').val(len);
            row.find('#txtallowLen').val(alwlen);
            row.find('#txtWidth').val(wid);
            row.find('#txtalloeWidth').val(alwwid);
            row.find('#txtGsm').val(CGsm);
            row.find('#txtGram').val(finalresult);
            row.find('#txtWght').val(Wght);

        }
    });

    $.each(ConItemListSave, function () {
        if (this.CPlanSlNo == CPlan) {
            this.Length = len;
            this.AlloLen = alwlen;
            this.Width = wid;
            this.AllowWid = alwwid;
            this.GSM = CGsm;
            this.Grammage = finalresult;
            this.Weight = Wght;
        }
    });
    loadconSaveTable(ConItemListSave);

    if (Colorid > 0 && Sizeid > 0) {
        $.each(PlanCompFabricDet, function () {
            if (this.ColorID == Colorid && this.SizeId == Sizeid && this.CompSlNo == sno) {
                this.Grammage = finalresult;
                this.Weight = Wght;
                this.ActWeight = Wght;
                this.GSM = Val;
                //this.BColorPQty = 0;
                //this.FColorPQty = 0;
            }
        });

        $.each(PlanCompFabricDet, function () {
            if (this.CompSlNo == sno) {
                this.BColorPQty = 0;
                this.FColorPQty = 0;
            }
        });
        //loadCompFabTable(PlanCompFabricDet);
        $.each(PlanCompFabricDetSave, function () {
            if (this.ColorID == Colorid && this.SizeId == Sizeid && this.CompSlNo == sno) {
                this.Grammage = finalresult;
                this.Weight = Wght;
                this.ActWeight = Wght;
                this.GSM = Val;
            }
        });
        $.each(PlanCompFabricDetSave, function () {
            if (this.CompSlNo == sno) {

                this.BColorPQty = 0;
                this.FColorPQty = 0;
            }
        });

        loadCompFabSaveTable(PlanCompFabricDetSave);

        //loadCompFabTable(PlanCompFabricDet);


        var fabtable = $('#tCDbody').DataTable();
        var fabdata = fabtable.rows().data();

        $('input[id=txtPurQty]').each(function (ig) {
            if (fabdata[ig].snumb == CPlan && fabdata[ig].CompSlNo == sno) {
                var row = $(this).closest('tr');
                row.find('#txtfabgram').val(finalresult);
                row.find('#txtfabwt').val(Wght);
                row.find('#txtfabActwt').val(Wght);
            }
        });

        $('input[id=txtPurQty]').each(function (ig) {
            if (fabdata[ig].CompSlNo == sno) {
                var row = $(this).closest('tr');
                row.find('#txtPurQty').val(0);
                row.find('#txtFPurQty').val(0);
            }
        });
    }
    if (Colorid == 0 && Sizeid == 0) {
        //Calcavgfab(Val, res, sno);
        //return true;

        var totprdqty = $('#txtProdQty').val();



        for (var d = 0; d < PlanCompFabricDet.length; d++) {
            var quan = PlanCompFabricDet[d].Prdn_Qty;
            var res1 = (finalwgt / totprdqty) * quan;
            res1 = res1.toFixed(3);
            PlanCompFabricDet[d].Weight = res1;
            PlanCompFabricDet[d].ActWeight = res1;
            PlanCompFabricDet[d].Grammage = finalresult;
            PlanCompFabricDet[d].GSM = Val;
        }
        //loadCompFabTable(PlanCompFabricDet);
        var fabtable = $('#tCDbody').DataTable();
        var fabdata = fabtable.rows().data();

        $('input[id=txtPurQty]').each(function (ig) {
            var row = $(this).closest('tr');
            var de = row.find('#txtfabPrdQty').val();
            row.find('#txtfabActwt').val(((finalwgt / totprdqty) * de).toFixed(3));
            row.find('#txtfabwt').val(((finalwgt / totprdqty) * de).toFixed(3));
            row.find('#txtfabgram').val(finalresult);

        });

        $('input[id=txtPurQty]').each(function (ig) {
            if (fabdata[ig].CompSlNo == sno) {
                var row = $(this).closest('tr');
                row.find('#txtPurQty').val(0);
                row.find('#txtFPurQty').val(0);
            }
        });
        //var bclrid = 0;
        //var bclr = '';

        for (var d = 0; d < PlanCompFabricDetSave.length; d++) {
            if (PlanCompFabricDetSave[d].CompSlNo == sno) {
                var quan = PlanCompFabricDetSave[d].Prdn_Qty;
                var res1 = (finalwgt / totprdqty) * quan;
                res1 = res1.toFixed(3);
                PlanCompFabricDetSave[d].Weight = res1;
                PlanCompFabricDetSave[d].ActWeight = res1;
                PlanCompFabricDetSave[d].Grammage = finalresult;
                PlanCompFabricDetSave[d].GSM = Val;
            }
        }

        loadCompFabSaveTable(PlanCompFabricDetSave);




        //yarn
        var result = [];
        $.each(PlanCompFabricDet, function (i, e) {
            var matchingItems = $.grep(result, function (item) {
                return item.BColorID === e.BColorID;
            });
            if (matchingItems.length === 0) {
                result.push(e);
            }
        });



        if (result.length > 0) {
            //PlanYarnSave = [];
            PlanYarn = [];

            PlanYarnSave = jQuery.grep(PlanYarnSave, function (value) {
                return value.SlNo != CompSlNo;
            });
            //PlanYarnSave = jQuery.grep(yarnlist, function (value) {
            //    return value.FabricID != fd;
            //});

            var Cs = result[0].CompSlNo;
            var ComponentId = 0;
            var Component = '';
            for (var t = 0; t < compList.length; t++) {
                if (compList[t].CompSlNo == Cs) {
                    ComponentId = compList[t].ComponentID;
                    Component = compList[t].ComponentName;
                }
            }

            //if (Mod != 0) {
            //    PlanYarnSave = $.grep(PlanYarnSave, function (e) {
            //        return e.SlNo != CompSlNo;
            //    });
            //}
            for (var j = 0; j < result.length; j++) {


                if (PlanYarn.length == 0) {
                    leng = 1;

                }
                else {
                    leng++;

                }
                var bd = 0;
                bd = result[j].BColorID;
                var snumb = result[j].snumb;
                var csln = result[j].CompSlNo;
                var totalqty = 0;
                for (var u = 0; u < PlanCompFabricDetSave.length; u++) {
                    if (PlanCompFabricDetSave[u].BColorID == bd && PlanCompFabricDetSave[u].CompSlNo == csln) {

                        var qty = PlanCompFabricDetSave[u].Weight;
                        totalqty = totalqty + parseFloat(qty);
                    }
                }


                var bcqty = 0;
                for (var r = 0; r < PlanCompFabricDetSave.length; r++) {
                    if (PlanCompFabricDetSave[r].BColorID == bd && PlanCompFabricDetSave[r].CompSlNo == s) {

                        var qty = PlanCompFabricDetSave[r].BColorPQty;
                        bcqty = bcqty + parseFloat(qty);
                    }
                }


                var finqty = 0;
                for (var n = 0; n < PlanCompFabricDetSave.length; n++) {
                    if (PlanCompFabricDetSave[n].BColorID == bd && PlanCompFabricDetSave[n].CompSlNo == s) {

                        var qty = PlanCompFabricDetSave[n].FColorPQty;
                        finqty = finqty + parseFloat(qty);
                    }
                }


                var totclrqty = parseFloat(bcqty) + parseFloat(finqty);

                //for (var w = 0; w < PlanCompFabricDet.length; w++) {
                //    if (PlanCompFabricDet[w].BColorID == bd && PlanCompFabricDet[w].snumb == sno) {

                totalqty = totalqty - totclrqty;
                totalqty = totalqty.toFixed(3);
                //    }
                //}

                var yarnlistobj = {
                    PlanId: 0,
                    Fabric: result[j].Fabric,
                    FabricID: result[j].FabricID,
                    Fabric_ColorId: result[j].BColorID,
                    Fabric_Weight: totalqty,
                    Fabric_type: result[j].type,//result[j].FabricType,
                    EntryDate: new Date($('#txtEntryDate').val()),
                    BColor: result[j].Bcolor,
                    SlNo: result[j].CompSlNo,
                    YPlanmasID: 0,
                    YSlno: leng,
                    ComponentId: ComponentId,
                    Component: Component
                }




                PlanYarnSave.push(yarnlistobj);
                PlanYarn.push(yarnlistobj);
            }
        }

        //loadYarndetTab
        PlanYarnSave = jQuery.grep(PlanYarnSave, function (value) {
            return value.Fabric_Weight != 0;
        });
        loadYarnSavedetTab(PlanYarnSave);


        //var ctry = [];
        //ctry = PlanYarnSave;
        //ctry = $.grep(ctry, function (e) {
        //    if (e.SlNo == s) {
        //        return e;
        //    }
        //});
        //PlanYarn = ctry;

        loadYarndetTab(PlanYarn);


        //var totalamnt = 0;
        //for (var e = 0; e < PlanCompFabricDet.length; e++) {
        //    if (PlanCompFabricDet[e].CompSlNo == Sno && PlanCompFabricDet[e].Bcolor == bclr) {
        //        var amount = PlanCompFabricDet[e].Weight;
        //        totalamnt = totalamnt + parseFloat(amount);
        //    }
        //}

        //totalamnt = totalamnt.toFixed(3);
        //for (var e = 0; e < PlanYarnSave.length; e++) {
        //    if (PlanYarnSave[e].SlNo == Sno && PlanYarnSave[e].BColor == bclr) {
        //        PlanYarnSave[e].Fabric_Weight = (totalamnt);
        //    }
        //}
        //loadYarnSavedetTab(PlanYarnSave);


        //PlanYarn = $.grep(PlanYarnSave, function (e) {
        //    return e.SlNo == Sno;
        //});
        //loadYarndetTab(PlanYarn);

        totwght();

        //Yarndet

        if (PlanYarnDetSave.length > 0) {


            var ys = PlanYarn[0].YSlno;

            for (var b = 0; b < PlanYarnSave.length; b++) {
                if (PlanYarnSave[b].SlNo == CompSlNo) {
                    var pysl = PlanYarnSave[b].YSlno;
                    var cmpsl = PlanYarnSave[b].SlNo;
                    var wgt = PlanYarnSave[b].Fabric_Weight;
                    var bcid = PlanYarnSave[b].Fabric_ColorId;

                    for (var m = 0; m < PlanYarnDetSave.length; m++) {
                        if (PlanYarnDetSave[m].CompSno == cmpsl) {
                            var s = PlanYarnDetSave[m].SlNo;
                            if (PlanYarnDetSave[m].BaseColorID == bcid) {
                                YsBp = 1;
                                var pr = PlanYarnDetSave[m].Knit_In_Per;
                                var re = parseFloat((pr * wgt) / 100);
                                re = re.toFixed(3);
                                PlanYarnDetSave[m].Knit_In_Qty = re;
                                PlanYarnDetSave[m].Knit_In_ActQty = re;
                                PlanYarnDetSave[m].YSlNo = pysl;
                                PlanYarnDetSave[m].SlNo = s;
                                PlanYarnDetSave[m].FabricID = FabricId;
                            }

                        }
                    }
                }
            }
            PlanYarnDet = $.grep(PlanYarnDetSave, function (e) {
                return e.CompSno == CompSlNo && e.YSlNo == ys;
            });
            Loadsepyarn(PlanYarnDet);
            LoadsepSaveyarn(PlanYarnDetSave);
        }
        //return true;
    }
    if (Colorid > 0 && Sizeid == 0) {
        $.each(PlanCompFabricDet, function () {
            if (this.ColorID == Colorid && this.CompSlNo == sno) {

                this.Grammage = finalresult;
                var rt = Wght / quantity;
                this.Weight = (rt * this.Prdn_Qty).toFixed(3);
                this.ActWeight = (rt * this.Prdn_Qty).toFixed(3);
                this.GSM = Val;
                //this.BColorPQty = 0;
                //this.FColorPQty = 0;
            }
        });

        $.each(PlanCompFabricDet, function () {
            if (this.CompSlNo == sno) {
                this.BColorPQty = 0;
                this.FColorPQty = 0;
            }
        });
        //loadCompFabTable(PlanCompFabricDet);



        var fabtable = $('#tCDbody').DataTable();
        var fabdata = fabtable.rows().data();

        $('input[id=txtPurQty]').each(function (ig) {
            if (fabdata[ig].ColorID == Colorid && fabdata[ig].CompSlNo == sno) {
                var row = $(this).closest('tr');
                var de = row.find('#txtfabPrdQty').val();
                var rt = finalwgt / quantity;
                row.find('#txtfabActwt').val((rt * de).toFixed(3));
                row.find('#txtfabwt').val((rt * de).toFixed(3));
                row.find('#txtfabgram').val(finalresult);
            }
        });

        $('input[id=txtPurQty]').each(function (ig) {
            if (fabdata[ig].CompSlNo == sno) {
                var row = $(this).closest('tr');
                row.find('#txtPurQty').val(0);
                row.find('#txtFPurQty').val(0);
            }
        });
        var bclrid = 0;
        var bclr = '';
        $.each(PlanCompFabricDetSave, function () {
            if (this.ColorID == Colorid && this.CompSlNo == sno) {
                this.Grammage = finalresult;
                this.GSM = Val;
                var rt = Wght / quantity;
                this.Weight = (rt * this.Prdn_Qty).toFixed(3);
                this.ActWeight = (rt * this.Prdn_Qty).toFixed(3);
                bclrid = this.BColorID;
                bclr = this.Bcolor;
            }
        });
        $.each(PlanCompFabricDetSave, function () {
            if (this.CompSlNo == sno) {

                this.BColorPQty = 0;
                this.FColorPQty = 0;
            }
        });

        loadCompFabSaveTable(PlanCompFabricDetSave);
    }
    if (Colorid == 0 && Sizeid > 0) {
        $.each(PlanCompFabricDet, function () {
            if (this.SizeId == Sizeid && this.CompSlNo == sno) {
                this.GSM = Val;
                this.Grammage = finalresult;
                var rt = Wght / quantity;
                this.Weight = (rt * this.Prdn_Qty).toFixed(3);
                this.ActWeight = (rt * this.Prdn_Qty).toFixed(3);
                //this.BColorPQty = 0;
                //this.FColorPQty = 0;
            }
        });

        $.each(PlanCompFabricDet, function () {
            if (this.CompSlNo == sno) {
                this.BColorPQty = 0;
                this.FColorPQty = 0;
            }
        });
        //loadCompFabTable(PlanCompFabricDet);

        var fabtable = $('#tCDbody').DataTable();
        var fabdata = fabtable.rows().data();

        $('input[id=txtPurQty]').each(function (ig) {
            if (fabdata[ig].SizeId == Sizeid && fabdata[ig].CompSlNo == sno) {
                var row = $(this).closest('tr');
                var de = row.find('#txtfabPrdQty').val();
                var rt = finalwgt / quantity;
                row.find('#txtfabActwt').val((rt * de).toFixed(3));
                row.find('#txtfabwt').val((rt * de).toFixed(3));
                row.find('#txtfabgram').val(finalresult);
            }
        });

        $('input[id=txtPurQty]').each(function (ig) {
            if (fabdata[ig].CompSlNo == sno) {
                var row = $(this).closest('tr');
                row.find('#txtPurQty').val(0);
                row.find('#txtFPurQty').val(0);
            }
        });
        var bclrid = 0;
        var bclr = '';
        $.each(PlanCompFabricDetSave, function () {
            if (this.SizeId == Sizeid && this.CompSlNo == sno) {
                this.Grammage = finalresult;
                this.GSM = Val;
                var rt = Wght / quantity;
                this.Weight = (rt * this.Prdn_Qty).toFixed(3);
                this.ActWeight = (rt * this.Prdn_Qty).toFixed(3);
                bclrid = this.BColorID;
                bclr = this.Bcolor;
            }
        });
        $.each(PlanCompFabricDetSave, function () {
            if (this.CompSlNo == sno) {

                this.BColorPQty = 0;
                this.FColorPQty = 0;
            }
        });

        loadCompFabSaveTable(PlanCompFabricDetSave);
    }
    $('#txtWeight').val("");
    $('#txtActualWeight').val("");

    //Yarn Loss

    if (PlanYarnLossSave.length > 0) {
        PlanYarnLossSave = $.grep(PlanYarnLossSave, function (e) {
            return e.CompSNo != sno;
        });
        loadyarnLossSaveTable(PlanYarnLossSave);

        PlanYarnLoss = $.grep(PlanYarnLoss, function (e) {
            return e.CompSNo != sno;
        });
        loadyarnLossTable(PlanYarnLoss);
    }


    //yarn


    //yarn
    var result = [];
    $.each(PlanCompFabricDet, function (i, e) {
        var matchingItems = $.grep(result, function (item) {
            return item.BColorID === e.BColorID;
        });
        if (matchingItems.length === 0) {
            result.push(e);
        }
    });



    if (result.length > 0) {
        //PlanYarnSave = [];
        PlanYarn = [];

        PlanYarnSave = jQuery.grep(PlanYarnSave, function (value) {
            return value.SlNo != CompSlNo;
        });
        //PlanYarnSave = jQuery.grep(yarnlist, function (value) {
        //    return value.FabricID != fd;
        //});

        var Cs = result[0].CompSlNo;
        var ComponentId = 0;
        var Component = '';
        for (var t = 0; t < compList.length; t++) {
            if (compList[t].CompSlNo == Cs) {
                ComponentId = compList[t].ComponentID;
                Component = compList[t].ComponentName;
            }
        }

        //if (Mod != 0) {
        //    PlanYarnSave = $.grep(PlanYarnSave, function (e) {
        //        return e.SlNo != CompSlNo;
        //    });
        //}
        for (var j = 0; j < result.length; j++) {


            if (PlanYarn.length == 0) {
                leng = 1;

            }
            else {
                leng++;

            }
            var bd = 0;
            bd = result[j].BColorID;
            var snumb = result[j].snumb;
            var csln = result[j].CompSlNo;
            var totalqty = 0;
            for (var u = 0; u < PlanCompFabricDetSave.length; u++) {
                if (PlanCompFabricDetSave[u].BColorID == bd && PlanCompFabricDetSave[u].CompSlNo == csln) {

                    var qty = PlanCompFabricDetSave[u].Weight;
                    totalqty = totalqty + parseFloat(qty);
                }
            }


            var bcqty = 0;
            for (var r = 0; r < PlanCompFabricDetSave.length; r++) {
                if (PlanCompFabricDetSave[r].BColorID == bd && PlanCompFabricDetSave[r].CompSlNo == s) {

                    var qty = PlanCompFabricDetSave[r].BColorPQty;
                    bcqty = bcqty + parseFloat(qty);
                }
            }


            var finqty = 0;
            for (var n = 0; n < PlanCompFabricDetSave.length; n++) {
                if (PlanCompFabricDetSave[n].BColorID == bd && PlanCompFabricDetSave[n].CompSlNo == s) {

                    var qty = PlanCompFabricDetSave[n].FColorPQty;
                    finqty = finqty + parseFloat(qty);
                }
            }


            var totclrqty = parseFloat(bcqty) + parseFloat(finqty);

            //for (var w = 0; w < PlanCompFabricDet.length; w++) {
            //    if (PlanCompFabricDet[w].BColorID == bd && PlanCompFabricDet[w].snumb == sno) {

            totalqty = totalqty - totclrqty;
            totalqty = totalqty.toFixed(3);
            //    }
            //}

            var yarnlistobj = {
                PlanId: 0,
                Fabric: result[j].Fabric,
                FabricID: result[j].FabricID,
                Fabric_ColorId: result[j].BColorID,
                Fabric_Weight: totalqty,
                Fabric_type: result[j].type,//result[j].FabricType,
                EntryDate: new Date($('#txtEntryDate').val()),
                BColor: result[j].Bcolor,
                SlNo: result[j].CompSlNo,
                YPlanmasID: 0,
                YSlno: leng,
                ComponentId: ComponentId,
                Component: Component
            }




            PlanYarnSave.push(yarnlistobj);
            PlanYarn.push(yarnlistobj);
        }
    }

    //loadYarndetTab
    PlanYarnSave = jQuery.grep(PlanYarnSave, function (value) {
        return value.Fabric_Weight != 0;
    });
    loadYarnSavedetTab(PlanYarnSave);


    //var ctry = [];
    //ctry = PlanYarnSave;
    //ctry = $.grep(ctry, function (e) {
    //    if (e.SlNo == s) {
    //        return e;
    //    }
    //});
    //PlanYarn = ctry;

    loadYarndetTab(PlanYarn);


    //var totalamnt = 0;
    //for (var e = 0; e < PlanCompFabricDet.length; e++) {
    //    if (PlanCompFabricDet[e].CompSlNo == Sno && PlanCompFabricDet[e].Bcolor == bclr) {
    //        var amount = PlanCompFabricDet[e].Weight;
    //        totalamnt = totalamnt + parseFloat(amount);
    //    }
    //}

    //totalamnt = totalamnt.toFixed(3);
    //for (var e = 0; e < PlanYarnSave.length; e++) {
    //    if (PlanYarnSave[e].SlNo == Sno && PlanYarnSave[e].BColor == bclr) {
    //        PlanYarnSave[e].Fabric_Weight = (totalamnt);
    //    }
    //}
    //loadYarnSavedetTab(PlanYarnSave);


    //PlanYarn = $.grep(PlanYarnSave, function (e) {
    //    return e.SlNo == Sno;
    //});
    //loadYarndetTab(PlanYarn);

    totwght();

    //Yarndet

    if (PlanYarnDetSave.length > 0) {


        var ys = PlanYarn[0].YSlno;

        for (var b = 0; b < PlanYarnSave.length; b++) {
            if (PlanYarnSave[b].SlNo == CompSlNo) {
                var pysl = PlanYarnSave[b].YSlno;
                var cmpsl = PlanYarnSave[b].SlNo;
                var wgt = PlanYarnSave[b].Fabric_Weight;
                var bcid = PlanYarnSave[b].Fabric_ColorId;

                for (var m = 0; m < PlanYarnDetSave.length; m++) {
                    if (PlanYarnDetSave[m].CompSno == cmpsl) {
                        var s = PlanYarnDetSave[m].SlNo;
                        if (PlanYarnDetSave[m].BaseColorID == bcid) {
                            YsBp = 1;
                            var pr = PlanYarnDetSave[m].Knit_In_Per;
                            var re = parseFloat((pr * wgt) / 100);
                            re = re.toFixed(3);
                            PlanYarnDetSave[m].Knit_In_Qty = re;
                            PlanYarnDetSave[m].Knit_In_ActQty = re;
                            PlanYarnDetSave[m].YSlNo = pysl;
                            PlanYarnDetSave[m].SlNo = s;
                            PlanYarnDetSave[m].FabricID = FabricId;
                        }

                    }
                }
            }
        }
        PlanYarnDet = $.grep(PlanYarnDetSave, function (e) {
            return e.CompSno == CompSlNo && e.YSlNo == ys;
        });
        Loadsepyarn(PlanYarnDet);
        LoadsepSaveyarn(PlanYarnDetSave);
    }

    //var rows = $("#tCPIbody").dataTable().fnGetNodes();
    //var dtTable = $('#tCPIbody').DataTable();
    //for (var i = 0; i < rows.length; i++) {
    //    var sn = dtTable.cells({ row: i, column: 0 }).data()[0];
    //    $('input[id=txtGsm]').each(function () {
    //        if (sn == CPlan && $(this).val() == Val) {
    //            var row = $(this).closest('tr');
    //            var num = row.find('#txtGsm').val();
    //            row.find('#txtGsm').focus().val('').val(num);
    //            return true;
    //        }
    //    });
    //}
    loadfillloss();
}
function ChkMajor() {
    var itemid = $('#ddlComponent').val();
    $.ajax({
        url: "/Item/GetbyID",
        data: JSON.stringify({ ID: itemid }),
        type: "POST",
        contentType: "application/json;charset=utf-8",
        dataType: "json",

        success: function (result) {

            var obj = result.Value;
            if (obj != undefined) {

                ChkMaj = obj.MajorComp;
            }

        }
    });


}

function LoadProcessListDef(GItemId, StyRowId, BmasId) {
    debugger;
    var itemid = $('#ddlComponent').val();
    //$.ajax({
    //    url: "/PlanningConsumption/LoadProcess",
    //    data: JSON.stringify({ GItemId: GItemId, StyRowId: StyRowId, BmasId: BmasId }),
    //    type: "POST",
    //    contentType: "application/json;charset=utf-8",
    //    dataType: "json",

    //    success: function (result) {
    //        debugger;
    //        if (result.Status == 'SUCCESS') {
    //            var data = result.Value;
    //            processloss = data;
    //            $(ddlFabProcess).empty();
    //            $(ddlFabProcess).append($('<option/>').val('0').text('--Select Process--'));
    //            $.each(data, function () {
    //                $(ddlFabProcess).append($('<option></option>').val(this.Processid).text(this.Process));
    //            });

    //        }
    //    }
    //});


}
function LoadFabListDef(GItemId, StyRowId, BmasId) {
    debugger;
    var itemid = $('#ddlComponent').val();
    $.ajax({
        url: "/PlanningConsumption/LoadFabric",
        data: JSON.stringify({ GItemId: GItemId, StyRowId: StyRowId, BmasId: BmasId }),
        type: "POST",
        contentType: "application/json;charset=utf-8",
        dataType: "json",

        success: function (result) {
            debugger;

            if (result.Status == 'SUCCESS') {
                var data = result.Value;
                $(ddlFabric).empty();
                $(ddlFabric).append($('<option/>').val('0').text('--Select Fabric--'));
                $.each(data, function () {
                    $(ddlFabric).append($('<option></option>').val(this.FabricId).text(this.fabric));
                });

            }

        }
    });


}

function LoadYarnListDef(GItemId, StyRowId, BmasId) {
    var itemid = $('#ddlComponent').val();
    $.ajax({
        url: "/PlanningConsumption/LoadYarn",
        data: JSON.stringify({ GItemId: GItemId, StyRowId: StyRowId, BmasId: BmasId }),
        type: "POST",
        contentType: "application/json;charset=utf-8",
        dataType: "json",

        success: function (result) {
            debugger;
            //ddlYarn
            if (result.Status == 'SUCCESS') {
                var data = result.Value;
                $(ddlYarn).empty();
                $(ddlYarn).append($('<option/>').val('0').text('--Select Yarn--'));
                $.each(data, function () {
                    $(ddlYarn).append($('<option></option>').val(this.YarnId).text(this.Yarn));
                });

            }
        }
    });


}

function LoadProcessLoss() {
    debugger;
    var processid = $('#ddlFabProcess').val();
    for (i = 0; i < processloss.length; i++) {
        if (processloss[i].Processid == processid) {

            var loss = processloss[i].ProcessLoss;

            $('#txtFabLoss').val(loss);

        }

    }

}

function LoadMeasuListDef(GItemId, StyRowId, BmasId) {
    debugger;
    $.ajax({
        url: "/PlanningConsumption/GetbyMeasureAvg",
        data: JSON.stringify({ GItemId: GItemId, StyRowId: StyRowId, BmasId: BmasId }),
        type: "POST",
        contentType: "application/json;charset=utf-8",
        dataType: "json",

        success: function (result) {
            var obj = result.Value;
            if (obj.length > 0) {
                if (obj != undefined) {

                    CheckAvgMeas = obj[0]["ordconsavggramage"];
                }
            }
        }
    });


}

function LoadCopyParentNo(OrdNo) {
    debugger;

    $.ajax({
        url: "/PlanningConsumption/LoadCopyOrderNo",
        data: JSON.stringify({ Orderno: OrdNo }),
        type: "POST",
        contentType: "application/json;charset=utf-8",
        dataType: "json",

        success: function (result) {
            debugger;

            if (result.Status == 'SUCCESS') {
                var data = result.Value;
                if (data.length > 0) {
                    $(ddlCpyOrderNo).empty();
                    $(ddlCpyOrderNo).append($('<option/>').val('0').text('--Select Parent OrderNo--'));
                    $.each(data, function () {
                        $(ddlCpyOrderNo).append($('<option></option>').val(this.BMasID).text(this.Order_No));
                    });
                    $("#CompList").show();
                    $("#YarnDetId").show();

                }
                else {
                    LoadOrderNoDDL("#ddlCpyOrderNo");
                }

            }

        }
    });


}

function LoadPlanFabriComp(PlId) {



    $.ajax({
        url: "/PlanningFabric/ListPlanningFabricComp",
        data: JSON.stringify({ PlanID: PlId }),
        type: "POST",
        contentType: "application/json;charset=utf-8",
        dataType: "json",
        success: function (result) {
            debugger;
            FGarcolorid = result.data.Data[0].GColorId;
            LoadCompFabric(result);
        },
        failure: function (errMsg) {
            alert(errMsg);
        }
    });


}


function LoadCompFabric(result) {

    var inputcount = 0;
    $('#tCFbody tr').each(function () {
        inputcount++;
    });

    if (inputcount > 0) {
        $('#tCFbody').DataTable().destroy();
    }
    $('#tCFbody').empty();

    var gridData = [];
    debugger;
    this.PlanFabric = result.data.Data;

    var PlanFabric = eval("[" + result.data.tableValue + "]");

    $('#tCFbody').DataTable({
        //"order": [[5, "asc"]],
        data: PlanFabric,



        scrollY: 300,
        scrollCollapse: true,
        paging: false,
        //fixedColumns: false,
        //select: false,
        scrollX: "100%",
        scrollXInner: "100%",
        scroller: false,
        bSort: false,
        columns: [
                         { title: "Comp_Plan_MasID", "visible": false },
                         { title: "ComponentID", "visible": false },
                         { title: "Component Name" },
                         { title: "Fabric Type" },
                         { title: "kgs||Mtrs" },
                     
                         { title: "Pan Parts", "visible": false },
                         { title: "Comp SlNo", "visible": false },
                              { title: "GColorId", "visible": false },
                           { title: "GColor" },
                                    { title: "FabircId", "visible": false },
                           //{
                           //    title: "Loss", "mDataProp": null,
                           //    "sDefaultContent": '<button type="button" data-toggle="tooltip" data-placement="top" title="Loss" style="width: 20px;padding: 0px;height: 20px;border-radius:10px;" class="btnLossView btn btn-round btn-danger"> <i class="fa fa-arrow-down"></i> </button>'
                           //    //"sDefaultContent": '<button type="button" class="btnCDetView"> Submit </button> <button type="button" class="btnLossView"> Loss </button>'
                           //},


        ]

    });
    //$("#tCFbody tr").click(function () {
    //    var selected = $(this).hasClass("selected");
    //    $("#tCFbody tr").removeClass("selected");
    //    if (!selected)
    //        $(this).addClass("selected");
    //});



    $("#tCFbody tr").click(function () {
        var selected = $(this).hasClass("selected");
        $("#tCFbody tr").removeClass("selected");
        if (!selected)
            $(this).addClass("selected");
    });
}



function LoadPlanFabriCompDetails(PlId, CNo) {

    debugger;

    var CSNo = 1;

    if (CNo > 0) {
        CSNo = CNo;
    }
    else {

        CSNo = 1;
    }
    $.ajax({
        url: "/PlanningFabric/ListPlanningFabricCompDetails",
        data: JSON.stringify({ PlanID: PlId, CompSINO: CSNo }),
        type: "POST",
        contentType: "application/json;charset=utf-8",
        dataType: "json",
        success: function (result) {
            debugger;
            var obj = result;

            //PlanCompFabricDetSave = result;      

            //loadCompFabSaveTable(PlanCompFabricDetSave);

            //if (fcompno == 0) {
            //    fcompno = 1;
            //}
            //else {
            //    fcompno = fcompno;
            //}
            //PlanCompFabricDet = $.grep(PlanCompFabricDetSave, function (v) {
            //    return (v.CompSlNo == fcompno);
            //});

            ////PlanCompFabricDet = color;
            //loadCompFabTable(PlanCompFabricDet);



            if (BaseColorlist.length > 0 && BaseColorlist != undefined) {
                for (var f = 0; f < obj.length; f++) {
                    var fid = obj[f].FabricID;
                    for (var n = 0; n < compList.length; n++) {
                        if (compList[n].FabricID == fid) {
                            obj[f].Fabric = compList[n].FabricName;
                        }
                    }
                }
                for (var c = 0; c < obj.length; c++) {
                    var bcl = obj[c].BColorID;
                    for (var n = 0; n < BaseColorlist.length; n++) {
                        if (BaseColorlist[n].ColorID == bcl) {
                            obj[c].Bcolor = BaseColorlist[n].Color;
                        }
                    }
                }


                for (var t = 0; t < obj.length; t++) {
                    var fci = obj[t].FColorID;
                    for (var n = 0; n < FinishColorlist.length; n++) {
                        if (FinishColorlist[n].ColorID == fci) {
                            obj[t].Fcolor = FinishColorlist[n].Color;
                        }
                    }
                }


                for (var e = 0; e < obj.length; e++) {
                    if (obj[e].BColorID == 0) {
                        obj[e].BColorID = bcid;
                        obj[e].Bcolor = bc;
                    }
                }


                PlanCompFabricDetSave = obj;

                var diffsno = 0;
                var chksno = 0;
                for (i = 0; PlanCompFabricDetSave.length > i; i++) {
                    diffsno = PlanCompFabricDetSave[i].CompSlNo;
                    if (diffsno > 0 && diffsno != chksno) {
                        fcompno = PlanCompFabricDetSave[i].CompSlNo;
                        loadfillloss();
                    }
                    chksno = diffsno;
                }
                loadCompFabSaveTable(PlanCompFabricDetSave);
                //if (fcompno == 0) {
                //    fcompno = 1;
                //}
                //else {
                //    fcompno = fcompno;
                //}
                fcompno = CompSlNo;
                PlanCompFabricDet = $.grep(PlanCompFabricDetSave, function (v) {
                    return (v.CompSlNo == fcompno && v.ColorID == FGarcolorid);
                });

                //PlanCompFabricDet = color;
                //loadCompFabTable(PlanCompFabricDet);
           
                if ($('#tCDbody').DataTable().rows().count() > 0) {

                    var listlen = PlanCompFabricDet.length;
                    var tbllen = $('#tCDbody').DataTable().rows().count();
                    if (listlen != tbllen) {
                        loadCompFabTable(PlanCompFabricDet);
                    } else {
                        fillfabrictbl(PlanCompFabricDet);
                    }
                    //fillfabrictbl(PlanCompFabricDet);
                }
                else {
                    loadCompFabTable(PlanCompFabricDet);
                }


                //loadCompFabTable(PlanCompFabricDet);

                //PlanCompFabricDetSave = obj;
                //loadCompFabSaveTable(PlanCompFabricDetSave);



                ////var color = [];
                ////color = PlanCompFabricDetSave;

                //PlanCompFabricDet = $.grep(PlanCompFabricDetSave, function (v) {
                //    return (v.CompSlNo == CompSlNo);
                //});

                ////PlanCompFabricDet = color;
                //loadCompFabTable(PlanCompFabricDet);
                //if (PlanCompFabricDet.length > 0) {
                //    Fplid = PlanCompFabricDet[0].FPlanId;
                //}
                //if (PlanCompFabricDetSave.length > 0) {

                //    LoadPlanFabric(PLID);
                //}
            }
        },
        failure: function (errMsg) {
            alert(errMsg);
        }
    });


}


$(document).ready(function () {



    $('#tCFbody').on('click', 'tr', function (e) {
        debugger;
        var table = $('#tCFbody').DataTable();
        var row = $(this).closest('tr');
        var data = $('#tCFbody').dataTable().fnGetData(row);

        fcompno = data[6];
        fgcolorid = data[7];
        ffabricid = data[9];
        FGarcolorid = fgcolorid;
        var FBtyp = data[3];

        if (fcompno == 0) {
            fcompno = 1;
        }
        else {
            fcompno = fcompno;
        }

        PlanCompFabricDet = $.grep(PlanCompFabricDetSave, function (v) {
            return (v.CompSlNo == fcompno && v.ColorID == fgcolorid);
        });

        if (PlanCompFabricDet.length > 0) {
            $('#txtFabShow').val(PlanCompFabricDet[0]['Fabric']);
            $('#txtFinishShow').val(PlanCompFabricDet[0]['FinishWidth']);
            $('#txtGreyShow').val(PlanCompFabricDet[0]['GreyWidth']);

            if ($('#tCDbody').DataTable().rows().count() > 0) {
                var listlen = PlanCompFabricDet.length;
                var tbllen = $('#tCDbody').DataTable().rows().count();
                if (listlen != tbllen) {
                    loadCompFabTable(PlanCompFabricDet);
                } 
               // fillfabrictbl(PlanCompFabricDet);
            }
            else {
                loadCompFabTable(PlanCompFabricDet);
            }


        }
        //loadCompFabTable(PlanCompFabricDet);


        //if (data.CheckDcMade > "0") {
        //    $('td', row).css('background-color', '#FCF3CF');

        //}
        //if (data.FabricType == 'P') {

        //    var tbl = $('#tCDbody');
        //    tbl.DataTable().column(9).visible(true);
        //} else {
        //    var tbl = $('#tCDbody');
        //    tbl.DataTable().column(9).visible(false);
        //}


        //$('td', row).find('#txtNos').val('(' + data.Woven_Req_InMtrs * data.Grammage + ')' + data.Woven_Req_InMtrs);



        var table = $('#tCDbody').DataTable();
        var ecdata = table.rows().data();

        debugger;
        $('input[id=txtPurQty]').each(function (ig) {
            debugger;
            // if (ecdata[ig].snumb == (ig + 1)) {
            var row = $(this).closest('tr');

            for (var h = 0; h < PlanCompFabricDet.length; h++) {
                if (ig == h) {
                    var snumb = PlanCompFabricDet[h].snumb;
                    var FPlanId = PlanCompFabricDet[h].FPlanId;
                    var ColorID = PlanCompFabricDet[h].ColorID;
                    var Color = PlanCompFabricDet[h].Color;
                    var SizeId = PlanCompFabricDet[h].SizeId;
                    var Size = PlanCompFabricDet[h].Size;
                    var Prdn_Qty = PlanCompFabricDet[h].Prdn_Qty;
                    var ActWeight = PlanCompFabricDet[h].ActWeight;
                    var Weight = PlanCompFabricDet[h].Weight;
                    var Grammage = PlanCompFabricDet[h].Grammage;
                    var FabricID = PlanCompFabricDet[h].FabricID;

                    var GreyWidthID = PlanCompFabricDet[h].GreyWidthID;
                    var FinishWidthID = PlanCompFabricDet[h].FinishWidthID;

                    if (FBtyp != PlanCompFabricDet[h].FabricType) {
                        PlanCompFabricDet[h].FabricType = FBtyp;
                    }

                    var FabricType = PlanCompFabricDet[h].FabricType;
                    var PlanID = PlanCompFabricDet[h].PlanID;
                    var CompSlNo = PlanCompFabricDet[h].CompSlNo;
                    var Bcolor = PlanCompFabricDet[h].Bcolor;
                    var BColorPQty = PlanCompFabricDet[h].BColorPQty;
                    var Fcolor = PlanCompFabricDet[h].Fcolor;
                    var FColorPQty = PlanCompFabricDet[h].FColorPQty;
                    var PColor = PlanCompFabricDet[h].PColor;
                    var FGsm = PlanCompFabricDet[h].FGsm;

                    var KGsm = PlanCompFabricDet[h].KGsm;
                    var LoopLen = PlanCompFabricDet[h].LoopLen;
                    var texture = PlanCompFabricDet[h].texture;
                    var content = PlanCompFabricDet[h].content; 
                    var guage = PlanCompFabricDet[h].guage;
                    var CheckDcMade = PlanCompFabricDet[h].CheckDcMade;
                    var Woven_Req_InMtrs = PlanCompFabricDet[h].Woven_Req_InMtrs;

                    //if (comsn == CompSlNo) {


                    row.find('#txtsnumb').val(snumb);
                    row.find('#txtColor').val(Color);
                    row.find('#txtSize').val(Size);
                    row.find('#txtfabPrdQty').val(Prdn_Qty);
                    row.find('#txtfabActwt').val(ActWeight);
                    row.find('#txtfabwt').val(Weight);
                    row.find('#txtPurQty').val(BColorPQty);
                    row.find('#txtFPurQty').val(FColorPQty);
                    row.find('#txtFGsm').val(FGsm);
                    row.find('#txtKnitgsm').val(KGsm);
                    row.find('#txtlooplen').val(LoopLen);
                    row.find('#txtTexture').val(texture);
                    row.find('#txtContent').val(content);
                    row.find('#txtGauge').val(guage);
                    // row.find('#txtNos').val('(' + Woven_Req_InMtrs * Grammage + ')' + Woven_Req_InMtrs);
                    row.find('#txtNos').val( Woven_Req_InMtrs);

                    //$('td', row).find('#txtNos').val('(' + data.Woven_Req_InMtrs * data.Grammage + ')' + data.Woven_Req_InMtrs);




                    if (PColor == null) {
                        PColor = '--Select--';
                    }
                    // row.find('#ddlBColor option:selected').text(Bcolor);
                    $.each(BaseColorlist, function (k, v) {
                        var id = 0;
                        if (Bcolor === v.Color) {
                            id = v.ColorID
                            row.find('#ddlBColor').val(id);
                        }

                    });
                    // row.find('#ddlFColor option:selected').text(Fcolor);
                    $.each(FinishColorlist, function (k, v) {
                        var id = 0;
                        if (Fcolor === v.Color) {
                            id = v.ColorID
                            row.find('#ddlFColor').val(id);
                        }

                    });
                    // row.find('#ddlPColor option:selected').text(PColor);
                    $.each(PrintColorlist, function (k, v) {
                        var id = 0;
                        if (PColor === v.Color) {
                            id = v.ColorID
                            row.find('#ddlPColor').val(id);
                        }

                    });

                    if (CheckDcMade > "0") {
                        $('td', row).css('background-color', '#FCF3CF');

                        row.find('#ddlBColor').attr('disabled', true);
                        row.find('#ddlFColor').attr('disabled', true);
                        row.find('#txtPurQty').attr('disabled', true);
                        row.find('#txtFPurQty').attr('disabled', true);

                    }
                    else {
                        $('td', row).css('background-color', '#ffffff');

                        row.find('#ddlBColor').attr('disabled', false);
                        row.find('#ddlFColor').attr('disabled', false);
                        row.find('#txtPurQty').attr('disabled', false);
                        row.find('#txtFPurQty').attr('disabled', false);

                    }

                    if (FabricType == 'P') {

                        var tbl = $('#tCDbody');
                        tbl.DataTable().column(9).visible(true);
                    } else {
                        var tbl = $('#tCDbody');
                        tbl.DataTable().column(9).visible(false);
                    }


                }
            }
            // }
        });


        //var rows = $("#tCDbody").dataTable().fnGetNodes();
        //var dtTable = $('#tCDbody').DataTable();

        //var sn = dtTable.cells({ row: 0, column: 1 }).data()[0];


        loadfillloss();
        var colorempty = [];
        colorempty = PlanLossSave;

        colorempty = $.grep(colorempty, function (v) {
            return (v.CompSNo == fcompno && v.FLGColorID == fgcolorid);
        });

        PlanLoss = colorempty;
        loadFabricLossTable(PlanLoss);

    });
});


function LoadAmendstatus() {
    var ord= $('#txtOrderNo').val();
    var itm=$('#txtHItemId').val();
    var sty=$('#txtHStyleId').val();

    $.ajax({
        url: "/PlanningConsumption/LoadEntrystatus",
        data: JSON.stringify({ Ordno: ord, Styleid: sty, Itmid: itm }),
        type: "POST",
        contentType: "application/json;charset=utf-8",
        dataType: "json",

        success: function (result) {
            debugger;

            if (result.Value.length > 0) {
                Cplan = result.Value[0].Con_Plan;
                Yplan = result.Value[0].Yarn_Plan;
                Fplan = result.Value[0].Fabric_Plan;
                Bplan = result.Value[0].Bit_Plan;
                PLID = result.Value[0].PlanID;
                ConAmend = result.Value[0].ComAmend;
                FabAmend = result.Value[0].FabAmend;
                YarnAmend = result.Value[0].YarnAmend;
                BitAmend = result.Value[0].BitAmend;

                var conlck=0;
                var fablock=0;
                var ynlock=0;
                var Tlock=0;
                $("#ConUpdate").attr("disabled", false);
             
                    if (ConAmend == "Y") {

                        $('#profile-tab1').attr('style', 'background-color : #acf2c1');
                        $('#profile-tab2').attr('style', 'background-color : #acf2c1');

                        $("#ConClose").attr("disabled", true);
                        $("#FFClose").attr("disabled", true);
                        $("#YClose").attr("disabled", true);
                        $("#YarnUpdate").attr("disabled", true);
                    }



                    if (FabAmend == "Y") {

                        $('#profile-tab1').attr('style', 'background-color : #acf2c1');
                        // $('#profile-tab2').attr('style', 'background-color : #acf2c1');

                        $("#ConClose").attr("disabled", true);
                        $("#FFClose").attr("disabled", true);
                        $("#YClose").attr("disabled", true);
                        $("#YarnUpdate").attr("disabled", true);
                    }
                    else {
                        $('#profile-tab1').attr('style', 'background-color : #F5F7FA');

                        if (PlanLock.length > 0) {
                            if (PlanLock[0].LockFabric == 'N') {
                                $("#YarnUpdate").attr("disabled", false);
                            }
                        } else {
                            $("#YarnUpdate").attr("disabled", false);
                        }
                    }


                    if (YarnAmend == "Y") {

                        /// $('#profile-tab1').attr('style', 'background-color : #acf2c1');
                        $('#profile-tab2').attr('style', 'background-color : #acf2c1');

                        $("#ConClose").attr("disabled", true);
                        $("#FFClose").attr("disabled", true);
                        $("#YClose").attr("disabled", true);
                        //$("#YarnUpdate").attr("disabled", true);
                    }
                    else {
                        $('#profile-tab2').attr('style', 'background-color : #F5F7FA');

                        $("#ConClose").attr("disabled", false);
                        $("#FFClose").attr("disabled", false);
                        $("#YClose").attr("disabled", false);

                        if (PlanLock.length > 0) {
                            if (PlanLock[0].LockYarn == 'N') {
                                $("#YarnUpdate").attr("disabled", false);
                            }
                        } else {
                            $("#YarnUpdate").attr("disabled", false);
                        }

                        $("#YarnUpdate").attr("disabled", false);

                        if (fabupflag == 1) {

                            window.location.href = "/ProcessSeqProc/ProcessSeqProcIndex?ProSeqID=" + StyleRId + "=&Mode=" + 1;
                        }
                    }


                    if (BitAmend == "Y") {

                        $('#profile-tab3').attr('style', 'background-color : #acf2c1');
                        // $('#profile-tab2').attr('style', 'background-color : #acf2c1');

                        $("#ConClose").attr("disabled", true);
                        $("#FFClose").attr("disabled", true);
                        $("#YClose").attr("disabled", true);
                        $("#BitClose").attr("disabled", true);
                        $("#BitUpdate").attr("disabled", true);
                    }
                    else {
                        $('#profile-tab3').attr('style', 'background-color : #F5F7FA');

                        //if (PlanLock.length > 0) {
                        //    if (PlanLock[0].LockFabric == 'N') {
                        //        $("#YarnUpdate").attr("disabled", false);
                        //    }
                        //} else {
                        //    $("#YarnUpdate").attr("disabled", false);
                        //}
                        $("#BitUpdate").attr("disabled", false);
                    }

            }
        }
    });
}



function Entrystatus(Ordno, Styleid, Itmid) {

    $.ajax({
        url: "/PlanningConsumption/LoadEntrystatus",
        data: JSON.stringify({ Ordno: Ordno, Styleid: Styleid, Itmid: Itmid }),
        type: "POST",
        contentType: "application/json;charset=utf-8",
        dataType: "json",

        success: function (result) {
            debugger;

            if (result.Value.length > 0) {
                Cplan = result.Value[0].Con_Plan;
                Yplan = result.Value[0].Yarn_Plan;
                Fplan = result.Value[0].Fabric_Plan;
                PLID = result.Value[0].PlanID;
                Bplan = result.Value[0].Bit_Plan;
                ConAmend = result.Value[0].ComAmend;
                FabAmend = result.Value[0].FabAmend;
                YarnAmend = result.Value[0].YarnAmend;
                BitAmend = result.Value[0].BitAmend;
                LoadAmendstatus();
            }
            if (Cplan == 'E' && Mod == "1") {
                $('#ConUpdate').show();
                $('#ConAdd').hide();
                $('#ConDelete').hide();
                EditDetCompPlanList(ItemId, StyleRId, PLID);
                LoadYarnPODetails(PLID);
            }
            if (Cplan == 'E' && Mod == "2") {
                $('#ConUpdate').hide();
                $('#ConAdd').hide();
                $('#ConDelete').show();
                EditDetCompPlanList(ItemId, StyleRId, PLID);
                LoadYarnPODetails(PLID);
            }
            else if (Cplan == 'N') {
                $('#ConUpdate').hide();
                $('#ConAdd').show();
                $('#ConDelete').hide();
            }
            if (Fplan == 'E' && Mod == "1") {
                $('#FabAdd').hide();
                $('#FabDelete').hide();
                $('#FabUpdate').show();
                if (fcompno == 0) {
                    fcompno = 1;
                } else {
                    fcompno == fcompno;
                }
                EditCompFabricLossPlanList(PLID, fcompno);
                //LoadPlanFabriComp(PLID)
                //Loadtotfabriceditdet(PLID);

            }
            if (Fplan == 'E' && Mod == "2") {
                $('#FabAdd').hide();
                $('#FabDelete').show();
                $('#FabUpdate').hide();
                if (fcompno == 0) {
                    fcompno = 1;
                } else {
                    fcompno == fcompno;
                }
                EditCompFabricLossPlanList(PLID, fcompno);
                //LoadPlanFabriComp(PLID)
                //Loadtotfabriceditdet(PLID);

            }
            else if (Fplan == 'N') {
                $('#FabAdd').show();
                $('#FabUpdate').hide();
                $('#FabDelete').hide();
                // LoadPlanFabriComp(PlId);
                if (fcompno == 0) {
                    fcompno = 1;
                } else {
                    fcompno == fcompno;
                }
                LoadPlanFabriComp(PLID);
                //LoadPlanFabriCompDetails(PLID, fcompno);
                EditCompFabricLossPlanList(PLID, fcompno);


            }
            if (Yplan == 'E' && Mod == "1") {
                $('#YarnUpdate').show();
                $('#YarnAdd').hide();
                $('#YarnDelete').hide();

                //LoadPlanFabric(PLID);
                //ListYarnEditDetDetails(PLID);
            }
            else if (Yplan == 'E' && Mod == "2") {
                $('#YarnUpdate').hide();
                $('#YarnAdd').hide();
                $('#YarnDelete').show();
                LoadPlanFabric(PLID);
                ListYarnEditDetDetails(PLID);
            }
            else if (Yplan == 'N') {
                LoadPlanFabric(PLID);
                $('#YarnAdd').show();
                $('#YarnUpdate').hide();
                $('#YarnDelete').hide();
            }
            //CheckRights("PlanComponent");
            //CheckRights("PlanFabric");
            //CheckRights("PlanYarn");
            if (Bplan == 'E' && Mod == "1") {
                $('#BitAdd').hide();
                $('#BitDelete').hide();
                $('#BitUpdate').show();
            }
            if (Bplan == 'E' && Mod == "2") {
                $('#BitAdd').hide();
                $('#BitDelete').show();
                $('#BitUpdate').hide();
            }
            else if (Bplan == 'N') {
                $('#BitAdd').show();
                $('#BitUpdate').hide();
                $('#BitDelete').hide();
            }
        },
        failure: function (errMsg) {
            alert(errMsg);
        }

    });
}


function BitClose() {
    debugger;
    if (OrdApp == 'Y') {
        window.location.href = "/OrderApproval/OrderApprovalIndex";
    }
    else {
        StyRowId = StyleRId;
        window.location.href = "/PlanningAdd/PlanningAddIndex?StyleRowId=" + StyRowId + "=&Mode=" + Mod;
    }
}


function FFClose() {
    debugger;
    if (OrdApp == 'Y') {
        window.location.href = "/OrderApproval/OrderApprovalIndex";
    }
    else {
        StyRowId = StyleRId;
        window.location.href = "/PlanningAdd/PlanningAddIndex?StyleRowId=" + StyRowId + "=&Mode=" + Mod;
    }
}




function YClose() {
    debugger;
    if (OrdApp == 'Y') {
        window.location.href = "/OrderApproval/OrderApprovalIndex";
    }
    else {
        StyRowId = StyleRId;
        window.location.href = "/PlanningAdd/PlanningAddIndex?StyleRowId=" + StyRowId + "=&Mode=" + Mod;
    }
}


$(document).ready(function () {



    $('#tYFbody').on('click', 'tr', function (e) {

        debugger;
        rowindex = $(this).closest('tr').index();
        var currentrowp = PlanYarn.slice(rowindex);

        FBRID = currentrowp[0]['FabricID'];
        BCLID = currentrowp[0]['Fabric_ColorId'];
        YlNo = currentrowp[0]['YSlno'];
        var wght = currentrowp[0]['Fabric_Weight'];
        wt = currentrowp[0]['Fabric_Weight'];
        //CompSlNo = currentrowp[0]['SlNo'];

        // if (PlanYarnDyeingSave.length == 0) {
        //EditDetPlanYarnDyeingList(PLID, ItemId, FBRID, StyleRId);
        //  }
        //var table = $('#tYFbody').DataTable();
        //SlNo = table.row($(this).parents('tr')).data()["SlNo"];
        //YlNo = table.row($(this).parents('tr')).data()["YSlno"];
        //var wght = table.row($(this).parents('tr')).data()["Fabric_Weight"];


        //YlNo = $(this).closest('tr').find('td:eq(1)').html();
        //SlNo = $(this).closest('tr').find('td:eq(0)').html();
        //var wght = $(this).closest('tr').find('td:eq(5)').html();
        Weight = wght;
        // YlNo = $(this).closest('tr').find('td:eq(0)').html();
        //FID = $(this).closest('tr').find('td:eq(1)').html();
        //BCID = $(this).closest('tr').find('td:eq(5)').html();
        //Wght = $(this).closest('tr').find('td:eq(4)').html();

        //rowindex = $(this).closest('tr').index();
        var currentro1 = [];//PlanYarnDetSave.slice(rowindex);

        for (var g = 0; g < PlanYarnDetSave.length; g++) {
            //if (PlanYarnDetSave[g].CompSno == SlNo && PlanYarnDetSave[g].YSlNo == YlNo) {
            //    currentro1.push(PlanYarnDetSave[g]);
            //}

            if (PlanYarnDetSave[g].BaseColorID == BCLID && PlanYarnDetSave[g].FabricID == FBRID) {
                currentro1.push(PlanYarnDetSave[g]);
            }
        }

        // if (PlanYarnDet.length > 0) {
        if (Mod == 0) {
            if (currentro1.length > 0) {
                Bper = 0;
                fid = currentro1[0]['FabricID'];
                BCLID = currentro1[0]['BaseColorID'];
                var Wgt = currentro1[0]['Knit_In_Qty'];

                //var Ngt = Ngt + Wgt;
                //alert(Ngt);
                var totalper = 0;
                for (var s = 0; s < PlanYarnDet.length; s++) {
                    if (PlanYarnDet[s].BaseColorID == BCLID && PlanYarnDet[s].FabricID == FBRID) {
                        var per = PlanYarnDet[s].Knit_In_Per;
                        totalper = totalper + parseFloat(per);
                    }
                }
                Bper = 100 - totalper;

                Loadsepyarn(PlanYarnDet);
            }
            else {
                $("#txtPer").val('');
                $('#txtWeight').val(wght);
                $('#txtActualWeight').val(wght);
                PlanYarnDet = [];
                Loadsepyarn(PlanYarnDet);
                return true;

            }
        }
        // }

        if (Mod == 1 && currentro1.length == 0) {
            $("#txtPer").val('');
            $('#txtWeight').val(wght);
            $('#txtActualWeight').val(wght);
            $("#ddlYarn").prop("disabled", false);
            $("#ddlColor").prop("disabled", false);
            $("#ddlCount").prop("disabled", false);
            yarndet = [];
            for (var x = 0; x < PlanYarnDetSave.length; x++) {
                //if (PlanYarnDetSave[x].YSlNo == YlNo && PlanYarnDetSave[x].CompSno == SlNo) {
                //    yarndet.push(PlanYarnDetSave[x]);
                //}

                if (PlanYarnDetSave[x].BaseColorID == BCLID && PlanYarnDetSave[x].FabricID == FBRID) {
                    yarndet.push(PlanYarnDetSave[x]);
                }
            }
            PlanYarnDet = yarndet;
            Loadsepyarn(PlanYarnDet);

            if (PlanYarnDyeingSave.length > 0) {
                var ctry = [];
                ctry = PlanYarnDyeingSave;
                if (PlanYarnDet.length > 0) {
                    ctry = $.grep(ctry, function (e) {
                        if (e.YDSlNo == PlanYarnDet[0].SlNo) {
                            return e;
                        }
                    });
                }
                else {
                    ctry = PlanYarnDet;
                }
                PlanYarnDyeing = ctry;
                loadYarnDyeAddTable(PlanYarnDyeing);
            }
            return true;
        }

        rowindex = $(this).closest('tr').index();
        var currentrowpyarn = PlanYarn.slice(rowindex);
        var YMID = currentrowpyarn[0]['YPlanmasID'];

        //if (YMID > 0 && Mod == 1 || Mod == 2) {

        //    var OrdNo = $('#txtOrderNo').val();
        //    var StyleId = $('#txtHStyleId').val();
        //    ListYarnEditDetDetails(YMID, OrdNo, StyleId);
        //}

        //if (Mod == 0) {

        var PerQty = $('#txtPer').val();



        if (Bper > 0) {
            $("#txtPer").val(Bper);
            var NAweight = Bper / 100 * wght;
            $('#txtWeight').val(NAweight);
            $('#txtActualWeight').val(NAweight);

            $("#ddlYarn").prop("disabled", false);
            $("#ddlColor").prop("disabled", false);
            $("#ddlCount").prop("disabled", false);

            Bper = 0;
            yarndet = [];
            for (var x = 0; x < PlanYarnDetSave.length; x++) {
                //if (PlanYarnDetSave[x].YSlNo == YlNo && PlanYarnDetSave[x].CompSno == SlNo) {
                //    yarndet.push(PlanYarnDetSave[x]);
                //}

                if (PlanYarnDetSave[x].BaseColorID == BCLID && PlanYarnDetSave[x].FabricID == FBRID) {
                    yarndet.push(PlanYarnDetSave[x]);
                }
            }
            PlanYarnDet = yarndet;
            Loadsepyarn(PlanYarnDet);
            LoadsepSaveyarn(PlanYarnDetSave);
            //var Tweight = 0;

            //Tweight = Tweight + NAweight;

            //alert(Tweight);

        }
            //else if (Bper == 0 && KQty > 0 && VYSlNo == YlNo) {
        else if (Bper == 0) {
            //$('#txtWeight').val(Wght);
            //$('#txtActualWeight').val(Wght);
            yarndet = [];
            // alert("Already Weight has been Exists");
            $('#txtWeight').val(0);
            $('#txtActualWeight').val(0);
            $("#ddlYarn").prop("disabled", true);
            $("#ddlColor").prop("disabled", true);
            $("#ddlCount").prop("disabled", true);
            for (var x = 0; x < PlanYarnDetSave.length; x++) {
                //if (PlanYarnDetSave[x].YSlNo == YlNo && PlanYarnDetSave[x].CompSno == SlNo) {
                //    yarndet.push(PlanYarnDetSave[x]);
                //}

                if (PlanYarnDetSave[x].BaseColorID == BCLID && PlanYarnDetSave[x].FabricID == FBRID) {
                    yarndet.push(PlanYarnDetSave[x]);
                }
            }
            PlanYarnDet = yarndet;
            Loadsepyarn(PlanYarnDet);
            LoadsepSaveyarn(PlanYarnDetSave);
        } else {
            $('#txtWeight').val(wght);
            $('#txtActualWeight').val(wght);
        }

        if (PlanYarnDyeingSave.length > 0) {


            var ctry = [];
            ctry = PlanYarnDyeingSave;

            ctry = $.grep(ctry, function (e) {
                if (e.YDSlNo == PlanYarnDet[0].SlNo && PlanYarnDet[0].Dyeing_Req == 1) {
                    return e;
                }
            });
            PlanYarnDyeing = ctry;

            loadYarnDyeAddTable(PlanYarnDyeing);


        }


        //var table = $('#tCFbody').DataTable();
        //var row = $(this).closest('tr');
        //var data = $('#tCFbody').dataTable().fnGetData(row);

        //fcompno = data[6];


        //if (fcompno == 0) {
        //    fcompno = 1;
        //}
        //else {
        //    fcompno = fcompno;
        //}

        //PlanCompFabricDet = $.grep(PlanCompFabricDetSave, function (v) {
        //    return (v.CompSlNo == fcompno);
        //});

        //loadCompFabTable(PlanCompFabricDet);

        //var colorempty = [];
        //colorempty = PlanLossSave;

        //colorempty = $.grep(colorempty, function (v) {
        //    return (v.CompSNo == fcompno);
        //});

        //PlanLoss = colorempty;
        //loadFabricLossTable(PlanLoss);
        var tbl = $('#tblyarnDetails');
        tbl.DataTable().column(19).visible(false);
    });
});



function loadStockTransTable(ItemStockList) {
    $('#stktrans').attr('disabled', false);
    $('#tblStockTranItem').DataTable().destroy();
    debugger;

    var table = $('#tblStockTranItem').DataTable({

        data: ItemStockList,
        scrollY: 300,
        scrollCollapse: true,
        paging: false,
        fixedColumns: false,
        select: false,
        scrollX: "100%",
        scrollXInner: "100%",
        scroller: false,
        "bSort": false,
        "rowCallback": function (row, data, index) {
            if (ViewStock == 0) {
                var tbl = $('#tblStockTranItem');
                tbl.DataTable().column(14).visible(true);
                tbl.DataTable().column(15).visible(true);
                tbl.DataTable().column(16).visible(true);
                tbl.DataTable().column(17).visible(true);

            } else {
                var tbl = $('#tblStockTranItem');
                tbl.DataTable().column(14).visible(false);
                tbl.DataTable().column(15).visible(false);
                tbl.DataTable().column(16).visible(false);
                tbl.DataTable().column(17).visible(false);
            }

        },


        columns: [
                { title: "StockType", data: "StockType" },
                { title: "TransNo", data: "TransNo" },
                { title: "FromOrder", data: "OrderNo" },
                { title: "RefNo", data: "RefNo" },
                 {
                     title: "Status", data: "OrderStatus",
                     render: function (data) {
                         if (data == 'Running') {
                             return '<label  style="text-align: center;color:green;"> Running <label>';
                         } else if (data == 'Depatched') {
                             return '<label  style="text-align: center;color:red;"> Closed <label>';
                         } else if (data == 'General') {
                             return '<label  style="text-align: center;color:brown;"> General <label>';
                         } else {
                             return '<label  style="text-align: center;">  <label>';
                         }

                     },
                 },
                { title: "WorkOrdNo", data: "WorkOrdNo", "visible": false },
                { title: "Supplier", data: "Supplier", "visible": false },
                { title: "Item", data: "Item" },
                { title: "Color", data: "Color" },
                { title: "Size", data: "Size" },
                { title: "Uom", data: "Uom" },
               { title: "Stkbal", data: "BalStkQtyval", "visible": false },
                { title: "prgbal", data: "Ordbalqtyval", "visible": false },

                 {
                     title: "Stock.Bal", data: "StkQty",
                     render: function (data) {
                         return '<input type="text" id="txtStockBal" class="txtStockBal form-control"  style="text-align: center;"  value=' + data + ' disabled>';

                     },
                 },

                {
                    title: "Req.Qty", data: "TransQty",
                    render: function (data) {
                        return '<input type="text" id="txttransQty" class="txttransQty form-control"  style="width: 50px;text-align: center;"  value=' + data + ' >';

                    },
                },

                {
                    title: "ToOrder", data: "ToOrderno",
                    render: function (data) {

                        return '<label  style="text-align: center;color:blue;">' + data + '<label>';


                    },
                },
                {
                    title: "ToStyle", data: "ToStyle",
                    render: function (data) {
                        return '<label  style="text-align: center;color:blue;">' + data + '<label>';

                    },
                },
                {
                    title: "BOM.Bal", data: "Ordbalqty",
                    render: function (data) {
                        return '<input type="text" id="txtOrderBal" class="txtOrderBal form-control"  style="text-align: center;"  value=' + data + ' disabled>';

                    },
                },

                //{ title: "Status", data: "OrderStatus" },
                { title: "Itemid", data: "ItemId", "visible": false },
                { title: "Colorid", data: "ColorId", "visible": false },
                { title: "Sizeid", data: "SizeId", "visible": false },
                { title: "Stockid", data: "StockId", "visible": false },
                { title: "NewStockid", data: "NewStockId", "visible": false },
                { title: "ToStyleid", data: "ToStyleid", "visible": false },
        ]
    });


}





//function loadStockTransTable(ItemStockList) {
//    $('#stktrans').attr('disabled', false);
//    $('#tblStockTranItem').DataTable().destroy();
//    debugger;

//    var table = $('#tblStockTranItem').DataTable({

//        data: ItemStockList,
//        scrollY: 300,
//        scrollCollapse: true,
//        paging: false,
//        fixedColumns: false,
//        select: false,
//        scrollX: "100%",
//        scrollXInner: "100%",
//        scroller: false,
//        "bSort": false,
//        columns: [

//                { title: "Transno", data: "TransNo" },
//                { title: "OrderNo", data: "OrderNo" },
//                { title: "Refno", data: "RefNo" },
//                { title: "WorkOrdno", data: "WorkOrdNo" },
//                { title: "Supplier", data: "Supplier" },
//                { title: "StockType", data: "StockType" },
//                { title: "Item", data: "Item" },
//                { title: "Color", data: "Color" },
//                { title: "Size", data: "Size" },
//                { title: "Uom", data: "Uom" },
//                { title: "Stock Bal", data: "StkQty" },
//                {
//                    title: "TranQty", data: "TransQty",
//                    render: function (data) {
//                        return '<input type="text" id="txttransQty" class="txttransQty form-control"  style="width: 50px;text-align: center;"  value=' + data + ' >';

//                    },
//                },
//                { title: "Itemid", data: "ItemId", "visible": false },
//                { title: "Colorid", data: "ColorId", "visible": false },
//                { title: "Sizeid", data: "SizeId", "visible": false },
//                { title: "Stockid", data: "StockId", "visible": false },
//                { title: "NewStockid", data: "NewStockId", "visible": false },
//        ]
//    });


//}



function Transfer() {
    debugger;
    var stkempty = [];
    stkempty = ItemStockList;
    stkempty = $.grep(stkempty, function (v) {
        return (v.TransQty > 0);
    });

    if (stkempty.length > 0) {
        ItemStockList = stkempty;
    }
    else {
        var msg = 'Please Fill anyone Transfer Quantity..';
        var flg = 4;
        AlartMessage(msg, flg);
        //alert('Please Fill anyone TransQty..');
        return true;
    }
    //var newArray = [];
    //$.each(ItemStockList, function (key, value) {
    //    var exists = false;
    //    var rate = 0;
    //    $.each(newArray, function (k, val2) {
    //        if (value.WorkOrdNo == val2.WorkOrdNo && value.StoreId == val2.StoreId) { exists = true; };
    //    });

    //    if (exists == false && value.WorkOrdNo != "" && value.StoreId != "" ) { newArray.push(value); }
    //});
    //$.each(newArray, function (i) {
    //    $.each(ItemStockList, function (j) {
    //        if (newArray[i].WorkOrdNo == ItemStockList[j].WorkOrdNo && newArray[i].StoreId == ItemStockList[j].StoreId) {
    //            ItemStockList[j].stktransno = i + 1;
    //        }
    //        });
    //});


    if (ItemStockList.length > 0) {
        $('#stktrans').attr('disabled', true);
        $.ajax({
            url: "/StockTransfer/PurchaseStockTranfer",
            data: JSON.stringify({ opj: ItemStockList }),
            type: "POST",
            contentType: "application/json;charset=utf-8",
            dataType: "json",
            success: function (result) {

                var msg = 'Stock Transfer Request raised..';
                var flg = 1;
                AlartMessage(msg, flg);
                //alert('Stock Transfered Successfully..');


                //if (OrderType != 'G') {
                //    location.reload();
                //}
                //else {
                //    var tottransqty = 0;

                //    $.each(ItemStockList, function (i) {
                //        if (ItemStockList[i].TransQty > 0) {
                //            tottransqty = tottransqty + parseFloat(ItemStockList[i].TransQty);
                //        }

                //    });
                //    if (tottransqty > 0) {

                //        for (var g = 0; g < ItemList.length; g++) {
                //            if (ItemList[g].ItemID == Stkitemid && ItemList[g].ColorID == Stkcolorid && ItemList[g].SizeID == StkSizeid) {
                //                ItemList[g].quantity = ItemList[g].quantity - tottransqty;
                //            }
                //        }
                //        loadItemTable(ItemList);
                //        $('#myModal').modal('hide');
                //    }


                //}

            },
            failure: function (errMsg) {
                alert(errMsg);
            }
        });
    }

}



function StkClose() {
    $('#myModalStock').modal('hide');
}
$(document).ready(function () {


    $(document).on('change', '.txttransQty', function () {
        debugger;
        var table = $('#tblStockTranItem').DataTable();
        var StockId = table.row($(this).parents('tr')).data()["StockId"];
        var Bal = table.row($(this).parents('tr')).data()["BalStkQtyval"];
        var ToOrderno = table.row($(this).parents('tr')).data()["ToOrderno"];
        var ToStyleid = table.row($(this).parents('tr')).data()["ToStyleid"];
        var ItemId = table.row($(this).parents('tr')).data()["ItemId"];
        var ColorId = table.row($(this).parents('tr')).data()["ColorId"];
        var SizeId = table.row($(this).parents('tr')).data()["SizeId"];
        var Ordbalqty = table.row($(this).parents('tr')).data()["Ordbalqtyval"];

        var Val = $(this).val();


        var totord = 0
        var totstk = 0;

        $.each(ItemStockList, function (G) {

            if (this.ToOrderno == ToOrderno && this.ToStyleid == ToStyleid && this.ItemId == ItemId && this.ColorId == ColorId && this.SizeId == SizeId && this.StockId != StockId) {

                totord = totord + parseFloat(this.TransQty);
            }

            if (this.ToOrderno != ToOrderno && this.ToStyleid != ToStyleid && this.ItemId == ItemId && this.ColorId == ColorId && this.SizeId == SizeId && this.StockId == StockId) {
                totstk = totstk + parseFloat(this.TransQty);
            }


        });


        var stkorder = totord + parseFloat(Val);

      
            if (stkorder > Ordbalqty) {
                Val = 0;
            }
       

        var stktotord = totstk + parseFloat(Val);


        if (stktotord > Bal) {
            Val = 0;
        }



        var balord = Ordbalqty - (totord + parseFloat(Val));
        var balstk = Bal - (totstk + parseFloat(Val));

        $.each(ItemStockList, function (G) {

            if (this.ToOrderno == ToOrderno && this.ToStyleid == ToStyleid && this.ItemId == ItemId && this.ColorId == ColorId && this.SizeId == SizeId && this.StockId == StockId) {

                this.TransQty = parseFloat(Val);
            }

          
                if (this.ToOrderno == ToOrderno && this.ToStyleid == ToStyleid && this.ItemId == ItemId && this.ColorId == ColorId && this.SizeId == SizeId) {

                    this.Ordbalqty = balord;
                }
           
            if (this.StockId == StockId) {
                this.StkQty = balstk;
            }


        });

        //loadItemTable(ItemList);

        var table = $('#tblStockTranItem').DataTable();
        var data = table.rows().data();

        $('input[id=txttransQty]').each(function (ig) {
            if (data[ig].StockId == StockId && data[ig].ToOrderno == ToOrderno && data[ig].ToStyleid == ToStyleid
                 && data[ig].ItemId == ItemId && data[ig].ColorId == ColorId && data[ig].SizeId == SizeId) {
                var row = $(this).closest('tr');
                row.find('#txttransQty').val(Val);

            }
        });

        $('input[id=txtStockBal]').each(function (ig) {
            if (data[ig].StockId == StockId) {
                var row = $(this).closest('tr');
                row.find('#txtStockBal').val(balstk);

            }
        });
        
            $('input[id=txtOrderBal]').each(function (ig) {
                if (data[ig].ToOrderno == ToOrderno && data[ig].ToStyleid == ToStyleid
                     && data[ig].ItemId == ItemId && data[ig].ColorId == ColorId && data[ig].SizeId == SizeId) {
                    var row = $(this).closest('tr');
                    row.find('#txtOrderBal').val(balord);

                }
            });
       
    });



    //$(document).on('keyup', '.txttransQty', function () {
    //    debugger;
    //    var table = $('#tblStockTranItem').DataTable();
    //    var StockId = table.row($(this).parents('tr')).data()["StockId"];
    //    var Bal = table.row($(this).parents('tr')).data()["StkQty"];
    //    var Val = $(this).val();

    //    if (Bal < Val) {
    //        Val = 0;
    //    }

    //    var tottransqty = 0;

    //    $.each(ItemStockList, function (i) {
    //        if (ItemStockList[i].TransQty > 0) {
    //            if (ItemStockList[i].StockId != StockId) {
    //                tottransqty = tottransqty + parseFloat(ItemStockList[i].TransQty);
    //            }
    //        }

    //    });



    //    var tot = tottransqty + parseFloat(Val);
        
    //    if (tot > BalQtyList[0].Bal_Stk_Qty) {
    //        var msg = 'Transfer Quntity should not exceed Order Balance quantity..';
    //        var flg = 4;
    //        AlartMessage(msg, flg);

    //        //alert('TransQty should not exceed OrderBal Qty..');
    //        Val = 0;
    //    }
    //    var orderno = $('#txtOrderNo').val();

    //    $.each(ItemStockList, function () {
    //        if (this.StockId == StockId) {
    //            this.TransQty = Val;
    //            this.Etype = BalQtyList[0].OrderType;
    //            this.Createdby = Guserid;
    //            this.ToOrderno = $('#txtOrderNo').val();
    //            this.ToStyleid = $('#txtHStyleId').val();
    //            this.Transdate = today;

    //        }
    //    });
    //    //loadItemTable(ItemList);

    //    var table = $('#tblStockTranItem').DataTable();
    //    var data = table.rows().data();

    //    $('input[id=txttransQty]').each(function (ig) {
    //        if (data[ig].StockId == StockId) {
    //            var row = $(this).closest('tr');
    //            row.find('#txttransQty').val(Val);

    //        }
    //    });
    //});


    $('#tblyarnDetails').on('click', 'tr', function (e) {

        debugger;
        rowindex = $(this).closest('tr').index();
        var currentrowp = PlanYarnDet.slice(rowindex);

        var FID = currentrowp[0]['FabricID'];
        var BCID = currentrowp[0]['BaseColorID'];
        var Qty = currentrowp[0]['Knit_In_Qty'];
        var Percnt = currentrowp[0]['Knit_In_Per'];
        var YlNo = currentrowp[0]['YSlNo'];
        var SlNo = currentrowp[0]['SlNo'];
        //var CompSlNo = currentrowp[0]['CompSno'];
        var dye = currentrowp[0]['Dyeing_Req'];

        var itemid = currentrowp[0]['Knit_In_ItemId'];
        var sizeid = currentrowp[0]['Knit_In_SizeID'];
        var colorid = currentrowp[0]['Knit_in_ColorID'];
        transbalqty = Qty;
        
        if (StockTranferMode == 1) {
            var orderno = $('#txtOrderNo').val();
            $.ajax({
                url: "/PlanningConsumption/GetBalQty",
                data: JSON.stringify({ OrderNo: orderno, Itemid: itemid, Colorid: colorid, Sizeid: sizeid }),
                type: "POST",
                contentType: "application/json;charset=utf-8",
                dataType: "json",
                success: function (result) {
                    debugger;
                    BalQtyList = result;
                    var uomid = 0;
                    if (BalQtyList.length > 0) {
                        transbalqty = BalQtyList[0].Bal_Stk_Qty;
                        uomid = BalQtyList[0].Pur_UOMid;
                    }

                    var Compid = $('#txtHCompanyId').val();
                    $.ajax({
                        url: "/StockTransfer/GetPurchaseStockDet",
                        data: JSON.stringify({ Compid: Compid, Itemid: itemid, Colorid: colorid, Sizeid: sizeid, Uomid: uomid }),
                        type: "POST",
                        contentType: "application/json;charset=utf-8",
                        dataType: "json",
                        success: function (result) {
                            debugger;
                            var obj = [];
                            obj = result.Value;
                            ItemStockList = obj;

                            var StktoOrdno = $('#txtOrderNo').val();
                            var StkToStyleid = $('#txtHStyleId').val();
                           
                            ItemStockList = $.grep(obj, function (v) {
                                return (v.OrderNo != StktoOrdno && v.Styleid != StkToStyleid);
                            });
                           


                            loadStockTransTable(ItemStockList)
                        
                            $('#myModalStock').modal('show');
                            //$('#balnceQty').text(BalQtyList[0].Bal_Stk_Qty);
                           
                            StockTranferMode = 0;

                        },
                        failure: function (errMsg) {
                            alert(errMsg);
                        }
                    });
                },
                failure: function (errMsg) {
                    alert(errMsg);
                }
            });
           
        }
        LoadstockDetails(itemid, sizeid, colorid);
        //var table = $('#tblyarnDetails').DataTable();
        //var FID = table.row($(this).parents('tr')).data()["FabricID"];
        //var BCID = table.row($(this).parents('tr')).data()["BaseColorID"];
        //var Qty = table.row($(this).parents('tr')).data()["Knit_In_Qty"];
        //var CompId = table.row($(this).parents('tr')).data()["ComponentId"];
        //var Percnt = table.row($(this).parents('tr')).data()["Knit_In_Per"];
        //var YlNo = table.row($(this).parents('tr')).data()["YSlNo"];
        //var SlNo = table.row($(this).parents('tr')).data()["SlNo"];
        //var CompSlNo = table.row($(this).parents('tr')).data()["CompSno"];


        //var dye = table.row($(this).parents('tr')).data()["Dyeing_Req"];




        //var FID = currentro1[0]['FabricID'];
        //var BCID = currentro1[0]['Fabric_ColorId'];
        //var Qty = currentro1[0]['Knit_In_Qty'];
        //var CompId = currentro1[0]['ComponentId'];
        //var Percnt = currentro1[0]['Knit_In_Per'];
        //var YlNo = currentro1[0]['YSlNo'];//Yarn Mas Serial number
        //var SlNo = currentro1[0]['SlNo']; //Yarn Det Serial number
        //var CompSlNo = currentro1[0]['CompSno'];//Component Serial number
        //var dye = currentro1[0]['Dyeing_Req'];

        //if (dye == 0) {
        //    alert('Check the dye value...');
        //    PlanYarnDyeing = [];
        //    loadYarnDyeAddTable(PlanYarnDyeing);
        //    return true;
        //}

        if (dye == 1) {
            var test = [];
            if (PlanYarnDyeingSave.length > 0) {
                // if (Mod == 0) {
                for (var f = 0; f < PlanYarnDyeingSave.length; f++) {
                    if (PlanYarnDyeingSave[f].YDSlNo == SlNo) {
                        test.push(PlanYarnDyeingSave[f]);
                    }
                }
                //}
                //else {
                //    for (var f = 0; f < PlanYarnDyeingSave.length; f++) {
                //        if (PlanYarnDyeingSave[f].YDSlNo == YlNo && PlanYarnDyeingSave[f].CompSlNo == CompSlNo) {
                //            test.push(PlanYarnDyeingSave[f]);
                //        }
                //    }
                //}

            }
            var totgc = [];
            var totgc2 = [];
            //for (var e = 0; e < YarnDyeing.length; e++) {
            //    var gid = YarnDyeing[e].Garment_ColorID;
            //    var totalamnt = 0;
            //    for (var q = 0; q < PlanCompFabricDetSave.length; q++) {
            //        if (PlanCompFabricDetSave[q].CompSlNo == CompSlNo && PlanCompFabricDetSave[q].ColorID == gid) {
            //            var amount = PlanCompFabricDetSave[q].Weight;
            //            totalamnt = totalamnt + parseFloat(amount);
            //        }
            //    }
            //    totgc.push(totalamnt);
            //}
            //if (totgc.length > 0) {
            //    for (var p = 0; p < totgc.length; p++) {
            //        var g = totgc[p];
            //        totgc[p] = parseFloat((Percnt * g) / 100).toFixed(3);
            //    }
            //}

            if (YarnDyeing.length > 0) {
                var garidlist = [];
                var garclid = 0;
                for (var e = 0; e < YarnDyeing.length; e++) {
                    var gid = YarnDyeing[e].Garment_ColorID;
                    var totalqty = 0;

                    for (var q = 0; q < PlanCompFabricDetSave.length; q++) {
                        if (PlanCompFabricDetSave[q].ColorID == gid && PlanCompFabricDetSave[q].BColorID == BCID && PlanCompFabricDetSave[q].FabricID == FID) {
                            garidlist.push(PlanCompFabricDetSave[q].ColorID);
                            var qty = PlanCompFabricDetSave[q].Weight;
                            totalqty = totalqty + parseFloat(qty);
                        }
                    }
                    var bcqty = 0;
                    for (var w = 0; w < PlanCompFabricDetSave.length; w++) {
                        if (PlanCompFabricDetSave[w].ColorID == gid && PlanCompFabricDetSave[w].BColorID == BCID && PlanCompFabricDetSave[w].FabricID == FID) {
                            var qty = PlanCompFabricDetSave[w].BColorPQty;
                            bcqty = bcqty + parseFloat(qty);
                        }
                    }
                    var finqty = 0;
                    for (var p = 0; p < PlanCompFabricDetSave.length; p++) {
                        if (PlanCompFabricDetSave[p].ColorID == gid && PlanCompFabricDetSave[p].BColorID == BCID && PlanCompFabricDetSave[p].FabricID == FID) {

                            var qty = PlanCompFabricDetSave[p].FColorPQty;
                            finqty = finqty + parseFloat(qty);
                        }
                    }

                    var totclrqty = parseFloat(bcqty) + parseFloat(finqty);

                    var tot = parseFloat(totalqty - totclrqty);

                    totgc.push(tot);
                    if (garclid != gid) {
                        totgc2.push(tot);
                    }
                    else {
                        tot = 0;
                        totgc2.push(tot);
                    }
                    garclid = gid;
                }

                if (totgc.length > 0) {
                    for (var p = 0; p < totgc.length; p++) {
                        var g = totgc[p];
                        totgc[p] = parseFloat((Percnt * g) / 100).toFixed(3);
                    }
                }
                if (totgc2.length > 0) {
                    for (var p = 0; p < totgc2.length; p++) {
                        var g = totgc2[p];
                        totgc2[p] = parseFloat((Percnt * g) / 100).toFixed(3);
                    }
                }
            }
            $.unique(garidlist);
            if (test.length == 0) {
                for (var l = 0; l < YarnDyeing.length; l++) {
                    var gcl = YarnDyeing[l].Garment_ColorID;
                    for (var r = 0; r < garidlist.length; r++) {
                        if (garidlist[r] == gcl) {
                            var lengp = 0;
                            if (PlanYarnDyeingSave.length == 0) {
                                lengp = 1;
                            }
                            else {
                                lengp = PlanYarnDyeingSave.length + 1;
                            }
                            var obj = {
                                CColor: YarnDyeing[l].CColor,
                                CColorID: YarnDyeing[l].CColorID,
                                GColor: YarnDyeing[l].GColor,
                                Garment_ColorID: YarnDyeing[l].Garment_ColorID,
                                SlNo: lengp,
                                CompSlNo: CompSlNo,// currentro1[0]['CompSno'],
                                YDSlNo: SlNo,// currentro1[0]['SlNo'],
                                ActWeight: totgc[l],
                                Weight: 0,
                                FabId: FID,//currentro1[0]['FabricID'],
                                GWeight: totgc[l],
                                Yarn_DyeColorID: YarnDyeing[l].CColorID,
                                Qty_Per: 0,
                                Purchase_Qty: 0,
                                Loss: 0,
                                ColorSeq: 0,
                                PerWeight: 0,
                                YPlanDetID: 0,
                                YPlanDyeID: 0,
                                Courses: 0

                            }
                            PlanYarnDyeingSave.push(obj);
                        }
                    }
                }
                loadYarnDyeAddTableSave(PlanYarnDyeingSave);
            }
            else {
                if (totgc.length == test.length) {
                    if (totgc.length > 0) {
                        for (var m = 0; test.length > m; m++) {
                            for (var p = 0; p < totgc.length; p++) {
                                if (m == p) {
                                    var g = totgc[p];
                                    //  totgc[p] = parseFloat((test[m].Qty_Per * g) / 100).toFixed(3);
                                    test[m].Weight = parseFloat((test[m].Qty_Per * g) / 100).toFixed(3);
                                    test[m].ActWeight = totgc[p];
                                    test[m].GWeight = totgc[p];
                                }
                            }
                        }
                    }
                    var e = 0;
                    for (var f = 0; f < PlanYarnDyeingSave.length; f++) {
                        if (PlanYarnDyeingSave[f].YDSlNo == SlNo) {
                            PlanYarnDyeingSave[f].Weight = test[e].Weight;
                            PlanYarnDyeingSave[f].ActWeight = test[e].ActWeight;
                            PlanYarnDyeingSave[f].GWeight = test[e].GWeight
                            e = e + 1;
                        }
                    }
                }
            }
            //else {
            //    for (var z = 0; z < PlanYarnDyeingSave.length; z++) {
            //        if (PlanYarnDyeingSave[z].YDSlNo == SlNo && PlanYarnDyeingSave[z].CompSlNo == CompSlNo) {
            //            PlanYarnDyeingSave[z].ActWeight = totgc[z];
            //        }
            //    }
            //}


            var ctry = [];
            ctry = PlanYarnDyeingSave;
            //if (Mod == 0) {
            //    ctry = $.grep(ctry, function (e) {
            //        if (e.CompSlNo == CompSlNo && e.YDSlNo == SlNo) {
            //            return e;
            //        }
            //    });
            //    PlanYarnDyeing = ctry;
            //}
            //else {
            ctry = $.grep(ctry, function (e) {
                if (e.YDSlNo == SlNo) {
                    return e;
                }
            });
            PlanYarnDyeing = ctry;
            //}


            loadYarnDyeAddTable(PlanYarnDyeing);
        }
        else {
            var ctry = [];
            PlanYarnDyeing = ctry;
            loadYarnDyeAddTable(PlanYarnDyeing);

        }
    });

});

function loadfabricStock() {
    $('#myModal2').modal('show');
}


//$(document).ready(function () {

//    $('#tCDbody').on('click', 'tr', function (e) {

//        debugger;

//        $('#myModal2').modal('show');
//        var table = $('#tCDbody').DataTable();
//        var row = $(this).closest('tr');
//        var data = $('#tCDbody').dataTable().fnGetData(row);

//        ///alert(data.CompSlNo);



//        var table = $('#tCDbody').DataTable();
//        //CompSlNo = table.row($(this).parents('tr')).data()["CompSlNo"];
//        //var Slno = table.row($(this).parents('tr')).data()["CompSlNo"];
//        //var gsm = table.row($(this).parents('tr')).data()["GSM"];
//        //FabricId = table.row($(this).parents('tr')).data()["FabricID"];
//        //Fabric = table.row($(this).parents('tr')).data()["FabricName"];

//        CompSlNo = data.CompSlNo;

//        gsm = data.GSM;
//        FabricId = data.FabricID;
//        Fabric = data.FabricName;
//        type = data.Fabric_Type;
//        Yarnid = CompSlNo;





//    });



//});


$(document).on('click', '.btnshowstock', function () {

    debugger;
    $('#myModal2').modal('show');
    var table = $('#tCDbody').DataTable();
    var row = $(this).closest('tr');
    var data = $('#tCDbody').dataTable().fnGetData(row);
    var sbclid = data.BColorID;
    var sbcl = data.Bcolor;
    var sfclid = data.FColorID;
    var sfcl = data.Fcolor;
    var sfbid = data.FabricID;
    var sksize = data.GreyWidth;
    var sfsize = data.FinishWidth;
    var sksizeid = data.GreyWidthID;
    var sfsizeid = data.FinishWidthID;
    var sfabric = data.Fabric;
    $('#BaseColor').val(sbcl);
    $('#FinColor').val(sfcl);
    $('#knittingsize').val(sksize);
    $('#Finsize').val(sfsize);
    $('#txtfabric').val(sfabric);

    $('#finishcolor').show();
    $('#basecolor').show();
    $('#Fabrictext').show();
    $('#basetotal').show();
    $('#lblfabricmsg').hide();
    $('#btnok').hide();
    $('#btncls').show();

    loadstockbasecolor(sfbid, sbclid, sksizeid);
    loadstockfinishcolor(sfbid, sfclid, sfsizeid);
});


function loadstockbasecolor(sfbid, sbclid, sksizeid) {
    debugger;

    $.ajax({
        url: "/PlanningConsumption/LoadStockBaseDetails",
        data: JSON.stringify({ FabricID: sfbid, BColorID: sbclid, GreyWidthID: sksizeid }),
        type: "POST",
        contentType: "application/json;charset=utf-8",
        dataType: "json",
        success: function (result) {
            debugger;
            BaseStockList = result;
            loadBaseStockTable(BaseStockList);

        },
        failure: function (errMsg) {
            alert(errMsg);
        }
    });
}

function loadstockfinishcolor(sfbid, sfclid, sfsizeid) {
    debugger;

    $.ajax({
        url: "/PlanningConsumption/LoadStockFinishDetails",
        data: JSON.stringify({ FabricID: sfbid, FColorID: sfclid, FinishWidthID: sfsizeid }),
        type: "POST",
        contentType: "application/json;charset=utf-8",
        dataType: "json",
        success: function (result) {
            debugger;
            FinishStockList = result;
            loadFinishStockTable(FinishStockList);

        },
        failure: function (errMsg) {
            alert(errMsg);
        }
    });
}



function loadBaseStockTable(compListObj) {
    debugger;
    var inputcount = 0;
    $('#tblbasestock tr').each(function () {
        inputcount++;
    });

    if (inputcount > 0) {
        $('#tblbasestock').DataTable().destroy();
    }
    $('#tblbasestock').empty();

    $('#tblbasestock').DataTable({
        data: compListObj,
        scrollY: 300,
        scrollCollapse: true,
        paging: false,
        fixedColumns: false,
        select: false,
        scrollX: "100%",
        scrollXInner: "100%",
        scroller: false,
        "bSort": false,
        columns: [
             { title: "S.No", data: "StkSlno" },
              { title: "Fabric", data: "Fabric" },
               { title: "Color", data: "Bcolor" },
               { title: "Size", data: "GreyWidth" },
            { title: "Order No", data: "SOrderno" },
            { title: "Ref No", data: "SRefno" },
            { title: "Trans.No", data: "STransno" },
            { title: "Supplier", data: "SSupplier" },
            { title: "Process", data: "SProcess" },
            { title: "Stock Qty", data: "StockQty" },
        ]
    });




}



function loadFinishStockTable(compListObj) {
    debugger;
    var inputcount = 0;
    $('#tblfinishstock tr').each(function () {
        inputcount++;
    });

    if (inputcount > 0) {
        $('#tblfinishstock').DataTable().destroy();
    }
    $('#tblfinishstock').empty();

    $('#tblfinishstock').DataTable({
        data: FinishStockList,
        scrollY: 300,
        scrollCollapse: true,
        paging: false,
        fixedColumns: false,
        select: false,
        scrollX: "100%",
        scrollXInner: "100%",
        scroller: false,
        columns: [
                { title: "S.No", data: "StkSlno" },
            { title: "Order No", data: "SOrderno" },
            { title: "Ref No", data: "SRefno" },
            { title: "Trans.No", data: "STransno" },
            { title: "Supplier", data: "SSupplier" },
            { title: "Process", data: "SProcess" },
            { title: "Stock Qty", data: "StockQty" },
        ]
    });



}


$(document).ready(function () {


    $('#tCDbody').on('click', 'tr', function (e) {

        debugger;
        rowindex = $(this).closest('tr').index();
        var scurrentrowp = PlanCompFabricDet.slice(rowindex);
        Fabindex = rowindex;
        $('#txtFabShow').val(scurrentrowp[0]['Fabric']);
        $('#txtFinishShow').val(scurrentrowp[0]['FinishWidth']);
        $('#txtGreyShow').val(scurrentrowp[0]['GreyWidth']);

    });


});

function LoadstockDetails(itemid, sizeid, colorid) {

    $.ajax({
        url: "/PlanningConsumption/LoadStockDetails",
        data: JSON.stringify({ Itemid: itemid, Sizeid: sizeid, Colorid: colorid }),
        type: "POST",
        async: false,
        contentType: "application/json;charset=utf-8",
        dataType: "json",
        success: function (result) {
            debugger;
            var obj = result;
            var stkdet = [];
            stkdet = result;
            $('#lblstk').show;
            var workOrdno = $('#txtWorkOrderNo').val();
            stkdet = $.grep(stkdet, function (v) {
                return (v.WorkOrdNo != workOrdno);
            });
            LoadStockDetTable(stkdet);
        },
        failure: function (errMsg) {
            alert(errMsg);
        }
    });

}

function LoadStockDetTable(StockList) {


    var inputcount = 0;
    $('#tblStockdet tr').each(function () {
        inputcount++;
    });

    if (inputcount > 0) {

        $('#tblStockdet').DataTable().destroy();
    }


    $('#tblStockdet').DataTable({
        data: StockList,
    
        scrollY: 300,
        scrollCollapse: true,
        paging: false,
        fixedColumns: false,
        select: false,
        scrollX: "100%",
        scrollXInner: "100%",
        scroller: false,
        "bSort": false,
        //"rowCallback": function (row, data, index) {
        //    if (data.OrdQty > "0") {
        //        $('td', row).css('background-color', '#FCF3CF');
        //        $('#ddlsizedet').attr('disabled', 'disabled');

        //    }
        //    //else if (data[6] == "4")
        //    //{
        //    //    //$('td', row).css('background-color', 'Orange');
        //    //}
        //},
        columns: [
            { title: "Order No", data: "SOrderno" },
            { title: "Ref No", data: "SRefno" },
            { title: "Style", data: "SStyle" },
              { title: "Supplier", data: "SSupplier" },
                { title: "Stock Qty", data: "StockQty" },
                  { title: "Stock Rate", data: "StockMarkUPRate" },
                    { title: "Stock Value", data: "StockValue" },
                      { title: "Stock Age", data: "StockAge" },
                 { title: "Despatch", data: "SDespatch" },
        ]
    });
}

function LoadYarnPODetails(Planid) {

    $.ajax({
        url: "/PlanningConsumption/LoadPurYarnDetails",
        data: JSON.stringify({ Planid: Planid}),
        type: "POST",
        async: false,
        contentType: "application/json;charset=utf-8",
        dataType: "json",
        success: function (result) {
            debugger;
            var obj = result;    
            PlanYarnPurchase = result;     
        },
        failure: function (errMsg) {
            alert(errMsg);
        }
    });

    $.ajax({
        url: "/PlanningConsumption/LoadFabDetails",
        data: JSON.stringify({ Planid: Planid }),
        type: "POST",
        async: false,
        contentType: "application/json;charset=utf-8",
        dataType: "json",
        success: function (result) {
            debugger;
            var obj = result;
            PlanFabricDC = result;
        },
        failure: function (errMsg) {
            alert(errMsg);
        }
    });

    $.ajax({
        url: "/PlanningConsumption/LoadFabPurDetails",
        data: JSON.stringify({ Planid: Planid }),
        type: "POST",
        async: false,
        contentType: "application/json;charset=utf-8",
        dataType: "json",
        success: function (result) {
            debugger;
            var obj = result;
            PlanFabPurchase = result;
        },
        failure: function (errMsg) {
            alert(errMsg);
        }
    });


    $.ajax({
        url: "/PlanningConsumption/LoadYarnPOQtyDetails",
        data: JSON.stringify({ Planid: Planid }),
        type: "POST",
        async: false,
        contentType: "application/json;charset=utf-8",
        dataType: "json",
        success: function (result) {
            debugger;
            var obj = result;
            PlanYarnPOQTY = result;
        },
        failure: function (errMsg) {
            alert(errMsg);
        }
    });


}


function LockDet() {
    var ord = $('#txtOrderNo').val();
    var sty = $('#txtHStyleId').val();

    $.ajax({
        url: "/BudgetApproval/LoadLockDet",
        data: JSON.stringify({ ordno: ord, styleid: sty, Type: 'P' }),
        type: "POST",
        async: false,
        contentType: "application/json;charset=utf-8",
        dataType: "json",
        success: function (result) {
            debugger;
            //var obj = result;
            PlanLock = result.Value;
            if (PlanLock.length > 0) {
                if (PlanLock[0].LockConsumption == 'Y') {
                    //$("#ConAdd").attr("disabled", true);
                    //$("#ConUpdate").attr("disabled", true);
                    //$("#ConDelete").attr("disabled", true);
                    //alert('Consumption Plan has been Locked,Please Contact Administrator..');
                    var msg = "Consumption Plan has been Locked,Please Contact Administrator...";
                    var flg = 4;
                    var mo = 1;
                    AlartMessage(msg, flg, mo);
                }
                if (PlanLock[0].LockFabric == 'Y') {
                    //$("#FabAdd").attr("disabled", true);
                    //$("#FabUpdate").attr("disabled", true);
                    //$("#FabDelete").attr("disabled", true);
                    //alert('Fabric Plan has been Locked,Please Contact Administrator..');
                    var msg = "Fabric Plan has been Locked,Please Contact Administrator...";
                    var flg = 4;
                    var mo = 1;
                    AlartMessage(msg, flg, mo);
                }
                if (PlanLock[0].LockYarn == 'Y') {
                    //$("#YarnAdd").attr("disabled", true);
                    //$("#YarnUpdate").attr("disabled", true);
                    //$("#YarnDelete").attr("disabled", true);
                    //alert('Yarn Plan has been Locked,Please Contact Administrator..');
                    var msg = "Yarn Plan has been Locked,Please Contact Administrator...";
                    var flg = 4;
                    var mo = 1;
                    AlartMessage(msg, flg, mo);
                }
            }
        },
        failure: function (errMsg) {
            alert(errMsg);
        }
    });

}


function addsize() {
    debugger;
    //if (rightsflg == 1) {
    $('#SizeID').val("");
    $('#SzName').val("");
    $('#seqno').val("");
    $('#ddlitemtype').val(0);
    $('#SzStatus').val("");
    $('#actualsize').val("");
    $('#lookup').val("");

    $('#SizeID').css('border-color', 'lightgrey');
    $('#seqno').css('border-color', 'lightgrey');
    $('#ddlitemtype').css('border-color', 'lightgrey');
    $('#Name').css('border-color', 'lightgrey');
    $('#Status').css('border-color', 'lightgrey');
    $('#actualsize').css('border-color', 'lightgrey');
    $('#lookup').css('border-color', 'lightgrey');
    $("#myModal4").modal('show');
    //}
    //else {
    //    alert("You don't have rights...");

    //}
}
function addcolor() {
    debugger;
    /// if (rightsflg == 1) {
    $('#ColorID').val("");
    $('#colorcode').val("");
    $('#colorname').val("");
    $('#pantone').val("");
    $('#Colorno').val("");
    $('#lookup').val("");
    // $('#coloroth').val("");
    $('#ClrStatus').val("");


    $('#ColorID').css('border-color', 'lightgrey');
    $('#ddlcolorgroup').css('border-color', 'lightgrey');
    $('#colorcode').css('border-color', 'lightgrey');
    $('#colorname').css('border-color', 'lightgrey');
    $('#pantone').css('border-color', 'lightgrey');
    $('#Colorno').css('border-color', 'lightgrey');
    $('#lookup').css('border-color', 'lightgrey');
    // $('#coloroth').css('border-color', 'lightgrey');
    $('#ClrStatus').css('border-color', 'lightgrey');
    $("#myModal5").modal('show');
    //}
    //else {
    //    alert("You don't have rights...");

    //}
}
function additem() {
    debugger;
    //if (rightsflg == 1) {
    if ($('#ddlstyle').val() == 0) {
        //alert('Please Select any Style..');
        var msg = "Please Select any Style...";
        var flg = 4;
        var mo = 1;
        AlartMessage(msg, flg, mo);
        return true;
    }
    else {
        AddStyleid = $('#ddlstyle').val();
    }
    $('#ItemID').val("");
    $('#ItmName').val("");
    // $('#ddlitemgroup').empty();
    $('#ddlItmitemtype').val('GARMENT');
    $('#Descript').val("");
    //$('#base').val("");
    //$('#sec').val("");
    //$('#pur').val("");
    $('#cgst').val("");
    $('#igst').val("");
    $('#sgst').val("");
    $('#Rate').val("");
    $('#Color').val("");
    $('#HSNCODE').empty();


    $('#ItmStatus').val("");


    $('#ItemID').css('border-color', 'lightgrey');
    $('#ddlitemgroup').css('border-color', 'lightgrey');
    $('#ddlItmitemtype').css('border-color', 'lightgrey');
    $('#Name').css('border-color', 'lightgrey');
    $('#Descript').css('border-color', 'lightgrey');
    $('#ItmStatus').css('border-color', 'lightgrey');
    $('#base').css('border-color', 'lightgrey');
    $('#sec').css('border-color', 'lightgrey');
    $('#pur').css('border-color', 'lightgrey');
    $('#cgst').css('border-color', 'lightgrey');
    $('#igst').css('border-color', 'lightgrey');
    $('#sgst').css('border-color', 'lightgrey');
    $('#Rate').css('border-color', 'lightgrey');
    $('#Color').css('border-color', 'lightgrey');
    $('#HSNCODE').css('border-color', 'lightgrey');


    //$('#tbody').DataTable().destroy();

    LoadItemGroupDDL("#ddlitemgroup");
    LoadUomDDL("#base,#sec,#pur");
    LoadHSNDDL('#HSNCODE');

    $('#HSNCODE').val(0);

    $("#myModal6").modal('show');
    //}
    //else {
    //    alert("You don't have rights...");

    //}
}
function SzAdd() {
    var res = Szvalidate();
    if (res == false) {
        return false;
    }
    debugger;
    var checkbox_value = "";
    var ischecked = false;

    $(":checkbox").each(function () {
        ischecked = $('#SzStatus').is(":checked");
        //if (ischecked) {
        //    checkbox_value += "on";
        //}
        //else {
        //    checkbox_value += "off";
        //}
    });

    var SizeObj = {
        SizeId: $('#SizeID').val(),
        SizeName: $('#SzName').val(),
        SeqNo: $('#seqno').val(),
        // ItemType: $('#ddlitemtype').val(),
        ItemType: $("#ddlitemtype option:selected").text(),
        IsActive: ischecked,
        LookUp: $('#lookup').val(),
        ActualSize: $('#actualsize').val()
    };
    LoadingSymb();
    $.ajax({
        url: "/Size/Add",
        data: JSON.stringify(SizeObj),
        type: "POST",
        contentType: "application/json;charset=utf-8",
        dataType: "json",
        success: function (result) {
            if (result.Value == 0) {
                window.location.href = "/Error/Index";
            }
            else if (result.Value == -1) {
                //alert('Given Size is Already Available...');
                var msg = "Given Size is Already Available...";
                var flg = 4;
                var mo = 1;
                AlartMessage(msg, flg, mo);
                return true;
            }
            else {

                //alert('Data Saved Successfully');
                var msg = "Data Saved Successfully...";
                var flg = 4;
                var mo = 1;
                AlartMessage(msg, flg, mo);
                $('#myModal4').modal('hide');
                LoadYSizeDDL("#ddlCount");
            }
        },
        error: function (errormessage) {
            alert(errormessage.responseText);
        }
    });
}

function Szvalidate() {
    var isValid = true;
    if ($('#SzName').val().trim() == "") {
        $('#SzName').css('border-color', 'Red');
        isValid = false;
    }
    else {
        $('#SzName').css('border-color', 'lightgrey');
    }
    //if ($('#actualsize').val().trim() == "") {
    //    $('#actualsize').css('border-color', 'Red');
    //    isValid = false;
    //}
    //else {
    //    $('#actualsize').css('border-color', 'lightgrey');
    //}
    return isValid;
}

function ClrAdd() {
    var res = clrvalidate();
    if (res == false) {
        return false;
    }
    debugger;
    var checkbox_value = "";
    var ischecked = false;

    $(":checkbox").each(function () {
        ischecked = $('#ClrStatus').is(":checked");
        //if (ischecked) {
        //    checkbox_value += "on";
        //}
        //else {
        //    checkbox_value += "off";
        //}
    });

    var ColorObj = {
        ColorId: $('#ColorID').val(),
        ColorCode: $('#colorcode').val(),
        ColorName: $('#colorname').val(),
        Pantone: $('#pantone').val(),
        ColorGroupId: $('#ddlcolorgroup').val(),
        ColorNo: $('#Colorno').val(),
        Lookup: $('#lookup').val(),
        //ColorOth: $('#coloroth').val(),
        IsActive: ischecked,
    };
    LoadingSymb();
    $.ajax({
        type: "POST",
        url: "/ColorMaster/Add",
        contentType: "application/json; charset=utf-8",
        data: JSON.stringify(ColorObj),
        dataType: "json",
        success: function (result) {
            if (result.Value == 0) {
                window.location.href = "/Error/Index";
            }
            else if (result.Value == -1) {
                //alert('Given Color is Already Available...');
                var msg = "Given Color is Already Available...";
                var flg = 4;
                var mo = 1;
                AlartMessage(msg, flg, mo);
                return true;
            }
            else {
                //alert('Data Saved Successfully');
                var msg = "Data Saved Successfully...";
                var flg = 4;
                var mo = 1;
                AlartMessage(msg, flg, mo);
                $('#myModal5').modal('hide');
                LoadColorDDL("#ddlColor");
            }


            // clearTextBox();
        },
        error: function (errormessage) {
            alert(errormessage.responseText);
        }
    });
}

function clrvalidate() {
    debugger;
    var isValid = true;
    if ($('#colorname').val() == "") {
        $('#colorname').css('border-color', 'Red');
        isValid = false;
    }
    else {
        $('#colorname').css('border-color', 'lightgrey');
    }


    return isValid;
}


//Add Data Function 
function ItmAdd() {
    var res = Itmvalidate();
    if (res == false) {
        return false;
    }
    debugger;
    var checkbox_value = "";
    var ischecked = false;

    $(":checkbox").each(function () {
        ischecked = $('#ItmStatus').is(":checked");
        //if (ischecked) {
        //    checkbox_value += "on";
        //}
        //else {
        //    checkbox_value += "off";
        //}
    });

    //var groupdropdown = $('#ddlitemgroup');

    var ItemObj = {
        Itemid: $('#ItemID').val(),
        ItemName: $('#ItmName').val(),
        ItemGroupId: $('#ddlitemgroup').val(),
        //ItemTypeName: $('#ddlitemtype').val(),
        ItemTypeName: $("#ddlItmitemtype option:selected").text(),
        Description: $('#Descript').val(),
        BasicUnit: $('#base').val(),
        SecUnit: $('#sec').val(),
        PurUnit: $('#pur').val(),
        IsActive: ischecked,
        CGST: $('#cgst').val(),
        SGST: $('#sgst').val(),
        IGST: $('#igst').val(),
        rate: $('#Rate').val(),
        colornum: $('#Color').val(),
        HSNCODE: $('#HSNCODE').val(),
        itemcat: "P"
    };
    LoadingSymb();
    $.ajax({
        url: "/Item/Add",
        data: JSON.stringify(ItemObj),
        type: "POST",
        contentType: "application/json;charset=utf-8",
        dataType: "json",
        success: function (result) {
            if (result.Value == 0) {
                window.location.href = "/Error/Index";
            }
            else if (result.Value == -1) {
                //alert('Given Item is Already Available...');
                var msg = "Given Item is Already Available...";
                var flg = 4;
                var mo = 1;
                AlartMessage(msg, flg, mo);
                return true;
            }
            else {

                $('#myModal6').modal('hide');
                //alert('Data Saved Successfully');
                var msg = "Data Saved Successfully...";
                var flg = 4;
                var mo = 1;
                AlartMessage(msg, flg, mo);
                //$('#ddlcoloritem').empty();
                //fngetitembystyle(AddStyleid);
                LoadComponentDDL("#ddlComponent");
                LoadFabricDDL("#ddlFabric");
                LoadYarnDDL("#ddlYarn");
            }
            // clearTextBox();
        },
        error: function (errormessage) {
            alert(errormessage.responseText);
        }
    });
}


//Validation using jquery
function Itmvalidate() {
    debugger;
    var isValid = true;
    if ($('#ItmName').val().trim() == "") {
        $('#ItmName').css('border-color', 'Red');
        isValid = false;
    }
    else {
        $('#ItmName').css('border-color', 'lightgrey');
    }

    if ($('#ddlitemgroup').val() == 0) {
        $('#ddlitemgroup').css('border-color', 'Red');
        isValid = false;
    }
    else {
        $('#ddlitemgroup').css('border-color', 'lightgrey');
    }
    if ($('#ddlItmitemtype').val() == 0) {
        $('#ddlItmitemtype').css('border-color', 'Red');
        isValid = false;
    }
    else {
        $('#ddlItmitemtype').css('border-color', 'lightgrey');
    }

    if ($('#pur').val() == 0) {
        $('#pur').css('border-color', 'Red');
        isValid = false;
    }
    else {
        $('#pur').css('border-color', 'lightgrey');
    }
    if ($('#sec').val() == 0) {
        $('#sec').css('border-color', 'Red');
        isValid = false;
    }
    else {
        $('#sec').css('border-color', 'lightgrey');
    }
    if ($('#base').val() == 0) {
        $('#base').css('border-color', 'Red');
        isValid = false;
    }
    else {
        $('#base').css('border-color', 'lightgrey');
    }
    return isValid;
}

$(document).on('click', '#profile-tab1', function () {
    debugger;
    if (PlanCompFabricDetSave.length == 0) {
        EditCompFabricLossPlanList(PLID, fcompno);
    }
});


function loadCompFabBitTable(list) {
    debugger;
    var inputcount = 0;
    $('#tCDBbody tr').each(function () {
        inputcount++;
    });
    if (inputcount > 0) {
        $('#tCDBbody').DataTable().destroy();
    }
    $('#tCDBbody').empty();
    $('#tCDBbody').DataTable({
        data: list,
        "deferRender": true,
        scrollY: 150,
        scrollCollapse: true,
        paging: false,
        fixedColumns: false,
        select: false,
        scrollX: "100%",
        scrollXInner: "100%",
        scroller: false,
        "bSort": false,
        "rowCallback": function (row, data, index) {
            if (data.CheckDcMade > "0") {
                $('td', row).css('background-color', '#FCF3CF');
            }
        },
        columns: [
            { title: "SNo", data: "snumb", "visible": false },
            { title: "FPlanId", data: "FPlanId", "visible": false },
            { title: "ColorID", data: "ColorID", "visible": false },

              {
                  title: "Color", data: "Color",
                  render: function (data, type, row) {
                      return '<input type="text" class="loadBitColor form-control" id="loadBitColor" style="width: 50px;text-align: center;" value=' + data + ' disabled>';
                  },
              },

            { title: "SizeId", data: "SizeId", "visible": false },

             {
                 title: "Size", data: "Size",
                 render: function (data, type, row) {
                     return '<input type="text" class="loadBitSize form-control" id="loadBitSize" style="width: 50px;text-align: center;" value=' + data + ' disabled>';
                 },
             },


              {
                  title: "Prod Qty", data: "Prdn_Qty",
                  render: function (data, type, row) {
                      return '<input type="text" class="loadBitPrdn_Qty form-control" id="loadBitPrdn_Qty" style="width: 50px;text-align: center;" value=' + data + ' disabled>';
                  },
              },


            //{
            //    title: "Act Weight", data: "ActWeight",
            //},
              {
                  title: "Weight", data: "Weight",
                  render: function (data, type, row) {
                      return '<input type="text" class="loadBitWeight form-control" id="loadBitWeight" style="width: 50px;text-align: center;" value=' + data + ' disabled>';
                  },
              },

            { title: "FabricID", data: "FabricID", "visible": false },
            {
                title: "GreyWidthID", data: "GreyWidthID", "visible": false,
            },
            {
                title: "FinishWidthID", data: "FinishWidthID", "visible": false,
            },

            { title: "PlanID", data: "PlanID", "visible": false },
            { title: "Comp SlNo", data: "CompSlNo", "visible": false },

       {
           title: "FinishColor", data: "Fcolor",
           render: function (data, type, row) {
               return '<input type="text" class="loadBitFcolor form-control" id="loadBitFcolor" style="width: 50px;text-align: center;" value=' + data + ' disabled>';
           },
       },


          {
              title: "PrintColor", data: "PColor",
              render: function (data, type, row) {
                  return '<input type="text" class="loadBitPColor form-control" id="loadBitPColor" style="width: 50px;text-align: center;" value=' + data + ' disabled>';
              },
          },


           {
               title: "PieceperBit", data: "PiecePerBit",
               render: function (data, type, row) {
                   if (row.CheckDcMade > "0") {
                       return '<input type="text" class="loadBitqty form-control"  id="loadBitqty" disabled style="width: 50px;text-align: center;" value=' + data + ' >';
                   } else {
                       return '<input type="text" class="loadBitqty form-control" id="loadBitqty" style="width: 50px;text-align: center;" value=' + data + ' >';
                   }
               },
           },
           {
               title: "Bit Size", data: "BitSize",
               render: function (data, type, row) {
                   if (row.CheckDcMade > 0) {
                       var $select = $("<select></select>", {
                           "id": "ddlBSize",
                           "value": data,
                           "class": "form-control selWidth ddlBSize",
                           "disabled": true
                       });

                       $.each(BitSizelist, function (k, v) {
                           var $option = $("<option></option>", {
                               "text": v.Size,
                               "value": v.SizeId
                           });

                           if (data === v.Size) {
                               $option.attr("selected", "selected")
                           }
                           $select.append($option);
                       });


                       return $select.prop("outerHTML");
                   } else {
                       var $select = $("<select></select>", {
                           "id": "ddlBSize",
                           "value": data,
                           "class": "form-control selWidth ddlBSize",
                       });

                       $.each(BitSizelist, function (k, v) {
                           var $option = $("<option></option>", {
                               "text": v.Size,
                               "value": v.SizeId
                           });

                           if (data === v.Size) {
                               $option.attr("selected", "selected")
                           }
                           $select.append($option);
                       });


                       return $select.prop("outerHTML");
                   }
               }
           },

           {
               title: "Bit Item", data: "BitItem",
               render: function (data, type, row) {
                   if (row.CheckDcMade > 0) {
                       var $select = $("<select></select>", {
                           "id": "ddlBItem",
                           "value": data,
                           "class": "form-control selWidth ddlBItem",
                           "disabled": true
                       });
                       $.each(BitItemlist, function (k, v) {
                           var $option = $("<option></option>", {
                               "text": v.BitItem,
                               "value": v.BitItemId
                           });

                           if (data === v.BitItem) {
                               $option.attr("selected", "selected")
                           }
                           $select.append($option);
                       });
                       return $select.prop("outerHTML");
                   } else {
                       var $select = $("<select></select>", {
                           "id": "ddlBItem",
                           "value": data,
                           "class": "form-control selWidth ddlBItem",
                       });
                       $.each(BitItemlist, function (k, v) {
                           var $option = $("<option></option>", {
                               "text": v.BitItem,
                               "value": v.BitItemId
                           });

                           if (data === v.BitItem) {
                               $option.attr("selected", "selected")
                           }
                           $select.append($option);
                       });
                       return $select.prop("outerHTML");
                   }
               }
           },

              {
                  title: "TotalBits", data: "TotalBit",
                  render: function (data, type, row) {
                      return '<input type="text" class="loadTotalBit form-control" id="loadTotalBit" style="width: 50px;text-align: center;" value=' + data + ' disabled>';
                  },
              },


        ]
    });

    //totBitwght();

    $("#tCDBbody tr").click(function () {
        var selected = $(this).hasClass("selected");
        $("#tCDBbody tr").removeClass("selected");
        if (!selected)
            $(this).addClass("selected");
    });

}


function loadGSize() {
    debugger;
    $.ajax({
        url: "/PlanningFabric/GSizeList",
        data: JSON.stringify({}),
        type: "POST",
        contentType: "application/json; charset=utf-8",
        dataType: "json",
        success: function (json) {

            BitSizelist = json;
        },
        failure: function (errMsg) {
            alert(errMsg);
        }
    });
}


function loadBitItem() {
    debugger;
    $.ajax({
        url: "/PlanningFabric/BitItemList",
        data: JSON.stringify({}),
        type: "POST",
        contentType: "application/json; charset=utf-8",
        dataType: "json",
        success: function (json) {
            BitItemlist = json;
        },
        failure: function (errMsg) {
            alert(errMsg);
        }
    });
}

$(document).on('click', '#profile-tab3', function () {
    loadcomponentBitTable(compList);
    if (PlanCompBitFabricDetSave.length == 0) {
        LoadtotfabriceditdetforBit(PLID);
    }
    totPcswght();
});


function LoadtotfabriceditdetforBit(PlId) {
    debugger;
    $.ajax({
        url: "/PlanningConsumption/ListConFabricEdittotDetails",
        data: JSON.stringify({ PlanID: PlId }),
        type: "POST",
        contentType: "application/json;charset=utf-8",
        dataType: "json",
        async: false,
        success: function (result) {
            debugger;
            var obj = result;

            if (BaseColorlist.length > 0 && BaseColorlist != undefined) {
                for (var f = 0; f < obj.length; f++) {
                    var fid = obj[f].FabricID;
                    for (var n = 0; n < compList.length; n++) {
                        if (compList[n].FabricID == fid) {
                            obj[f].Fabric = compList[n].FabricName;
                        }
                    }
                }
                for (var c = 0; c < obj.length; c++) {
                    var bcl = obj[c].BColorID;
                    for (var n = 0; n < BaseColorlist.length; n++) {
                        if (BaseColorlist[n].ColorID == bcl) {
                            obj[c].Bcolor = BaseColorlist[n].Color;
                        }
                    }
                }
                for (var t = 0; t < obj.length; t++) {
                    var fci = obj[t].FColorID;
                    for (var n = 0; n < FinishColorlist.length; n++) {
                        if (FinishColorlist[n].ColorID == fci) {
                            obj[t].Fcolor = FinishColorlist[n].Color;
                        }
                    }
                }

                for (var t = 0; t < obj.length; t++) {
                    var pci = obj[t].PColorID;
                    for (var n = 0; n < FinishColorlist.length; n++) {
                        if (FinishColorlist[n].ColorID == pci) {
                            obj[t].PColor = FinishColorlist[n].Color;
                        }
                    }
                }

                for (var t = 0; t < obj.length; t++) {
                    var pci = obj[t].PColorID;
                    for (var n = 0; n < PrintColorlist.length; n++) {
                        if (PrintColorlist[n].ColorID == pci) {
                            obj[t].PColor = PrintColorlist[n].Color;
                        }
                    }
                }
                for (var t = 0; t < obj.length; t++) {
                    var szi = obj[t].BitSizeId;
                    if (szi > 0) {
                        for (var n = 0; n < BitSizelist.length; n++) {
                            if (BitSizelist[n].SizeId == szi) {
                                obj[t].BitSize = BitSizelist[n].Size;
                            }
                        }
                    } else {
                        obj[t].BitSizeId = BitSizelist[0].SizeId;
                        obj[t].BitSize = BitSizelist[0].Size;
                    }
                }

                for (var t = 0; t < obj.length; t++) {
                    var iti = obj[t].BitItemId;
                    if (iti > 0) {
                        for (var n = 0; n < BitItemlist.length; n++) {
                            if (BitItemlist[n].BitItemId == iti) {
                                obj[t].BitItem = BitItemlist[n].BitItem;
                            }
                        }
                    } else {
                        obj[t].BitItemId = BitItemlist[0].BitItemId;
                        obj[t].BitItem = BitItemlist[0].BitItem;
                    }
                }


                for (var t = 0; t < obj.length; t++) {
                    if (obj[t].PiecePerBit > 0) {
                        obj[t].TotalBit = parseFloat(obj[t].Prdn_Qty / obj[t].PiecePerBit).toFixed(0);
                    } else {
                        obj[t].TotalBit = 0;
                    }
                }

                PlanCompBitFabricDetSave = obj;

                var bitclno = 0;
                if (PlanCompBitFabricDetSave.length > 0) {
                    bitclno = PlanCompBitFabricDetSave[0].CompSlNo;
                }
                PlanCompBitFabricDet = $.grep(PlanCompBitFabricDetSave, function (v) {
                    return (v.CompSlNo == bitclno);
                });
                if (PlanCompBitFabricDet.length > 0) {
                    loadCompFabBitTable(PlanCompBitFabricDet);
                }

            }
        },
        failure: function (errMsg) {
            alert(errMsg);
        }
    });
}

function loadcomponentBitTable(compList) {
    debugger;
    // $('#tblcompdetails').DataTable().destroy();
    var inputcount = 0;
    $('#tCFBbody tr').each(function () {
        inputcount++;
    });

    if (inputcount > 0) {
        $('#tCFBbody').DataTable().destroy();
    }
    $('#tCFBbody').empty();

    compList.sort(function (a, b) {
        return a.CompSlNo - b.CompSlNo;
    })
    $('#tCFBbody').DataTable({
        //'bSortable': false,
        //'aTargets' : [ 7, 8 ],
        data: compList,
        scrollY: 300,
        scrollCollapse: true,
        paging: false,
        fixedColumns: false,
        select: false,
        scrollX: "100%",
        scrollXInner: "100%",
        scroller: false,
        "bSort": false,
        "rowCallback": function (row, data, index) {
            if (data.CheckDcMade > "0") {
                $('td', row).css('background-color', '#FCF3CF');
            }
        },
        columns: [
             { title: "Comp SlNo", data: "CompSlNo", "visible": false },
            { title: "Comp_Plan_MasID", data: "Comp_Plan_MasID", "visible": false },
            { title: "ComponentID", data: "ComponentID", "visible": false },
            { title: "Component Name", data: "ComponentName" },
            { title: "FabricID", data: "FabricID", "visible": false },
            { title: "Fabric Name", data: "FabricName" }
        ]
    });
    $("#tCFBbody tr").click(function () {
        var selected = $(this).hasClass("selected");
        $("#tCFBbody tr").removeClass("selected");
        if (!selected)
            $(this).addClass("selected");
    });
}



$(document).ready(function () {

    $('#tCFBbody').on('click', 'tr', function (e) {
        debugger;
        var table = $('#tCFBbody').DataTable();
        var row = $(this).closest('tr');
        var data = $('#tCFBbody').dataTable().fnGetData(row);

        var bitclno = data.CompSlNo;

        PlanCompBitFabricDet = $.grep(PlanCompBitFabricDetSave, function (v) {
            return (v.CompSlNo == bitclno);
        });



        if (PlanCompBitFabricDet.length > 0) {
            $('#txtFabShowBit').val(PlanCompBitFabricDet[0]['Fabric']);
            $('#txtFinishShowBit').val(PlanCompBitFabricDet[0]['FinishWidth']);
            $('#txtGreyShowBit').val(PlanCompBitFabricDet[0]['GreyWidth']);

            if ($('#tCDBbody').DataTable().rows().count() > 0) {
                // fillfabrictbl(PlanCompFabricDet);
            }
            else {
                loadCompFabBitTable(PlanCompBitFabricDet);
            }
        }
        totPcswght();
        var table = $('#tCDBbody').DataTable();
        var ecdata = table.rows().data();
        debugger;
        $('input[id=loadBitqty]').each(function (ig) {
            debugger;
            // if (ecdata[ig].snumb == (ig + 1)) {
            var row = $(this).closest('tr');

            for (var h = 0; h < PlanCompBitFabricDet.length; h++) {
                if (ig == h) {

                    var ColorID = PlanCompBitFabricDet[h].ColorID;
                    var Color = PlanCompBitFabricDet[h].Color;
                    var SizeId = PlanCompBitFabricDet[h].SizeId;
                    var Size = PlanCompBitFabricDet[h].Size;
                    var Prdn_Qty = PlanCompBitFabricDet[h].Prdn_Qty;
                    var ActWeight = PlanCompBitFabricDet[h].ActWeight;
                    var Weight = PlanCompBitFabricDet[h].Weight;
                    var Fcolor = PlanCompBitFabricDet[h].Fcolor;
                    var PColor = PlanCompBitFabricDet[h].PColor;
                    var BitSize = PlanCompBitFabricDet[h].BitSize;
                    var BitItem = PlanCompBitFabricDet[h].BitItem;
                    var FabricType = PlanCompBitFabricDet[h].FabricType;
                    var PlanID = PlanCompBitFabricDet[h].PlanID;
                    var CompSlNo = PlanCompBitFabricDet[h].CompSlNo;
                    var PiecePerBit = PlanCompBitFabricDet[h].PiecePerBit;
                    var BitSizeId = PlanCompBitFabricDet[h].BitSizeId;
                    var BitItemId = PlanCompBitFabricDet[h].BitItemId;
                    var TotalBit = PlanCompBitFabricDet[h].TotalBit;

                    row.find('#loadBitqty').val(PiecePerBit);
                    row.find('#loadBitColor').val(Color);
                    row.find('#loadBitSize').val(Size);
                    row.find('#loadBitPrdn_Qty').val(Prdn_Qty);
                    row.find('#loadBitWeight').val(Weight);
                    row.find('#loadBitFcolor').val(Fcolor);
                    row.find('#loadBitPColor').val(PColor);
                    row.find('#loadTotalBit').val(TotalBit);

                    $.each(BitSizelist, function (k, v) {
                        var id = 0;
                        if (BitSize === v.Size) {
                            id = v.SizeId
                            row.find('#ddlBSize').val(id);
                        }

                    });

                    $.each(BitItemlist, function (k, v) {
                        var bid = 0;
                        if (BitItem === v.BitItem) {
                            bid = v.BitItemId
                            row.find('#ddlBItem').val(bid);
                        }

                    });

                    //if (CheckDcMade > "0") {
                    //    $('td', row).css('background-color', '#FCF3CF');

                    //    row.find('#ddlBColor').attr('disabled', true);
                    //    row.find('#ddlFColor').attr('disabled', true);
                    //    row.find('#txtPurQty').attr('disabled', true);
                    //    row.find('#txtFPurQty').attr('disabled', true);

                    //}
                    //else {
                    //    $('td', row).css('background-color', '#ffffff');

                    //    row.find('#ddlBColor').attr('disabled', false);
                    //    row.find('#ddlFColor').attr('disabled', false);
                    //    row.find('#txtPurQty').attr('disabled', false);
                    //    row.find('#txtFPurQty').attr('disabled', false);

                    //}

                }
            }

        });
    });

});


$(document).ready(function () {
    $('#tCDBbody').on('click', 'tr', function (e) {
        //debugger;
        var bitrowindex = $(this).closest('tr').index();
        var scurrentrowp = PlanCompBitFabricDet.slice(bitrowindex);
        bitrowindex = bitrowindex;
        $('#txtFabShowBit').val(scurrentrowp[0]['Fabric']);
        $('#txtFinishShowBit').val(scurrentrowp[0]['FinishWidth']);
        $('#txtGreyShowBit').val(scurrentrowp[0]['GreyWidth']);
    });
});

$(document).on('keyup', '.loadBitqty', function (e) {
    debugger;
    bitrowindex = $(this).closest('tr').index();
    var val = $(this).val();
    indexforbitfabfill = bitrowindex;
    bitfabfillvar = 'BITQ';

    var currentrow = PlanCompBitFabricDet.slice(bitrowindex);
    var s = currentrow[0].CompSlNo;
    var sno = currentrow[0].snumb;

    $.each(PlanCompBitFabricDet, function () {
        if (this.CompSlNo == s && this.snumb == sno) {
            this.PiecePerBit = val;
        }
    });

    $.each(PlanCompBitFabricDetSave, function () {
        if (this.CompSlNo == s && this.snumb == sno) {
            this.PiecePerBit = val;
        }
    });

    LoadBitFabricFill();

    var rows = $("#tCDBbody").dataTable().fnGetNodes();
    var dtTable = $('#tCDBbody').DataTable();
    for (var i = 0; i < rows.length; i++) {
        var sn = dtTable.cells({ row: i, column: 0 }).data()[0];
        $('input[id=loadBitqty]').each(function () {
            if (sn == sno && $(this).val() == val) {
                var row = $(this).closest('tr');
                var num = row.find('#loadBitqty').val();
                row.find('#loadBitqty').focus().val('').val(num);
                return true;
            }
        });
    }
});


$(document).on('change', '.ddlBSize', function (e) {
    debugger;
    bitrowindex = $(this).closest('tr').index();
    var val = $(this).val();
    //var txt = $(this).text();
    indexforbitfabfill = bitrowindex;
    bitfabfillvar = 'BITSZ';

    var currentrow = PlanCompBitFabricDet.slice(bitrowindex);
    var s = currentrow[0].CompSlNo;
    var sno = currentrow[0].snumb;

    $.each(PlanCompBitFabricDet, function () {
        if (this.CompSlNo == s && this.snumb == sno) {
            this.BitSizeId = val;
            // this.BitSize = txt;
        }
    });

    $.each(PlanCompBitFabricDetSave, function () {
        if (this.CompSlNo == s && this.snumb == sno) {
            this.BitSizeId = val;
            // this.BitSize = txt;
        }
    });

    for (var t = 0; t < PlanCompBitFabricDet.length; t++) {
        var szi = PlanCompBitFabricDet[t].BitSizeId;
        for (var n = 0; n < BitSizelist.length; n++) {
            if (BitSizelist[n].SizeId == szi) {
                PlanCompBitFabricDet[t].BitSize = BitSizelist[n].Size;
            }
        }
    }

    for (var t = 0; t < PlanCompBitFabricDetSave.length; t++) {
        var szi = PlanCompBitFabricDetSave[t].BitSizeId;
        for (var n = 0; n < BitSizelist.length; n++) {
            if (BitSizelist[n].SizeId == szi) {
                PlanCompBitFabricDetSave[t].BitSize = BitSizelist[n].Size;
            }
        }
    }

    //LoadBitFabricFill();

    //var rows = $("#tCDBbody").dataTable().fnGetNodes();
    //var dtTable = $('#tCDBbody').DataTable();
    //for (var i = 0; i < rows.length; i++) {
    //    var sn = dtTable.cells({ row: i, column: 0 }).data()[0];
    //    $('input[id=loadBitqty]').each(function () {
    //        if (sn == sno && $(this).val() == val) {
    //            var row = $(this).closest('tr');
    //            var num = row.find('#loadBitqty').val();
    //            row.find('#loadBitqty').focus().val('').val(num);
    //            return true;
    //        }
    //    });
    //}
});

$(document).on('change', '.ddlBItem', function (e) {
    debugger;
    bitrowindex = $(this).closest('tr').index();
    var val = $(this).val();
    //var txt = $(this).text();
    indexforbitfabfill = bitrowindex;
    bitfabfillvar = 'BITIT';

    var currentrow = PlanCompBitFabricDet.slice(bitrowindex);
    var s = currentrow[0].CompSlNo;
    var sno = currentrow[0].snumb;

    $.each(PlanCompBitFabricDet, function () {
        if (this.CompSlNo == s && this.snumb == sno) {
            this.BitItemId = val;
            // this.BitSize = txt;
        }
    });

    $.each(PlanCompBitFabricDetSave, function () {
        if (this.CompSlNo == s && this.snumb == sno) {
            this.BitItemId = val;
            // this.BitSize = txt;
        }
    });

    for (var t = 0; t < PlanCompBitFabricDet.length; t++) {
        var iti = PlanCompBitFabricDet[t].BitItemId;
        for (var n = 0; n < BitItemlist.length; n++) {
            if (BitItemlist[n].BitItemId == iti) {
                PlanCompBitFabricDet[t].BitItem = BitItemlist[n].BitItem;
            }
        }
    }

    for (var t = 0; t < PlanCompBitFabricDetSave.length; t++) {
        var iti = PlanCompBitFabricDetSave[t].BitItemId;
        for (var n = 0; n < BitItemlist.length; n++) {
            if (BitItemlist[n].BitItemId == iti) {
                PlanCompBitFabricDetSave[t].BitItem = BitItemlist[n].BitItem;
            }
        }
    }

    //LoadBitFabricFill();

    //var rows = $("#tCDBbody").dataTable().fnGetNodes();
    //var dtTable = $('#tCDBbody').DataTable();
    //for (var i = 0; i < rows.length; i++) {
    //    var sn = dtTable.cells({ row: i, column: 0 }).data()[0];
    //    $('input[id=loadBitqty]').each(function () {
    //        if (sn == sno && $(this).val() == val) {
    //            var row = $(this).closest('tr');
    //            var num = row.find('#loadBitqty').val();
    //            row.find('#loadBitqty').focus().val('').val(num);
    //            return true;
    //        }
    //    });
    //}
});


function LoadBitFabricFill() {


    var table = $('#tCDBbody').DataTable();
    var ecdata = table.rows().data();
    debugger;
    $('input[id=loadBitqty]').each(function (ig) {
        debugger;
        // if (ecdata[ig].snumb == (ig + 1)) {
        var row = $(this).closest('tr');

        for (var h = 0; h < PlanCompBitFabricDet.length; h++) {
            if (ig == h) {

                var ColorID = PlanCompBitFabricDet[h].ColorID;
                var Color = PlanCompBitFabricDet[h].Color;
                var SizeId = PlanCompBitFabricDet[h].SizeId;
                var Size = PlanCompBitFabricDet[h].Size;
                var Prdn_Qty = PlanCompBitFabricDet[h].Prdn_Qty;
                var ActWeight = PlanCompBitFabricDet[h].ActWeight;
                var Weight = PlanCompBitFabricDet[h].Weight;
                var Fcolor = PlanCompBitFabricDet[h].Fcolor;
                var PColor = PlanCompBitFabricDet[h].PColor;
                var BitSize = PlanCompBitFabricDet[h].BitSize;
                var BitItem = PlanCompBitFabricDet[h].BitItem;
                var FabricType = PlanCompBitFabricDet[h].FabricType;
                var PlanID = PlanCompBitFabricDet[h].PlanID;
                var CompSlNo = PlanCompBitFabricDet[h].CompSlNo;
                var PiecePerBit = PlanCompBitFabricDet[h].PiecePerBit;
                var BitSizeId = PlanCompBitFabricDet[h].BitSizeId;
                var BitItemId = PlanCompBitFabricDet[h].BitItemId;

                if (PlanCompBitFabricDet[h].PiecePerBit > 0 && PlanCompBitFabricDet[h].Prdn_Qty > 0) {

                    var TotalBit = parseFloat(PlanCompBitFabricDet[h].Prdn_Qty / PlanCompBitFabricDet[h].PiecePerBit).toFixed(0);
                    PlanCompBitFabricDet[h].TotalBit = TotalBit;
                }
                else {
                    var TotalBit = 0;
                    PlanCompBitFabricDet[h].TotalBit = TotalBit;
                }

                row.find('#loadBitqty').val(PiecePerBit);
                row.find('#loadBitColor').val(Color);
                row.find('#loadBitSize').val(Size);
                row.find('#loadBitPrdn_Qty').val(Prdn_Qty);
                row.find('#loadBitWeight').val(Weight);
                row.find('#loadBitFcolor').val(Fcolor);
                row.find('#loadBitPColor').val(PColor);
                row.find('#loadTotalBit').val(TotalBit);

                $.each(BitSizelist, function (k, v) {
                    var id = 0;
                    if (BitSize === v.Size) {
                        id = v.SizeId
                        row.find('#ddlBSize').val(id);
                    }

                });

                $.each(BitItemlist, function (k, v) {
                    var bid = 0;
                    if (BitItem === v.BitItem) {
                        bid = v.BitItemId
                        row.find('#ddlBItem').val(bid);
                    }

                });

                //if (CheckDcMade > "0") {
                //    $('td', row).css('background-color', '#FCF3CF');

                //    row.find('#ddlBColor').attr('disabled', true);
                //    row.find('#ddlFColor').attr('disabled', true);
                //    row.find('#txtPurQty').attr('disabled', true);
                //    row.find('#txtFPurQty').attr('disabled', true);

                //}
                //else {
                //    $('td', row).css('background-color', '#ffffff');

                //    row.find('#ddlBColor').attr('disabled', false);
                //    row.find('#ddlFColor').attr('disabled', false);
                //    row.find('#txtPurQty').attr('disabled', false);
                //    row.find('#txtFPurQty').attr('disabled', false);

                //}

            }
        }

    });
    totPcswght();
}

function totPcswght() {
    debugger;
    if (PlanCompBitFabricDet.length > 0) {
        if (fcompno == 0) {
            fcompno == 1;
        } else {
            fcompno == fcompno;
        }

        //var totalamnt = 0;
        //for (var e = 0; e < PlanCompBitFabricDet.length; e++) {
        //    var totPiecePerBit = PlanCompBitFabricDet[e].PiecePerBit;
        //    totalamnt = totalamnt + parseFloat(totPiecePerBit);
        //}
        //$('#txtbtotPcs').val(totalamnt.toFixed(0));

        var totalamnt2 = 0;
        for (var e = 0; e < PlanCompBitFabricDet.length; e++) {
            var totTotalBit = PlanCompBitFabricDet[e].TotalBit;
            totalamnt2 = totalamnt2 + parseFloat(totTotalBit);
        }
        $('#txtbtotbits').val(totalamnt2.toFixed(0));

        var totalamnt3 = 0;
        for (var e = 0; e < PlanCompBitFabricDet.length; e++) {
            var totPiecePerBit = PlanCompBitFabricDet[e].Weight;
            totalamnt3 = totalamnt3 + parseFloat(totPiecePerBit);
        }
        $('#txtbtotwgt').val(totalamnt3.toFixed(3));


    }
}



function loadBitfill() {
    debugger;
    LoadingSymb();
    indexforbitfabfill;
    var currentrow = PlanCompBitFabricDet.slice(indexforbitfabfill);
    var compsno = currentrow[0].CompSlNo;
    var sno = currentrow[0].snumb;
    var BitSizeId = currentrow[0].BitSizeId;
    var BitSize = currentrow[0].BitSize;
    var PiecePerBit = currentrow[0].PiecePerBit;
    var BitItemId = currentrow[0].BitItemId;
    var BitItem = currentrow[0].BitItem;
    var Size = currentrow[0].Size;
    var Color = currentrow[0].Color;

    var protype = $('input[name="BitType"]:checked').attr('value');
    if (protype == 'A') {
        if (bitfabfillvar == 'BITSZ') {
            $.each(PlanCompBitFabricDet, function () {
                this.BitSizeId = BitSizeId;
                this.BitSize = BitSize;
            });
            $.each(PlanCompFabricDetSave, function () {
                if (this.CompSlNo == compsno) {
                    this.BitSizeId = BitSizeId;
                    this.BitSize = BitSize;
                }
            });
            LoadBitFabricFill();

        }
        if (bitfabfillvar == 'BITQ') {

            $.each(PlanCompBitFabricDet, function () {
                this.PiecePerBit = PiecePerBit;
            });
            $.each(PlanCompFabricDetSave, function () {
                if (this.CompSlNo == compsno) {
                    this.PiecePerBit = PiecePerBit;
                }
            });
            LoadBitFabricFill();
        }
        if (bitfabfillvar == 'BITIT') {
            $.each(PlanCompBitFabricDet, function () {
                this.BitItemId = BitItemId;
                this.BitItem = BitItem;
            });
            $.each(PlanCompFabricDetSave, function () {
                if (this.CompSlNo == compsno) {
                    this.BitItemId = BitItemId;
                    this.BitItem = BitItem;
                }
            });
            LoadBitFabricFill();
        }

    }
    if (protype == 'S') {

        if (bitfabfillvar == 'BITSZ') {
            $.each(PlanCompBitFabricDet, function () {
                if (this.Size == Size) {
                    this.BitSizeId = BitSizeId;
                    this.BitSize = BitSize;
                }
            });
            $.each(PlanCompFabricDetSave, function () {
                if (this.CompSlNo == compsno && this.Size == Size) {
                    this.BitSizeId = BitSizeId;
                    this.BitSize = BitSize;
                }
            });
            LoadBitFabricFill();

        }


        if (bitfabfillvar == 'BITQ') {

            $.each(PlanCompBitFabricDet, function () {
                if (this.Size == Size) {
                    this.PiecePerBit = PiecePerBit;
                }
            });
            $.each(PlanCompFabricDetSave, function () {
                if (this.CompSlNo == compsno && this.Size == Size) {
                    this.PiecePerBit = PiecePerBit;
                }
            });
            LoadBitFabricFill();

        }
        if (bitfabfillvar == 'BITIT') {
            $.each(PlanCompBitFabricDet, function () {
                if (this.Size == Size) {
                    this.BitItemId = BitItemId;
                    this.BitItem = BitItem;
                }
            });
            $.each(PlanCompFabricDetSave, function () {
                if (this.CompSlNo == compsno && this.Size == Size) {
                    this.BitItemId = BitItemId;
                    this.BitItem = BitItem;
                }
            });
            LoadBitFabricFill();
        }


    }
    if (protype == 'C') {


        if (bitfabfillvar == 'BITSZ') {
            $.each(PlanCompBitFabricDet, function () {
                if (this.Color == Color) {
                    this.BitSizeId = BitSizeId;
                    this.BitSize = BitSize;
                }
            });
            $.each(PlanCompFabricDetSave, function () {
                if (this.CompSlNo == compsno && this.Color == Color) {
                    this.BitSizeId = BitSizeId;
                    this.BitSize = BitSize;
                }
            });
            LoadBitFabricFill();

        }
        if (bitfabfillvar == 'BITQ') {

            $.each(PlanCompBitFabricDet, function () {
                if (this.Color == Color) {
                    this.PiecePerBit = PiecePerBit;
                }
            });
            $.each(PlanCompFabricDetSave, function () {
                if (this.CompSlNo == compsno && this.Color == Color) {
                    this.PiecePerBit = PiecePerBit;
                }
            });
            LoadBitFabricFill();

        }
        if (bitfabfillvar == 'BITIT') {
            $.each(PlanCompBitFabricDet, function () {
                if (this.Color == Color) {
                    this.BitItemId = BitItemId;
                    this.BitItem = BitItem;
                }
            });
            $.each(PlanCompFabricDetSave, function () {
                if (this.CompSlNo == compsno && this.Color == Color) {
                    this.BitItemId = BitItemId;
                    this.BitItem = BitItem;
                }
            });
            LoadBitFabricFill();
        }
    }
}

function BitSave() {

    if (DispatchClosed == 'Y') {
        //alert('Consumption Plan has been Locked,Please Contact Administrator..');
        var msg = "Despatch Closed.Please Check It...";
        var flg = 4;
        var mo = 1;
        AlartMessage(msg, flg, mo);
        return true;
    }



    //var Fabflag = 0;
    //if (PlanLock.length > 0) {
    //    if (PlanLock[0].LockFabric == 'Y') {
    //        alert('Fabric Plan has been Locked,Please Contact Administrator..');
    //        return true;
    //    }
    //}

    var objFabConSubmit = {

        CompanyID: $('#txtHCompanyId').val(),
        Order_No: $('#txtOrderNo').val(),
        ItemID: $('#txtHItemId').val(),
        Styleid: $('#txtHStyleId').val(),
        BMasID: $('#txtBuyOrdMasId').val(),
        EDate: $('#txtEntryDate').val(),
        PlanFabricDet: PlanCompBitFabricDetSave,
        PlanID: PLID,
    };
    $("#BitAdd").attr("disabled", true);
    LoadingSymb();
    $.ajax({
        url: "/PlanningConsumption/BitFabSave",
        data: JSON.stringify(objFabConSubmit),
        type: "POST",
        contentType: "application/json;charset=utf-8",
        dataType: "json",
        success: function (result) {
            debugger;
            if (result.Value == true) {
                AddUserEntryLog('Planning', 'BIT-FORM Details', 'ADD', $('#txtWorkOrderNo').val());
                //alert("BIT-FORM Saved Sucessfully");
                var msg = "BIT-FORM Saved Sucessfully...";
                var flg = 1;
                var mo = 1;
                AlartMessage(msg, flg, mo);

                Mod = 1;
                Entrystatus($('#txtOrderNo').val(), $('#txtHStyleId').val(), $('#txtHItemId').val());
                // $('#Div1 a[href="#tab_content3"]').tab('show');

                if (Fabflag == 1) {
                    $('#BitAdd').hide();
                    $('#BitUpdate').show();
                }
            } else {
                window.location.href = "/Error/Index";
            }

        },
        error: function (errormessage) {

            alert(errormessage.responseText);
        }
    });
}

function BitUpdate() {
    if (DispatchClosed == 'Y') {
        //alert('Consumption Plan has been Locked,Please Contact Administrator..');
        var msg = "Despatch Closed.Please Check It...";
        var flg = 4;
        var mo = 1;
        AlartMessage(msg, flg, mo);
        return true;
    }

    //var Fabflag = 0;
    //if (PlanLock.length > 0) {
    //    if (PlanLock[0].LockFabric == 'Y') {
    //        alert('Fabric Plan has been Locked,Please Contact Administrator..');
    //        return true;
    //    }
    //}

    var objFabConSubmit = {

        CompanyID: $('#txtHCompanyId').val(),
        Order_No: $('#txtOrderNo').val(),
        ItemID: $('#txtHItemId').val(),
        Styleid: $('#txtHStyleId').val(),
        BMasID: $('#txtBuyOrdMasId').val(),
        EDate: $('#txtEntryDate').val(),
        PlanFabricDet: PlanCompBitFabricDetSave,
        PlanID: PLID,
    };
    $("#BitUpdate").attr("disabled", true);
    LoadingSymb();
    $.ajax({
        url: "/PlanningConsumption/BitFabUpdate",
        data: JSON.stringify(objFabConSubmit),
        type: "POST",
        contentType: "application/json;charset=utf-8",
        dataType: "json",
        success: function (result) {
            debugger;
            if (result.Value == true) {
                AddUserEntryLog('Planning', 'BIT-FORM Details', 'UPDATE', $('#txtWorkOrderNo').val());
                //alert("BIT-FORM Updated Sucessfully");
                var msg = "BIT-FORM Saved Sucessfully...";
                var flg = 1;
                var mo = 1;
                AlartMessage(msg, flg, mo);

                Mod = 1;
                Entrystatus($('#txtOrderNo').val(), $('#txtHStyleId').val(), $('#txtHItemId').val());
                //$('#Div1 a[href="#tab_content4"]').tab('show');

                if (Fabflag == 1) {
                    $('#BitAdd').hide();
                    $('#BitUpdate').show();
                }
            } else {
                window.location.href = "/Error/Index";
            }

        },
        error: function (errormessage) {

            alert(errormessage.responseText);
        }
    });
}

function BitDelete() {

    if (DispatchClosed == 'Y') {
        //alert('Consumption Plan has been Locked,Please Contact Administrator..');
        var msg = "Despatch Closed.Please Check It...";
        var flg = 4;
        var mo = 1;
        AlartMessage(msg, flg, mo);
        return true;
    }
    //var Fabflag = 0;
    //if (PlanLock.length > 0) {
    //    if (PlanLock[0].LockFabric == 'Y') {
    //        alert('Fabric Plan has been Locked,Please Contact Administrator..');
    //        return true;
    //    }
    //}

    var objFabConSubmit = {

        CompanyID: $('#txtHCompanyId').val(),
        Order_No: $('#txtOrderNo').val(),
        ItemID: $('#txtHItemId').val(),
        Styleid: $('#txtHStyleId').val(),
        BMasID: $('#txtBuyOrdMasId').val(),
        EDate: $('#txtEntryDate').val(),
        PlanFabricDet: PlanCompBitFabricDetSave,
        PlanID: PLID,
    };
    $("#BitDelete").attr("disabled", true);
    LoadingSymb();
    $.ajax({
        url: "/PlanningConsumption/BitFabUpdate",
        data: JSON.stringify(objFabConSubmit),
        type: "POST",
        contentType: "application/json;charset=utf-8",
        dataType: "json",
        success: function (result) {
            debugger;
            if (result.Value == true) {
                AddUserEntryLog('Planning', 'BIT-FORM Details', 'DELETE', $('#txtWorkOrderNo').val());
                //alert("BIT-FORM Updated Sucessfully");
                var msg = "BIT-FORM Updated Sucessfully...";
                var flg = 1;
                var mo = 1;
                AlartMessage(msg, flg, mo);

                Mod = 1;
                Entrystatus($('#txtOrderNo').val(), $('#txtHStyleId').val(), $('#txtHItemId').val());
                //$('#Div1 a[href="#tab_content4"]').tab('show');

                if (Fabflag == 1) {
                    $('#BitAdd').show();
                    $('#BitDelete').hide();
                }
            } else {
                window.location.href = "/Error/Index";
            }

        },
        error: function (errormessage) {

            alert(errormessage.responseText);
        }
    });
}


function Request() {

    ViewStock = 0;

    $('#stktransgoto').hide();
    $('#stktrans').show();

    var OrderType = 'B';

    //var OrderType = BalQtyList[0].OrderType;
    var Createdby = Guserid;
    var ToOrderno = $('#txtOrderNo').val();
    var ToStyleid = $('#txtHStyleId').val(); 
    var Transdate = today;

    debugger;

    var Stklist = [];

    $.each(ItemStockList, function (G) {


        var bomqty=0;

        $.each(TransItemlist,function(e){
            if (ItemStockList[G].ItemId == TransItemlist[e].Itemid && ItemStockList[G].ColorId == TransItemlist[e].Colorid && ItemStockList[G].SizeId == TransItemlist[e].Sizeid &&  ItemStockList[G].Uomid == TransItemlist[e].UomId) {
                bomqty = parseFloat(TransItemlist[e].Quantity) - parseFloat(TransItemlist[e].TransferinQuantity);

                ItemStockList[G].Etype = OrderType;

                ItemStockList[G].ToOrderno = ToOrderno;
                ItemStockList[G].Createdby = Guserid;
                ItemStockList[G].Transdate = Transdate;
                ItemStockList[G].ToStyle = $('#txtStyle').val();
                ItemStockList[G].Ordbalqty = bomqty;
                ItemStockList[G].Ordbalqtyval = bomqty;
                ItemStockList[G].BalStkQtyval = ItemStockList[G].StkQty;
                ItemStockList[G].ToStyleid = ToStyleid;

                }
        
                });
        
                
            });
      


    //MsgModalclose();
    //$('#myModal').modal('show');
    loadStockTransTable(ItemStockList);

}

function LoadTransStock() {
    debugger;
    var StktoOrdno = $('#txtOrderNo').val();
    var StkToStyleid = $('#txtHStyleId').val();
    $.ajax({
        url: "/Budget/GetBom",
        data: JSON.stringify({ order: StktoOrdno, stylId: StkToStyleid }),
        type: "POST",
        contentType: "application/json; charset=utf-8",
        dataType: "json",
        async: false,
        success: function (json) {
            debugger;
            //bomdet = json;

            FabricBomlist = json;

            TransItemlist = [];

            if (TransType == 'Y') {

                $.each(FabricBomlist, function (i) {
                    if (FabricBomlist[i].AccessType == 'F' && FabricBomlist[i].itmtype == 'YARN') {
                        TransItemlist.push(FabricBomlist[i]);
                    }
                });

            }

            if (TransType == 'F') {

                $.each(FabricBomlist, function (i) {
                    if (FabricBomlist[i].AccessType == 'F' && FabricBomlist[i].itmtype == 'FABRIC') {
                        TransItemlist.push(FabricBomlist[i]);
                    }
                });

            }


            ItemStockList = [];

            $.each(TransItemlist, function (i) {

            var Compid = $('#txtHCompanyId').val();
            $.ajax({
                url: "/StockTransfer/GetPurchaseStockDet",
                data: JSON.stringify({ Compid: Compid, Itemid: TransItemlist[i].Itemid, Colorid: TransItemlist[i].Colorid, Sizeid: TransItemlist[i].Sizeid, Uomid: TransItemlist[i].uomid }),
                type: "POST",
                contentType: "application/json;charset=utf-8",
                dataType: "json",
                async: false,
                success: function (result) {
                    debugger;
                    var obj = [];
                    obj = result.Value;
                   
                    $.each(obj, function (i) {
                        ItemStockList.push(obj[i]);

                    });

                },
                failure: function (errMsg) {
                    alert(errMsg);
                }
            });


            });



            if (TransType == 'F') {

                if (ItemStockList.length > 0) {
                    var flg = 4;
                    var mo = 1;
                    LoadAmendstatus();

                    var msg = "Fabric updated Sucessfully. Planned Fabric is available in Stock, Do you want to see the details?";
                    var flg = 6;
                    AlartMessage(msg, flg);
                } else {

                    //alert("Fabric Updated Sucessfully");
                    var msg = 'Fabric Updated Sucessfully...';
                    var flg = 4;
                    var mo = 1;
                    AlartMessage(msg, flg, mo);
                    $('#Div1 a[href="#tab_content3"]').tab('show');
                    LoadAmendstatus();

                }



            }

            else if (TransType == 'Y') {

                if (ItemStockList.length > 0) {
                    var flg = 4;
                    var mo = 1;
                    LoadAmendstatus();

                    var msg = "Fabric updated Sucessfully. Planned Fabric is available in Stock, Do you want to see the details?";
                    var flg = 6;
                    AlartMessage(msg, flg);
                } else {

                    //alert("Fabric Updated Sucessfully");
                    var msg = 'Fabric Updated Sucessfully...';
                    var flg = 4;
                    var mo = 1;
                    AlartMessage(msg, flg, mo);
                    $('#Div1 a[href="#tab_content3"]').tab('show');
                    LoadAmendstatus();

                }



            }
         

        }

    });


}



function MsgModalconfirm() {


    if (TransStage != 'FABSAVE') {

        MsgModalclose();
        ViewStock = 1;
        StockTranferMode = 1;


        $('#stktransgoto').show();
        $('#stktrans').hide();

        var StktoOrdno = $('#txtOrderNo').val();
        var StkToStyleid = $('#txtHStyleId').val();

        ItemStockList = $.grep(ItemStockList, function (v) {
            return (v.OrderNo != StktoOrdno && v.Styleid != StkToStyleid);
        });

        loadStockTransTable(ItemStockList)

        $('#myModalStock').modal('show');
    } else {

        MsgModalclose();
        $('#myModal2').modal('show');
        $('#finishcolor').hide(); 
        $('#basecolor').hide();
        $('#Fabrictext').hide();
        $('#basetotal').hide();
        $('#lblfabricmsg').show();
        $('#btnok').show();
        $('#btncls').hide();

        loadBaseStockTable(FabricStockcheck);

    }

}


function CheckfabricStock() {


    FabricStockcheck = [];


    var BaseArray = [];
    $.each(PlanCompFabricDetSave, function (key, value) {
        var exists = false;
        var rate = 0;
        $.each(BaseArray, function (k, val2) {
            if (value.FabricID == val2.FabricID && value.BColorID == val2.BColorID && value.GreyWidthID == val2.GreyWidthID ) { exists = true; };
        });

        if (exists == false && value.FabricID != "" && value.BColorID != "" && value.GreyWidthID) { BaseArray.push(value); }
    });
    


    var FinishArray = [];
    $.each(PlanCompFabricDetSave, function (key, value) {
        var exists = false;
        var rate = 0;
        $.each(FinishArray, function (k, val2) {
            if (value.FabricID == val2.FabricID && value.FColorID == val2.FColorID && value.FinishWidthID == val2.FinishWidthID) { exists = true; };
        });

        if (exists == false && value.FabricID != "" && value.FColorID != "" && value.FinishWidthID) { FinishArray.push(value); }
    });


    FabricStockcheck = [];

    $.each(BaseArray, function (i) {

        $.ajax({
            url: "/PlanningConsumption/LoadStockDetails",
            data: JSON.stringify({ Itemid: BaseArray[i].FabricID, Sizeid: BaseArray[i].GreyWidthID, Colorid: BaseArray[i].BColorID }),
            type: "POST",
            async: false,
            contentType: "application/json;charset=utf-8",
            dataType: "json",
            success: function (result) {
                debugger;
                var obj = result;
                FabricStockcheck = result;
            },
            failure: function (errMsg) {
                alert(errMsg);
            }
        });


    });



    $.each(FinishArray, function (i) {

        $.ajax({
            url: "/PlanningConsumption/LoadStockDetails",
            data: JSON.stringify({ Itemid: BaseArray[i].FabricID, Sizeid: BaseArray[i].GreyWidthID, Colorid: BaseArray[i].BColorID }),
            type: "POST",
            async: false,
            contentType: "application/json;charset=utf-8",
            dataType: "json",
            success: function (result) {
                debugger;
                var obj = result;
              
                $.each(result, function (k) {
                    FabricStockcheck.push(result[k]);
                });

                var StkArray = [];
                $.each(FabricStockcheck, function (key, value) {
                    var exists = false;
                    var rate = 0;
                    $.each(StkArray, function (k, val2) {
                        if (value.SStockid == val2.SStockid ) { exists = true; };
                    });

                    if (exists == false && value.SStockid != "" ) { StkArray.push(value); }
                });


                FabricStockcheck = StkArray;

            },
            failure: function (errMsg) {
                alert(errMsg);
            }
        });


    });



}

function FabPurok() {

    Yplan = 'N';
    Mod = 1;

    $('#myModal2').modal('hide');
    
    $('#FabAdd').hide();
    $('#FabUpdate').show();
    Entrystatus($('#txtOrderNo').val(), $('#txtHStyleId').val(), $('#txtHItemId').val());
    //$('#Div1 a[href="#tab_content3"]').tab('show');

}

function MsgCancel() {
    debugger;
    cancelflg = 1;

    if (TransType == 'Y') {

        MsgModalclose();

    }
    else if (TransType == 'F') {

        if (TransStage == 'FABSAVE') {

            Yplan = 'N';
            Mod = 1;
            MsgModalclose();

           
            LoadAmendstatus();


            Entrystatus($('#txtOrderNo').val(), $('#txtHStyleId').val(), $('#txtHItemId').val());
            $('#Div1 a[href="#tab_content3"]').tab('show');

            $('#FabAdd').hide();
            $('#FabUpdate').show();


        } else {


            MsgModalclose();

            fabupflag = 1;
            LoadAmendstatus();
        }

    }

}